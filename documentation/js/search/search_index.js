var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.116,1,2.943]],["body/controllers/AppController.html",[0,1.997,1,5.268,2,1.694,3,0.145,4,0.125,5,0.125,6,5.372,7,0.145,8,0.012,9,0.991,10,0.145,11,0.092,12,0.009,13,0.011,14,0.009]],["title/modules/AppModule.html",[15,1.116,16,2.943]],["body/modules/AppModule.html",[1,4.079,2,1.308,3,0.077,4,0.066,5,0.066,7,0.188,8,0.013,9,0.523,10,0.077,11,0.049,12,0.005,13,0.007,14,0.005,15,1.546,16,6.042,17,1.308,18,1.308,19,1.413,20,1.413,21,1.308,22,2.066,23,1.413,24,2.837,25,2.837,26,4.643,27,4.643,28,4.643,29,4.643,30,4.643,31,4.643,32,4.643,33,4.643,34,4.643,35,4.643,36,4.643,37,4.357,38,2.066,39,1.413,40,1.413,41,3.25,42,2.15,43,3.25,44,1.533,45,0.988,46,2.198,47,2.564,48,3.25,49,3.25,50,3.25,51,3.25,52,3.25,53,3.25,54,3.25,55,3.25,56,3.25,57,3.25,58,3.25,59,3.25,60,3.25,61,3.25,62,3.25,63,4.431,64,3.25,65,3.25,66,3.25,67,2.361]],["title/controllers/AuthController.html",[0,1.116,68,2.943]],["body/controllers/AuthController.html",[0,1.774,2,1.397,3,0.12,4,0.103,5,0.103,7,0.167,8,0.013,9,0.817,10,0.12,11,0.076,12,0.008,13,0.01,14,0.008,68,4.681,69,4.43,70,0.359,71,1.834,72,2.015,73,5.625,74,5.076,75,1.11,76,5.076,77,0.679,78,5.076,79,1.444,80,1.444,81,0.379,82,1.444,83,6.446,84,1.444,85,2.394,86,4.43,87,2.394,88,4.243,89,4.004,90,3.686,91,4.004,92,4.43,93,2.122,94,1.543,95,5.076,96,5.076,97,5.076,98,1.444,99,5.076]],["title/modules/AuthModule.html",[15,1.116,26,2.741]],["body/modules/AuthModule.html",[2,1.553,3,0.098,4,0.084,5,0.084,7,0.185,8,0.013,9,0.667,10,0.098,11,0.062,12,0.006,13,0.008,14,0.006,15,1.765,17,1.668,18,1.668,19,1.802,20,1.802,21,1.668,22,2.788,23,1.802,26,5.457,37,4.715,38,2.452,39,1.802,40,1.802,42,2.553,68,4.658,88,4.45,89,3.27,100,3.617,101,3.617,102,4.145,103,5.024,104,5.024,105,4.145,106,4.145,107,4.145,108,4.145,109,4.145,110,4.145,111,3.27,112,4.923,113,2.483,114,3.01,115,3.617,116,4.145,117,3.617,118,3.617,119,4.145,120,4.145,121,4.145]],["title/injectables/AuthService.html",[88,2.428,122,0.916]],["body/injectables/AuthService.html",[3,0.091,4,0.078,5,0.078,7,0.166,8,0.013,9,0.621,10,0.091,11,0.058,12,0.006,13,0.008,14,0.006,46,2.609,47,3.043,63,3.043,70,0.273,71,1.527,72,2.068,73,4.686,77,0.827,79,1.757,80,1.757,81,0.461,82,1.757,84,1.527,88,3.216,93,2.245,94,1.632,98,1.757,111,3.043,122,1.214,123,1.496,124,3.366,125,5.369,126,3.857,127,4.353,128,7.456,129,3.857,130,5.369,131,3.857,132,3.507,133,5.369,134,0.633,135,6.176,136,3.857,137,3.857,138,3.857,139,4.235,140,3.022,141,1.632,142,3.857,143,4.686,144,3.857,145,3.857,146,3.857,147,1.688,148,1.136,149,3.507,150,3.857,151,3.366,152,3.857,153,3.857,154,3.857,155,3.857,156,3.857]],["title/interfaces/Categoria.html",[157,1.274,158,2.088]],["body/interfaces/Categoria.html",[3,0.123,4,0.106,5,0.106,7,0.123,8,0.012,10,0.123,12,0.008,13,0.01,14,0.008,70,0.368,81,0.562,134,0.69,148,1.591,157,1.636,158,3.373,159,2.454,160,4.541,161,2.738,162,3.529,163,1.017,164,2.364,165,2.211,166,1.645,167,1.73,168,1.636]],["title/controllers/CategoriasController.html",[0,1.116,169,2.943]],["body/controllers/CategoriasController.html",[0,0.909,2,0.909,3,0.078,4,0.067,5,0.067,7,0.156,8,0.013,9,0.532,10,0.078,11,0.05,12,0.005,13,0.007,14,0.005,70,0.233,71,1.367,72,2.26,75,1.447,77,0.886,79,1.771,80,1.771,81,0.465,82,1.771,84,1.882,85,1.558,87,2.673,94,1.004,98,1.612,134,0.649,141,1.893,147,2.24,158,1.701,169,3.491,170,2.882,171,1.626,172,3.302,173,4.946,174,6.225,175,4.195,176,4.946,177,4.946,178,3.302,179,4.669,180,2.367,181,3.302,182,2.378,183,3.302,184,2.882,185,2.367,186,3.302,187,2.882,188,4.669,189,3.302,190,2.882,191,2.367,192,3.302,193,2.791,194,1.563,195,1.626,196,1.626,197,1.626,198,1.074,199,4.195,200,1.074,201,3.597,202,2.882,203,2.882,204,3.302,205,1.563,206,0.971,207,3.302,208,1.558,209,3.302,210,3.302,211,3.302,212,3.302,213,2.367,214,3.302,215,3.302,216,3.302,217,3.302]],["title/modules/CategoriasModule.html",[15,1.116,27,2.741]],["body/modules/CategoriasModule.html",[2,1.706,3,0.113,4,0.097,5,0.097,7,0.178,8,0.013,9,0.769,10,0.113,11,0.072,12,0.007,13,0.009,14,0.007,15,1.894,17,1.922,18,1.922,19,2.075,20,2.075,21,1.922,22,2.991,23,2.991,27,5.325,38,2.694,39,2.075,40,2.075,42,2.16,44,2.252,45,1.451,158,2.459,169,4.997,201,5.233,202,4.166,218,4.166,219,4.166,220,4.166,221,4.774,222,4.774,223,4.889,224,4.774,225,2.351,226,2.351]],["title/injectables/CategoriasService.html",[122,0.916,201,2.572]],["body/injectables/CategoriasService.html",[3,0.068,4,0.059,5,0.059,7,0.155,8,0.013,9,0.467,10,0.068,11,0.044,12,0.004,13,0.007,14,0.004,45,0.881,70,0.205,71,1.242,72,2.21,77,0.915,79,1.782,80,1.782,81,0.468,82,1.782,84,1.782,93,1.825,94,1.776,98,1.493,122,0.987,123,1.124,134,0.627,140,2.643,141,2.077,147,2.262,158,1.493,163,0.678,168,0.911,173,3.809,175,3.809,176,3.809,177,3.809,179,4.62,182,2.305,184,3.809,187,3.809,188,4.237,190,3.809,194,1.9,198,0.943,199,3.809,200,0.943,201,2.77,203,2.53,205,1.9,206,1.936,227,2.53,228,5.841,229,2.899,230,2.877,231,2.899,232,4.364,233,4.364,234,2.899,235,2.899,236,2.899,237,2.899,238,2.899,239,1.367,240,1.367,241,4.364,242,2.899,243,1.427,244,1.427,245,2.899,246,5.841,247,2.899,248,2.899,249,1.427,250,1.427,251,1.427,252,5.841,253,5.249,254,2.476,255,5.249,256,2.585,257,2.585,258,2.585,259,2.585,260,2.899,261,1.427,262,2.899,263,2.899,264,2.899]],["title/interfaces/Cidade.html",[157,1.274,265,2.572]],["body/interfaces/Cidade.html",[3,0.119,4,0.102,5,0.102,7,0.119,8,0.012,10,0.119,12,0.008,13,0.01,14,0.008,70,0.356,81,0.573,134,0.71,148,1.573,157,1.585,159,2.377,161,2.683,162,3.477,163,0.997,164,2.337,166,1.626,167,1.716,168,1.585,265,4.073,266,4.399,267,6.486,268,4.452]],["title/controllers/CidadesController.html",[0,1.116,269,2.943]],["body/controllers/CidadesController.html",[0,0.909,2,0.909,3,0.078,4,0.067,5,0.067,7,0.156,8,0.013,9,0.532,10,0.078,11,0.05,12,0.005,13,0.007,14,0.005,70,0.233,71,1.367,72,2.26,75,1.447,77,0.886,79,1.771,80,1.771,81,0.465,82,1.771,84,1.882,85,1.558,87,2.673,94,1.004,98,1.612,134,0.649,141,1.893,147,2.24,171,1.626,180,2.367,182,2.378,185,2.367,191,2.367,193,2.791,194,1.563,195,1.626,196,1.626,197,1.626,198,1.074,200,1.074,205,1.563,206,0.971,208,1.558,213,2.367,265,2.096,269,3.491,270,2.882,271,3.302,272,4.946,273,6.225,274,4.195,275,4.946,276,4.946,277,3.302,278,4.669,279,3.302,280,3.302,281,2.882,282,3.302,283,2.882,284,4.669,285,3.302,286,2.882,287,3.302,288,4.195,289,3.597,290,2.882,291,2.882,292,3.302,293,3.302,294,3.302,295,3.302,296,3.302,297,3.302,298,3.302,299,3.302,300,3.302,301,3.302]],["title/modules/CidadesModule.html",[15,1.116,28,2.741]],["body/modules/CidadesModule.html",[2,1.706,3,0.113,4,0.097,5,0.097,7,0.178,8,0.013,9,0.769,10,0.113,11,0.072,12,0.007,13,0.009,14,0.007,15,1.894,17,1.922,18,1.922,19,2.075,20,2.075,21,1.922,22,2.991,23,2.991,28,5.325,38,2.694,39,2.075,40,2.075,42,2.16,44,2.252,45,1.451,225,2.351,226,2.351,265,3.03,269,4.997,289,5.233,290,4.166,302,4.166,303,4.166,304,4.166,305,4.774,306,4.774,307,4.889,308,4.774]],["title/injectables/CidadesService.html",[122,0.916,289,2.572]],["body/injectables/CidadesService.html",[3,0.068,4,0.059,5,0.059,7,0.155,8,0.013,9,0.467,10,0.068,11,0.044,12,0.004,13,0.007,14,0.004,45,0.881,70,0.205,71,1.242,72,2.21,77,0.915,79,1.782,80,1.782,81,0.468,82,1.782,84,1.782,93,1.825,94,1.776,98,1.493,122,0.987,123,1.124,134,0.627,140,2.643,141,2.077,147,2.262,163,0.678,168,0.911,182,2.305,194,1.9,198,0.943,200,0.943,205,1.9,206,1.936,230,2.877,239,1.367,240,1.367,243,1.427,244,1.427,249,1.427,250,1.427,251,1.427,254,2.476,256,2.585,257,2.585,258,2.585,259,2.585,261,1.427,265,1.84,272,3.809,274,3.809,275,3.809,276,3.809,278,4.62,281,3.809,283,3.809,284,4.237,286,3.809,288,3.809,289,2.77,291,2.53,309,2.53,310,5.841,311,2.899,312,2.899,313,4.364,314,4.364,315,2.899,316,2.899,317,2.899,318,2.899,319,2.899,320,4.364,321,2.899,322,2.899,323,5.841,324,2.899,325,2.899,326,5.841,327,5.249,328,5.249,329,2.899,330,2.899,331,2.899,332,2.899]],["title/interfaces/Cliente.html",[157,1.274,333,2.572]],["body/interfaces/Cliente.html",[3,0.123,4,0.106,5,0.106,7,0.123,8,0.012,10,0.123,12,0.008,13,0.01,14,0.008,70,0.368,81,0.562,134,0.69,148,1.591,157,1.636,159,2.454,161,2.738,162,3.529,163,1.017,164,2.364,166,1.645,167,1.73,168,1.636,333,4.156,334,4.541,335,2.714]],["title/controllers/ClientesController.html",[0,1.116,336,2.943]],["body/controllers/ClientesController.html",[0,0.909,2,0.909,3,0.078,4,0.067,5,0.067,7,0.156,8,0.013,9,0.532,10,0.078,11,0.05,12,0.005,13,0.007,14,0.005,70,0.233,71,1.367,72,2.26,75,1.447,77,0.886,79,1.771,80,1.771,81,0.465,82,1.771,84,1.882,85,1.558,87,2.673,94,1.004,98,1.612,134,0.649,141,1.893,147,2.24,171,1.626,180,2.367,182,2.378,185,2.367,191,2.367,193,2.791,194,1.563,195,1.626,196,1.626,197,1.626,198,1.074,200,1.074,205,1.563,206,0.971,208,1.558,213,2.367,333,2.096,336,3.491,337,2.882,338,3.302,339,4.946,340,6.225,341,4.195,342,4.946,343,4.946,344,3.302,345,4.669,346,3.302,347,3.302,348,2.882,349,3.302,350,2.882,351,4.669,352,3.302,353,2.882,354,3.302,355,4.195,356,3.597,357,2.882,358,2.882,359,3.302,360,3.302,361,3.302,362,3.302,363,3.302,364,3.302,365,3.302,366,3.302,367,3.302,368,3.302]],["title/modules/ClientesModule.html",[15,1.116,29,2.741]],["body/modules/ClientesModule.html",[2,1.706,3,0.113,4,0.097,5,0.097,7,0.178,8,0.013,9,0.769,10,0.113,11,0.072,12,0.007,13,0.009,14,0.007,15,1.894,17,1.922,18,1.922,19,2.075,20,2.075,21,1.922,22,2.991,23,2.991,29,5.325,38,2.694,39,2.075,40,2.075,42,2.16,44,2.252,45,1.451,225,2.351,226,2.351,333,3.03,336,4.997,356,5.233,357,4.166,369,4.166,370,4.166,371,4.166,372,4.774,373,4.774,374,4.889,375,4.774]],["title/injectables/ClientesService.html",[122,0.916,356,2.572]],["body/injectables/ClientesService.html",[3,0.068,4,0.059,5,0.059,7,0.155,8,0.013,9,0.467,10,0.068,11,0.044,12,0.004,13,0.007,14,0.004,45,0.881,70,0.205,71,1.242,72,2.21,77,0.915,79,1.782,80,1.782,81,0.468,82,1.782,84,1.782,93,1.825,94,1.776,98,1.493,122,0.987,123,1.124,134,0.627,140,2.643,141,2.077,147,2.262,163,0.678,168,0.911,182,2.305,194,1.9,198,0.943,200,0.943,205,1.9,206,1.936,230,2.877,239,1.367,240,1.367,243,1.427,244,1.427,249,1.427,250,1.427,251,1.427,254,2.476,256,2.585,257,2.585,258,2.585,259,2.585,261,1.427,333,1.84,339,3.809,341,3.809,342,3.809,343,3.809,345,4.62,348,3.809,350,3.809,351,4.237,353,3.809,355,3.809,356,2.77,358,2.53,376,2.53,377,5.841,378,2.899,379,2.899,380,4.364,381,4.364,382,2.899,383,2.899,384,2.899,385,2.899,386,2.899,387,4.364,388,2.899,389,2.899,390,5.841,391,2.899,392,2.899,393,5.841,394,5.249,395,5.249,396,2.899,397,2.899,398,2.899,399,2.899]],["title/classes/CreateCategoriaDto.html",[11,0.061,188,2.741]],["body/classes/CreateCategoriaDto.html",[3,0.119,4,0.102,5,0.102,7,0.119,8,0.013,10,0.119,11,0.076,12,0.008,13,0.01,14,0.008,70,0.356,75,1.404,77,0.995,81,0.555,134,0.648,148,1.494,163,0.997,164,2.22,165,2.076,166,1.544,167,1.626,188,4.34,400,1.585,401,6.698,402,3.976,403,4.399,404,2.496,405,4.399,406,4.399,407,5.04,408,1.585]],["title/classes/CreateCidadeDto.html",[11,0.061,284,2.741]],["body/classes/CreateCidadeDto.html",[3,0.113,4,0.098,5,0.098,7,0.113,8,0.013,10,0.113,11,0.072,12,0.007,13,0.009,14,0.007,70,0.34,75,1.51,77,1.012,81,0.565,134,0.675,148,1.461,163,0.967,164,2.17,166,1.51,167,1.597,268,4.135,284,4.209,400,1.511,404,2.565,408,1.511,409,6.762,410,3.791,411,3.919,412,4.194,413,4.194,414,4.194,415,4.194,416,4.806]],["title/classes/CreateClienteDto.html",[11,0.061,351,2.741]],["body/classes/CreateClienteDto.html",[3,0.081,4,0.07,5,0.07,7,0.081,8,0.013,10,0.081,11,0.052,12,0.005,13,0.007,14,0.005,70,0.244,75,1.692,77,1.056,81,0.589,134,0.666,148,1.23,163,0.771,164,1.827,166,1.271,167,1.533,351,3.357,400,1.085,404,2.69,408,1.085,417,6.934,418,2.723,419,5.072,420,5.072,421,5.072,422,5.072,423,5.072,424,3.3,425,5.072,426,5.072,427,5.072,428,5.072,429,4.126,430,3.013,431,3.013,432,3.013,433,3.013,434,3.013,435,3.013,436,3.013,437,3.013,438,3.013,439,3.013,440,3.013,441,3.013,442,3.452,443,3.013,444,4.332,445,3.013,446,3.013,447,3.013]],["title/classes/CreateEstadoDto.html",[11,0.061,448,2.741]],["body/classes/CreateEstadoDto.html",[3,0.119,4,0.102,5,0.102,7,0.119,8,0.013,10,0.119,11,0.076,12,0.008,13,0.01,14,0.008,70,0.356,75,1.404,77,0.995,81,0.555,134,0.648,148,1.494,163,0.997,164,2.22,166,1.544,167,1.626,268,4.229,400,1.585,404,2.496,408,1.585,448,4.34,449,6.698,450,3.976,451,4.399,452,4.399,453,4.399,454,5.04]],["title/classes/CreateFornecedorDto.html",[11,0.061,455,2.741]],["body/classes/CreateFornecedorDto.html",[3,0.119,4,0.102,5,0.102,7,0.119,8,0.013,10,0.119,11,0.076,12,0.008,13,0.01,14,0.008,70,0.356,75,1.404,77,0.995,81,0.555,134,0.648,148,1.494,163,0.997,164,2.22,165,2.076,166,1.544,167,1.626,400,1.585,404,2.496,408,1.585,455,4.34,456,6.698,457,3.976,458,4.399,459,4.399,460,4.399,461,5.04]],["title/classes/CreateOrigemDto.html",[11,0.061,462,2.741]],["body/classes/CreateOrigemDto.html",[3,0.119,4,0.102,5,0.102,7,0.119,8,0.013,10,0.119,11,0.076,12,0.008,13,0.01,14,0.008,70,0.356,75,1.404,77,0.995,81,0.555,134,0.559,148,1.494,163,0.997,164,2.22,165,2.076,166,1.544,167,1.626,400,1.585,404,2.496,408,1.585,429,3.466,462,4.34,463,6.698,464,3.976,465,4.399,466,4.399,467,4.399,468,5.04]],["title/classes/CreateProdutoDto.html",[11,0.061,469,2.741]],["body/classes/CreateProdutoDto.html",[3,0.1,4,0.086,5,0.086,7,0.1,8,0.013,10,0.1,11,0.063,12,0.006,13,0.009,14,0.006,70,0.298,75,1.634,77,1.04,81,0.58,134,0.694,148,1.369,158,3.333,163,0.887,164,2.034,165,1.903,166,1.415,167,1.517,335,2.335,400,1.326,404,2.649,408,1.326,429,3.083,469,3.86,470,6.871,471,3.327,472,3.333,473,4.699,474,3.68,475,3.68,476,3.68,477,3.68,478,3.68,479,3.68,480,4.217,481,3.68]],["title/classes/CreateProfissaoDto.html",[11,0.061,482,2.741]],["body/classes/CreateProfissaoDto.html",[3,0.119,4,0.102,5,0.102,7,0.119,8,0.013,10,0.119,11,0.076,12,0.008,13,0.01,14,0.008,70,0.356,75,1.404,77,0.995,81,0.555,134,0.648,148,1.494,163,0.997,164,2.22,165,2.076,166,1.544,167,1.626,400,1.585,404,2.496,408,1.585,482,4.34,483,6.698,484,3.976,485,4.399,486,4.399,487,4.399,488,5.04]],["title/classes/CreateStatusDto.html",[11,0.061,489,2.741]],["body/classes/CreateStatusDto.html",[3,0.119,4,0.102,5,0.102,7,0.119,8,0.013,10,0.119,11,0.076,12,0.008,13,0.01,14,0.008,70,0.356,75,1.404,77,0.995,81,0.555,134,0.648,148,1.494,163,0.997,164,2.22,166,1.544,167,1.626,335,2.548,400,1.585,404,2.496,408,1.585,489,4.34,490,6.698,491,3.976,492,4.399,493,4.399,494,4.399,495,5.04]],["title/classes/CreateTipoDto.html",[11,0.061,496,2.741]],["body/classes/CreateTipoDto.html",[3,0.119,4,0.102,5,0.102,7,0.119,8,0.013,10,0.119,11,0.076,12,0.008,13,0.01,14,0.008,70,0.356,75,1.404,77,0.995,81,0.555,134,0.648,148,1.494,163,0.997,164,2.22,166,1.544,167,1.626,335,2.548,400,1.585,404,2.496,408,1.585,496,4.34,497,6.698,498,3.976,499,4.399,500,4.399,501,4.399,502,5.04]],["title/classes/CreateUserDto.html",[11,0.061,503,2.741]],["body/classes/CreateUserDto.html",[3,0.101,4,0.087,5,0.087,7,0.101,8,0.013,10,0.101,11,0.064,12,0.006,13,0.009,14,0.006,70,0.303,75,1.678,77,1.027,81,0.573,134,0.696,148,1.382,149,3.707,163,0.897,164,2.053,165,1.92,166,1.428,167,1.528,335,2.356,400,1.35,404,2.683,408,1.35,503,3.906,504,6.806,505,3.386,506,4.144,507,4.292,508,3.746,509,3.746,510,3.746,511,3.746,512,3.746,513,4.292]],["title/interfaces/Estado.html",[157,1.274,411,2.301]],["body/interfaces/Estado.html",[3,0.123,4,0.106,5,0.106,7,0.123,8,0.012,10,0.123,12,0.008,13,0.01,14,0.008,70,0.368,81,0.562,134,0.69,148,1.591,157,1.636,159,2.454,161,2.738,162,3.529,163,1.017,164,2.364,166,1.645,167,1.73,168,1.636,268,4.504,411,3.718,514,4.541]],["title/controllers/EstadosController.html",[0,1.116,515,2.943]],["body/controllers/EstadosController.html",[0,0.909,2,0.909,3,0.078,4,0.067,5,0.067,7,0.156,8,0.013,9,0.532,10,0.078,11,0.05,12,0.005,13,0.007,14,0.005,70,0.233,71,1.367,72,2.26,75,1.447,77,0.886,79,1.771,80,1.771,81,0.465,82,1.771,84,1.882,85,1.558,87,2.673,94,1.004,98,1.612,134,0.649,141,1.893,147,2.24,171,1.626,180,2.367,182,2.378,185,2.367,191,2.367,193,2.791,194,1.563,195,1.626,196,1.626,197,1.626,198,1.074,200,1.074,205,1.563,206,0.971,208,1.558,213,2.367,411,1.875,448,4.669,515,3.491,516,2.882,517,3.302,518,4.946,519,6.225,520,4.195,521,4.946,522,4.946,523,3.302,524,4.669,525,3.302,526,3.302,527,2.882,528,3.302,529,2.882,530,3.302,531,2.882,532,3.302,533,4.195,534,3.597,535,2.882,536,2.882,537,3.302,538,3.302,539,3.302,540,3.302,541,3.302,542,3.302,543,3.302,544,3.302,545,3.302,546,3.302]],["title/modules/EstadosModule.html",[15,1.116,30,2.741]],["body/modules/EstadosModule.html",[2,1.706,3,0.113,4,0.097,5,0.097,7,0.178,8,0.013,9,0.769,10,0.113,11,0.072,12,0.007,13,0.009,14,0.007,15,1.894,17,1.922,18,1.922,19,2.075,20,2.075,21,1.922,22,2.991,23,2.991,30,5.325,38,2.694,39,2.075,40,2.075,42,2.16,44,2.252,45,1.451,225,2.351,226,2.351,411,2.711,515,4.997,534,5.233,535,4.166,547,4.166,548,4.166,549,4.166,550,4.774,551,4.774,552,4.889,553,4.774]],["title/injectables/EstadosService.html",[122,0.916,534,2.572]],["body/injectables/EstadosService.html",[3,0.068,4,0.059,5,0.059,7,0.155,8,0.013,9,0.467,10,0.068,11,0.044,12,0.004,13,0.007,14,0.004,45,0.881,70,0.205,71,1.242,72,2.21,77,0.915,79,1.782,80,1.782,81,0.468,82,1.782,84,1.782,93,1.825,94,1.776,98,1.493,122,0.987,123,1.124,134,0.627,140,2.643,141,2.077,147,2.262,163,0.678,168,0.911,182,2.305,194,1.9,198,0.943,200,0.943,205,1.9,206,1.936,230,2.877,239,1.367,240,1.367,243,1.427,244,1.427,249,1.427,250,1.427,251,1.427,254,2.476,256,2.585,257,2.585,258,2.585,259,2.585,261,1.427,411,1.646,448,4.237,518,3.809,520,3.809,521,3.809,522,3.809,524,4.62,527,3.809,529,3.809,531,3.809,533,3.809,534,2.77,536,2.53,554,2.53,555,5.841,556,2.899,557,2.899,558,4.364,559,4.364,560,2.899,561,2.899,562,2.899,563,2.899,564,2.899,565,4.364,566,2.899,567,2.899,568,5.841,569,2.899,570,2.899,571,5.841,572,5.249,573,5.249,574,2.899,575,2.899,576,2.899,577,2.899]],["title/interfaces/Fornecedor.html",[157,1.274,472,2.088]],["body/interfaces/Fornecedor.html",[3,0.123,4,0.106,5,0.106,7,0.123,8,0.012,10,0.123,12,0.008,13,0.01,14,0.008,70,0.368,81,0.562,134,0.69,148,1.591,157,1.636,159,2.454,161,2.738,162,3.529,163,1.017,164,2.364,165,2.211,166,1.645,167,1.73,168,1.636,472,3.373,578,4.541]],["title/controllers/FornecedoresController.html",[0,1.116,579,2.943]],["body/controllers/FornecedoresController.html",[0,0.909,2,0.909,3,0.078,4,0.067,5,0.067,7,0.156,8,0.013,9,0.532,10,0.078,11,0.05,12,0.005,13,0.007,14,0.005,70,0.233,71,1.367,72,2.26,75,1.447,77,0.886,79,1.771,80,1.771,81,0.465,82,1.771,84,1.882,85,1.558,87,2.673,94,1.004,98,1.612,134,0.649,141,1.893,147,2.24,171,1.626,180,2.367,182,2.378,185,2.367,191,2.367,193,2.791,194,1.563,195,1.626,196,1.626,197,1.626,198,1.074,200,1.074,205,1.563,206,0.971,208,1.558,213,2.367,455,4.669,472,1.701,579,3.491,580,2.882,581,3.302,582,4.946,583,6.225,584,4.195,585,4.946,586,4.946,587,3.302,588,4.669,589,3.302,590,3.302,591,2.882,592,3.302,593,2.882,594,3.302,595,2.882,596,3.302,597,4.195,598,3.597,599,2.882,600,2.882,601,3.302,602,3.302,603,3.302,604,3.302,605,3.302,606,3.302,607,3.302,608,3.302,609,3.302,610,3.302]],["title/modules/FornecedoresModule.html",[15,1.116,31,2.741]],["body/modules/FornecedoresModule.html",[2,1.706,3,0.113,4,0.097,5,0.097,7,0.178,8,0.013,9,0.769,10,0.113,11,0.072,12,0.007,13,0.009,14,0.007,15,1.894,17,1.922,18,1.922,19,2.075,20,2.075,21,1.922,22,2.991,23,2.991,31,5.325,38,2.694,39,2.075,40,2.075,42,2.16,44,2.252,45,1.451,225,2.351,226,2.351,472,2.459,579,4.997,598,5.233,599,4.166,611,4.166,612,4.166,613,4.166,614,4.774,615,4.774,616,4.889,617,4.774]],["title/injectables/FornecedoresService.html",[122,0.916,598,2.572]],["body/injectables/FornecedoresService.html",[3,0.068,4,0.059,5,0.059,7,0.155,8,0.013,9,0.467,10,0.068,11,0.044,12,0.004,13,0.007,14,0.004,45,0.881,70,0.205,71,1.242,72,2.21,77,0.915,79,1.782,80,1.782,81,0.468,82,1.782,84,1.782,93,1.825,94,1.776,98,1.493,122,0.987,123,1.124,134,0.627,140,2.643,141,2.077,147,2.262,163,0.678,168,0.911,182,2.305,194,1.9,198,0.943,200,0.943,205,1.9,206,1.936,230,2.877,239,1.367,240,1.367,243,1.427,244,1.427,249,1.427,250,1.427,251,1.427,254,2.476,256,2.585,257,2.585,258,2.585,259,2.585,261,1.427,455,4.237,472,1.493,582,3.809,584,3.809,585,3.809,586,3.809,588,4.62,591,3.809,593,3.809,595,3.809,597,3.809,598,2.77,600,2.53,618,2.53,619,5.841,620,2.899,621,2.899,622,4.364,623,4.364,624,2.899,625,2.899,626,2.899,627,2.899,628,2.899,629,4.364,630,2.899,631,2.899,632,5.841,633,2.899,634,2.899,635,5.841,636,5.249,637,5.249,638,2.899,639,2.899,640,2.899,641,2.899]],["title/injectables/JwtAuthGuard.html",[122,0.916,642,2.943]],["body/injectables/JwtAuthGuard.html",[3,0.14,4,0.121,5,0.121,7,0.168,8,0.012,9,0.958,10,0.14,11,0.089,12,0.009,13,0.011,14,0.009,113,3.566,122,1.608,123,2.309,161,2.489,642,5.165,643,4.696,644,4.696,645,5.195,646,5.953]],["title/injectables/JwtStrategy.html",[103,2.741,122,0.916]],["body/injectables/JwtStrategy.html",[3,0.114,4,0.098,5,0.098,7,0.173,8,0.013,9,0.776,10,0.114,11,0.072,12,0.007,13,0.009,14,0.007,67,3.502,70,0.341,71,1.774,72,1.967,77,0.835,79,1.372,80,1.372,81,0.36,82,1.372,84,1.372,93,2.891,98,1.372,103,4.218,113,2.888,114,3.502,115,4.208,118,4.208,122,1.41,123,1.87,149,2.738,151,4.208,161,2.016,647,4.208,648,5.443,649,4.822,650,6.237,651,4.822,652,4.822,653,4.208,654,3.804,655,3.804,656,4.208,657,4.208,658,4.208,659,4.822,660,4.822,661,4.822,662,4.822,663,4.822,664,4.822,665,4.822]],["title/injectables/LocalAuthGuard.html",[90,2.943,122,0.916]],["body/injectables/LocalAuthGuard.html",[3,0.138,4,0.119,5,0.119,7,0.178,8,0.013,9,0.939,10,0.138,11,0.088,12,0.009,13,0.011,14,0.009,90,5.102,113,3.494,122,1.588,123,2.262,161,2.439,644,4.602,645,5.091,666,5.091,667,5.833,668,5.091,669,5.833]],["title/injectables/LocalStrategy.html",[104,2.741,122,0.916]],["body/injectables/LocalStrategy.html",[3,0.106,4,0.091,5,0.091,7,0.168,8,0.013,9,0.723,10,0.106,11,0.067,12,0.007,13,0.009,14,0.007,70,0.318,71,1.694,72,1.9,77,0.797,79,1.694,80,1.694,81,0.445,82,1.694,84,1.278,88,4.556,89,3.544,91,3.544,93,1.878,98,1.278,104,4.027,113,2.691,122,1.346,123,1.742,132,3.381,134,0.663,140,2.033,141,1.366,149,3.381,161,1.878,182,1.872,206,1.321,208,2.119,254,2.119,506,4.697,648,5.197,653,3.92,654,3.544,656,3.92,657,3.92,658,3.92,670,3.92,671,4.492,672,4.492,673,5.955,674,4.492,675,5.955,676,4.492,677,4.492,678,4.492,679,4.492]],["title/interfaces/Origem.html",[157,1.274,680,2.572]],["body/interfaces/Origem.html",[3,0.123,4,0.106,5,0.106,7,0.123,8,0.012,10,0.123,12,0.008,13,0.01,14,0.008,70,0.368,81,0.562,134,0.625,148,1.591,157,1.636,159,2.454,161,2.738,162,3.529,163,1.017,164,2.364,165,2.211,166,1.645,167,1.73,168,1.636,429,3.87,680,4.156,681,4.541]],["title/controllers/OrigensController.html",[0,1.116,682,2.943]],["body/controllers/OrigensController.html",[0,0.909,2,0.909,3,0.078,4,0.067,5,0.067,7,0.156,8,0.013,9,0.532,10,0.078,11,0.05,12,0.005,13,0.007,14,0.005,70,0.233,71,1.367,72,2.26,75,1.447,77,0.886,79,1.771,80,1.771,81,0.465,82,1.771,84,1.882,85,1.558,87,2.673,94,1.004,98,1.612,134,0.649,141,1.893,147,2.24,171,1.626,180,2.367,182,2.378,185,2.367,191,2.367,193,2.791,194,1.563,195,1.626,196,1.626,197,1.626,198,1.074,200,1.074,205,1.563,206,0.971,208,1.558,213,2.367,462,4.669,680,2.096,682,3.491,683,2.882,684,3.302,685,4.946,686,6.225,687,4.195,688,4.946,689,4.946,690,3.302,691,4.669,692,3.302,693,3.302,694,2.882,695,3.302,696,2.882,697,3.302,698,2.882,699,3.302,700,4.195,701,3.597,702,2.882,703,2.882,704,3.302,705,3.302,706,3.302,707,3.302,708,3.302,709,3.302,710,3.302,711,3.302,712,3.302,713,3.302]],["title/modules/OrigensModule.html",[15,1.116,32,2.741]],["body/modules/OrigensModule.html",[2,1.706,3,0.113,4,0.097,5,0.097,7,0.178,8,0.013,9,0.769,10,0.113,11,0.072,12,0.007,13,0.009,14,0.007,15,1.894,17,1.922,18,1.922,19,2.075,20,2.075,21,1.922,22,2.991,23,2.991,32,5.325,38,2.694,39,2.075,40,2.075,42,2.16,44,2.252,45,1.451,225,2.351,226,2.351,680,3.03,682,4.997,701,5.233,702,4.166,714,4.166,715,4.166,716,4.166,717,4.774,718,4.774,719,4.889,720,4.774]],["title/injectables/OrigensService.html",[122,0.916,701,2.572]],["body/injectables/OrigensService.html",[3,0.068,4,0.059,5,0.059,7,0.155,8,0.013,9,0.467,10,0.068,11,0.044,12,0.004,13,0.007,14,0.004,45,0.881,70,0.205,71,1.242,72,2.21,77,0.915,79,1.782,80,1.782,81,0.468,82,1.782,84,1.782,93,1.825,94,1.776,98,1.493,122,0.987,123,1.124,134,0.627,140,2.643,141,2.077,147,2.262,163,0.678,168,0.911,182,2.305,194,1.9,198,0.943,200,0.943,205,1.9,206,1.936,230,2.877,239,1.367,240,1.367,243,1.427,244,1.427,249,1.427,250,1.427,251,1.427,254,2.476,256,2.585,257,2.585,258,2.585,259,2.585,261,1.427,462,4.237,680,1.84,685,3.809,687,3.809,688,3.809,689,3.809,691,4.62,694,3.809,696,3.809,698,3.809,700,3.809,701,2.77,703,2.53,721,2.53,722,5.841,723,2.899,724,2.899,725,4.364,726,4.364,727,2.899,728,2.899,729,2.899,730,2.899,731,2.899,732,4.364,733,2.899,734,2.899,735,5.098,736,2.899,737,2.53,738,5.841,739,4.581,740,5.249,741,2.899,742,2.899,743,2.899,744,2.899]],["title/interfaces/Produto.html",[157,1.274,745,2.572]],["body/interfaces/Produto.html",[3,0.109,4,0.094,5,0.094,7,0.109,8,0.012,10,0.109,12,0.007,13,0.009,14,0.007,70,0.326,81,0.592,134,0.725,148,1.52,157,1.448,158,3.7,159,2.173,161,2.531,162,3.331,163,0.94,164,2.258,165,2.112,166,1.571,167,1.675,168,1.448,335,2.592,429,3.653,472,3.7,473,5.217,745,3.842,746,4.02]],["title/controllers/ProdutosController.html",[0,1.116,747,2.943]],["body/controllers/ProdutosController.html",[0,0.909,2,0.909,3,0.078,4,0.067,5,0.067,7,0.156,8,0.013,9,0.532,10,0.078,11,0.05,12,0.005,13,0.007,14,0.005,70,0.233,71,1.367,72,2.26,75,1.447,77,0.886,79,1.771,80,1.771,81,0.465,82,1.771,84,1.882,85,1.558,87,2.673,94,1.004,98,1.612,134,0.649,141,1.893,147,2.24,171,1.626,180,2.367,182,2.378,185,2.367,191,2.367,193,2.791,194,1.563,195,1.626,196,1.626,197,1.626,198,1.074,200,1.074,205,1.563,206,0.971,208,1.558,213,2.367,469,4.669,745,2.096,747,3.491,748,2.882,749,3.302,750,4.946,751,6.225,752,4.195,753,4.946,754,4.946,755,3.302,756,4.669,757,3.302,758,3.302,759,2.882,760,3.302,761,2.882,762,3.302,763,2.882,764,3.302,765,4.195,766,3.597,767,2.882,768,2.882,769,3.302,770,3.302,771,3.302,772,3.302,773,3.302,774,3.302,775,3.302,776,3.302,777,3.302,778,3.302]],["title/modules/ProdutosModule.html",[15,1.116,33,2.741]],["body/modules/ProdutosModule.html",[2,1.706,3,0.113,4,0.097,5,0.097,7,0.178,8,0.013,9,0.769,10,0.113,11,0.072,12,0.007,13,0.009,14,0.007,15,1.894,17,1.922,18,1.922,19,2.075,20,2.075,21,1.922,22,2.991,23,2.991,33,5.325,38,2.694,39,2.075,40,2.075,42,2.16,44,2.252,45,1.451,225,2.351,226,2.351,745,3.03,747,4.997,766,5.233,767,4.166,779,4.166,780,4.166,781,4.166,782,4.774,783,4.774,784,4.889,785,4.774]],["title/injectables/ProdutosService.html",[122,0.916,766,2.572]],["body/injectables/ProdutosService.html",[3,0.068,4,0.059,5,0.059,7,0.155,8,0.013,9,0.467,10,0.068,11,0.044,12,0.004,13,0.007,14,0.004,45,0.881,70,0.205,71,1.242,72,2.21,77,0.915,79,1.782,80,1.782,81,0.468,82,1.782,84,1.782,93,1.825,94,1.776,98,1.493,122,0.987,123,1.124,134,0.627,140,2.643,141,2.077,147,2.262,163,0.678,168,0.911,182,2.305,194,1.9,198,0.943,200,0.943,205,1.9,206,1.936,230,2.877,239,1.367,240,1.367,243,1.427,244,1.427,249,1.427,250,1.427,251,1.427,254,2.476,256,2.585,257,2.585,258,2.585,259,2.585,261,1.427,469,4.237,745,1.84,750,3.809,752,3.809,753,3.809,754,3.809,756,4.62,759,3.809,761,3.809,763,3.809,765,3.809,766,2.77,768,2.53,786,2.53,787,5.841,788,2.899,789,2.899,790,4.364,791,4.364,792,2.899,793,2.899,794,2.899,795,2.899,796,2.899,797,4.364,798,2.899,799,2.899,800,5.841,801,2.899,802,2.899,803,5.841,804,5.249,805,5.249,806,2.899,807,2.899,808,2.899,809,2.899]],["title/interfaces/Profissao.html",[157,1.274,424,2.301]],["body/interfaces/Profissao.html",[3,0.123,4,0.106,5,0.106,7,0.123,8,0.012,10,0.123,12,0.008,13,0.01,14,0.008,70,0.368,81,0.562,134,0.69,148,1.591,157,1.636,159,2.454,161,2.738,162,3.529,163,1.017,164,2.364,165,2.211,166,1.645,167,1.73,168,1.636,424,3.718,810,4.541]],["title/controllers/ProfissoesController.html",[0,1.116,811,2.943]],["body/controllers/ProfissoesController.html",[0,0.909,2,0.909,3,0.078,4,0.067,5,0.067,7,0.156,8,0.013,9,0.532,10,0.078,11,0.05,12,0.005,13,0.007,14,0.005,70,0.233,71,1.367,72,2.26,75,1.447,77,0.886,79,1.771,80,1.771,81,0.465,82,1.771,84,1.882,85,1.558,87,2.673,94,1.004,98,1.612,134,0.649,141,1.893,147,2.24,171,1.626,180,2.367,182,2.378,185,2.367,191,2.367,193,2.791,194,1.563,195,1.626,196,1.626,197,1.626,198,1.074,200,1.074,205,1.563,206,0.971,208,1.558,213,2.367,424,1.875,482,4.669,811,3.491,812,2.882,813,3.302,814,4.946,815,6.225,816,4.195,817,4.946,818,4.946,819,3.302,820,4.669,821,3.302,822,3.302,823,2.882,824,3.302,825,2.882,826,3.302,827,2.882,828,3.302,829,4.195,830,3.597,831,2.882,832,2.882,833,3.302,834,3.302,835,3.302,836,3.302,837,3.302,838,3.302,839,3.302,840,3.302,841,3.302,842,3.302]],["title/modules/ProfissoesModule.html",[15,1.116,34,2.741]],["body/modules/ProfissoesModule.html",[2,1.706,3,0.113,4,0.097,5,0.097,7,0.178,8,0.013,9,0.769,10,0.113,11,0.072,12,0.007,13,0.009,14,0.007,15,1.894,17,1.922,18,1.922,19,2.075,20,2.075,21,1.922,22,2.991,23,2.991,34,5.325,38,2.694,39,2.075,40,2.075,42,2.16,44,2.252,45,1.451,225,2.351,226,2.351,424,2.711,811,4.997,830,5.233,831,4.166,843,4.166,844,4.166,845,4.166,846,4.774,847,4.774,848,4.889,849,4.774]],["title/injectables/ProfissoesService.html",[122,0.916,830,2.572]],["body/injectables/ProfissoesService.html",[3,0.068,4,0.059,5,0.059,7,0.155,8,0.013,9,0.467,10,0.068,11,0.044,12,0.004,13,0.007,14,0.004,45,0.881,70,0.205,71,1.242,72,2.21,77,0.915,79,1.782,80,1.782,81,0.468,82,1.782,84,1.782,93,1.825,94,1.776,98,1.493,122,0.987,123,1.124,134,0.627,140,2.643,141,2.077,147,2.262,163,0.678,168,0.911,182,2.305,194,1.9,198,0.943,200,0.943,205,1.9,206,1.936,230,2.877,239,1.367,240,1.367,243,1.427,244,1.427,249,1.427,250,1.427,251,1.427,254,2.476,256,2.585,257,2.585,258,2.585,259,2.585,261,1.427,424,1.646,482,4.237,735,5.098,737,2.53,739,4.581,814,3.809,816,3.809,817,3.809,818,3.809,820,4.62,823,3.809,825,3.809,827,3.809,829,3.809,830,2.77,832,2.53,850,2.53,851,5.841,852,2.899,853,2.899,854,4.364,855,4.364,856,2.899,857,2.899,858,2.899,859,2.899,860,2.899,861,4.364,862,2.899,863,2.899,864,2.899,865,5.841,866,5.249,867,2.899,868,2.899,869,2.899,870,2.899]],["title/interfaces/Status.html",[157,1.274,165,1.192]],["body/interfaces/Status.html",[3,0.123,4,0.106,5,0.106,7,0.123,8,0.012,10,0.123,12,0.008,13,0.01,14,0.008,70,0.368,81,0.562,134,0.69,148,1.591,157,1.636,159,2.454,161,2.738,162,3.529,163,1.017,164,2.364,165,1.925,166,1.645,167,1.73,168,1.636,335,2.714,871,4.541]],["title/controllers/StatusController.html",[0,1.116,872,2.943]],["body/controllers/StatusController.html",[0,0.909,2,0.909,3,0.078,4,0.067,5,0.067,7,0.156,8,0.013,9,0.532,10,0.078,11,0.05,12,0.005,13,0.007,14,0.005,70,0.233,71,1.367,72,2.26,75,1.447,77,0.886,79,1.771,80,1.771,81,0.465,82,1.771,84,1.882,85,1.558,87,2.673,94,1.004,98,1.612,134,0.649,141,1.893,147,2.24,165,0.971,171,1.626,180,2.367,182,2.378,185,2.367,191,2.367,193,2.791,194,1.563,195,1.626,196,1.626,197,1.626,198,1.074,200,1.074,205,1.563,206,0.971,208,1.558,213,2.367,489,4.669,872,3.491,873,2.882,874,3.302,875,4.946,876,6.225,877,4.195,878,4.946,879,4.946,880,3.302,881,4.669,882,3.302,883,3.302,884,2.882,885,3.302,886,2.882,887,3.302,888,2.882,889,3.302,890,4.195,891,3.597,892,2.882,893,2.882,894,3.302,895,3.302,896,3.302,897,3.302,898,3.302,899,3.302,900,3.302,901,3.302,902,3.302,903,3.302]],["title/modules/StatusModule.html",[15,1.116,35,2.741]],["body/modules/StatusModule.html",[2,1.706,3,0.113,4,0.097,5,0.097,7,0.178,8,0.013,9,0.769,10,0.113,11,0.072,12,0.007,13,0.009,14,0.007,15,1.894,17,1.922,18,1.922,19,2.075,20,2.075,21,1.922,22,2.991,23,2.991,35,5.325,38,2.694,39,2.075,40,2.075,42,2.16,44,2.252,45,1.451,165,1.404,225,2.351,226,2.351,872,4.997,891,5.233,892,4.166,904,4.166,905,4.166,906,4.166,907,4.774,908,4.774,909,4.889,910,4.774]],["title/injectables/StatusService.html",[122,0.916,891,2.572]],["body/injectables/StatusService.html",[3,0.068,4,0.059,5,0.059,7,0.155,8,0.013,9,0.467,10,0.068,11,0.044,12,0.004,13,0.007,14,0.004,45,0.881,70,0.205,71,1.242,72,2.21,77,0.915,79,1.782,80,1.782,81,0.468,82,1.782,84,1.782,93,1.825,94,1.776,98,1.493,122,0.987,123,1.124,134,0.627,140,2.643,141,2.077,147,2.262,163,0.678,165,0.852,168,0.911,182,2.305,194,1.9,198,0.943,200,0.943,205,1.9,206,1.936,230,2.877,239,1.367,240,1.367,243,1.427,244,1.427,249,1.427,250,1.427,251,1.427,254,2.476,256,2.585,257,2.585,258,2.585,259,2.585,261,1.427,489,4.237,875,3.809,877,3.809,878,3.809,879,3.809,881,4.62,884,3.809,886,3.809,888,3.809,890,3.809,891,2.77,893,2.53,911,2.53,912,5.841,913,2.899,914,2.899,915,4.364,916,4.364,917,2.899,918,2.899,919,2.899,920,2.899,921,2.899,922,4.364,923,2.899,924,2.899,925,2.899,926,2.899,927,2.899,928,5.249,929,5.841,930,5.249,931,5.249,932,2.899,933,2.899,934,2.899,935,2.899]],["title/interfaces/Tipo.html",[157,1.274,335,1.463]],["body/interfaces/Tipo.html",[3,0.123,4,0.106,5,0.106,7,0.123,8,0.012,10,0.123,12,0.008,13,0.01,14,0.008,70,0.368,81,0.562,134,0.69,148,1.591,157,1.636,159,2.454,161,2.738,162,3.529,163,1.017,164,2.364,166,1.645,167,1.73,168,1.636,335,2.855,936,4.541]],["title/controllers/TiposController.html",[0,1.116,937,2.943]],["body/controllers/TiposController.html",[0,0.909,2,0.909,3,0.078,4,0.067,5,0.067,7,0.156,8,0.013,9,0.532,10,0.078,11,0.05,12,0.005,13,0.007,14,0.005,70,0.233,71,1.367,72,2.26,75,1.447,77,0.886,79,1.771,80,1.771,81,0.465,82,1.771,84,1.882,85,1.558,87,2.673,94,1.004,98,1.612,134,0.649,141,1.893,147,2.24,171,1.626,180,2.367,182,2.378,185,2.367,191,2.367,193,2.791,194,1.563,195,1.626,196,1.626,197,1.626,198,1.074,200,1.074,205,1.563,206,0.971,208,1.558,213,2.367,335,1.192,496,4.669,937,3.491,938,2.882,939,3.302,940,4.946,941,6.225,942,4.195,943,4.946,944,4.946,945,3.302,946,4.669,947,3.302,948,3.302,949,2.882,950,3.302,951,2.882,952,3.302,953,2.882,954,3.302,955,4.195,956,3.597,957,2.882,958,2.882,959,3.302,960,3.302,961,3.302,962,3.302,963,3.302,964,3.302,965,3.302,966,3.302,967,3.302,968,3.302]],["title/modules/TiposModule.html",[15,1.116,36,2.741]],["body/modules/TiposModule.html",[2,1.706,3,0.113,4,0.097,5,0.097,7,0.178,8,0.013,9,0.769,10,0.113,11,0.072,12,0.007,13,0.009,14,0.007,15,1.894,17,1.922,18,1.922,19,2.075,20,2.075,21,1.922,22,2.991,23,2.991,36,5.325,38,2.694,39,2.075,40,2.075,42,2.16,44,2.252,45,1.451,225,2.351,226,2.351,335,1.723,937,4.997,956,5.233,957,4.166,969,4.166,970,4.166,971,4.166,972,4.774,973,4.774,974,4.889,975,4.774]],["title/injectables/TiposService.html",[122,0.916,956,2.572]],["body/injectables/TiposService.html",[3,0.068,4,0.059,5,0.059,7,0.155,8,0.013,9,0.467,10,0.068,11,0.044,12,0.004,13,0.007,14,0.004,45,0.881,70,0.205,71,1.242,72,2.21,77,0.915,79,1.782,80,1.782,81,0.468,82,1.782,84,1.782,93,1.825,94,1.776,98,1.493,122,0.987,123,1.124,134,0.627,140,2.643,141,2.077,147,2.262,163,0.678,168,0.911,182,2.305,194,1.9,198,0.943,200,0.943,205,1.9,206,1.936,230,2.877,239,1.367,240,1.367,243,1.427,244,1.427,249,1.427,250,1.427,251,1.427,254,2.476,256,2.585,257,2.585,258,2.585,259,2.585,261,1.427,335,1.046,496,4.237,940,3.809,942,3.809,943,3.809,944,3.809,946,4.62,949,3.809,951,3.809,953,3.809,955,3.809,956,2.77,958,2.53,976,2.53,977,5.841,978,2.899,979,2.899,980,4.364,981,4.364,982,2.899,983,2.899,984,2.899,985,2.899,986,2.899,987,4.364,988,2.899,989,2.899,990,5.841,991,2.899,992,2.899,993,5.841,994,5.249,995,5.249,996,2.899,997,2.899,998,2.899,999,2.899]],["title/classes/UpdateCategoriaDto.html",[11,0.061,179,2.741]],["body/classes/UpdateCategoriaDto.html",[3,0.123,4,0.106,5,0.106,7,0.123,8,0.013,10,0.123,11,0.078,12,0.008,13,0.01,14,0.008,70,0.369,75,1.436,77,0.961,81,0.536,134,0.656,148,1.519,163,1.019,165,2.11,166,1.57,167,1.436,179,4.438,400,1.642,402,4.12,403,4.558,404,2.523,405,4.558,406,4.558,408,1.642,1000,6.571]],["title/classes/UpdateCidadeDto.html",[11,0.061,278,2.741]],["body/classes/UpdateCidadeDto.html",[3,0.117,4,0.101,5,0.101,7,0.117,8,0.013,10,0.117,11,0.075,12,0.007,13,0.01,14,0.007,70,0.351,75,1.534,77,0.99,81,0.552,134,0.681,148,1.484,163,0.988,166,1.534,167,1.391,268,4.202,278,4.302,400,1.563,404,2.585,408,1.563,410,3.921,411,3.983,412,4.338,413,4.338,414,4.338,415,4.338,1001,6.67]],["title/classes/UpdateClienteDto.html",[11,0.061,345,2.741]],["body/classes/UpdateClienteDto.html",[3,0.083,4,0.072,5,0.072,7,0.083,8,0.013,10,0.083,11,0.053,12,0.005,13,0.008,14,0.005,70,0.25,75,1.7,77,1.051,81,0.586,134,0.669,148,1.247,163,0.784,166,1.289,167,1.405,345,3.415,400,1.112,404,2.696,408,1.112,418,2.79,419,5.141,420,5.141,421,5.141,422,5.141,423,5.141,424,3.345,425,5.141,426,5.141,427,5.141,428,5.141,429,4.148,430,3.086,431,3.086,432,3.086,433,3.086,434,3.086,435,3.086,436,3.086,437,3.086,438,3.086,439,3.086,440,3.086,441,3.086,443,3.086,444,4.407,445,3.086,446,3.086,447,3.086,1002,6.91]],["title/classes/UpdateEstadoDto.html",[11,0.061,524,2.741]],["body/classes/UpdateEstadoDto.html",[3,0.123,4,0.106,5,0.106,7,0.123,8,0.013,10,0.123,11,0.078,12,0.008,13,0.01,14,0.008,70,0.369,75,1.436,77,0.961,81,0.536,134,0.656,148,1.519,163,1.019,166,1.57,167,1.436,268,4.299,400,1.642,404,2.523,408,1.642,450,4.12,451,4.558,452,4.558,453,4.558,524,4.438,1003,6.571]],["title/classes/UpdateFornecedorDto.html",[11,0.061,588,2.741]],["body/classes/UpdateFornecedorDto.html",[3,0.123,4,0.106,5,0.106,7,0.123,8,0.013,10,0.123,11,0.078,12,0.008,13,0.01,14,0.008,70,0.369,75,1.436,77,0.961,81,0.536,134,0.656,148,1.519,163,1.019,165,2.11,166,1.57,167,1.436,400,1.642,404,2.523,408,1.642,457,4.12,458,4.558,459,4.558,460,4.558,588,4.438,1004,6.571]],["title/classes/UpdateOrigemDto.html",[11,0.061,691,2.741]],["body/classes/UpdateOrigemDto.html",[3,0.123,4,0.106,5,0.106,7,0.123,8,0.013,10,0.123,11,0.078,12,0.008,13,0.01,14,0.008,70,0.369,75,1.436,77,0.961,81,0.536,134,0.572,148,1.519,163,1.019,165,2.11,166,1.57,167,1.436,400,1.642,404,2.523,408,1.642,429,3.544,464,4.12,465,4.558,466,4.558,467,4.558,691,4.438,1005,6.571]],["title/classes/UpdateProdutoDto.html",[11,0.061,756,2.741]],["body/classes/UpdateProdutoDto.html",[3,0.103,4,0.088,5,0.088,7,0.103,8,0.013,10,0.103,11,0.065,12,0.007,13,0.009,14,0.007,70,0.307,75,1.648,77,1.03,81,0.575,134,0.698,148,1.39,158,3.384,163,0.904,165,1.932,166,1.437,167,1.274,335,2.371,400,1.366,404,2.66,408,1.366,429,3.145,471,3.427,472,3.384,473,4.77,474,3.791,475,3.791,476,3.791,477,3.791,478,3.791,479,3.791,481,3.791,756,3.938,1006,6.825]],["title/classes/UpdateProfissaoDto.html",[11,0.061,820,2.741]],["body/classes/UpdateProfissaoDto.html",[3,0.123,4,0.106,5,0.106,7,0.123,8,0.013,10,0.123,11,0.078,12,0.008,13,0.01,14,0.008,70,0.369,75,1.436,77,0.961,81,0.536,134,0.656,148,1.519,163,1.019,165,2.11,166,1.57,167,1.436,400,1.642,404,2.523,408,1.642,484,4.12,485,4.558,486,4.558,487,4.558,820,4.438,1007,6.571]],["title/classes/UpdateStatusDto.html",[11,0.061,881,2.741]],["body/classes/UpdateStatusDto.html",[3,0.123,4,0.106,5,0.106,7,0.123,8,0.013,10,0.123,11,0.078,12,0.008,13,0.01,14,0.008,70,0.369,75,1.436,77,0.961,81,0.536,134,0.656,148,1.519,163,1.019,166,1.57,167,1.436,335,2.59,400,1.642,404,2.523,408,1.642,491,4.12,492,4.558,493,4.558,494,4.558,881,4.438,1008,6.571]],["title/classes/UpdateTipoDto.html",[11,0.061,946,2.741]],["body/classes/UpdateTipoDto.html",[3,0.123,4,0.106,5,0.106,7,0.123,8,0.013,10,0.123,11,0.078,12,0.008,13,0.01,14,0.008,70,0.369,75,1.436,77,0.961,81,0.536,134,0.656,148,1.519,163,1.019,166,1.57,167,1.436,335,2.59,400,1.642,404,2.523,408,1.642,498,4.12,499,4.558,500,4.558,501,4.558,946,4.438,1009,6.571]],["title/classes/UpdateUserDto.html",[11,0.061,1010,2.741]],["body/classes/UpdateUserDto.html",[3,0.107,4,0.092,5,0.092,7,0.107,8,0.013,10,0.107,11,0.068,12,0.007,13,0.009,14,0.007,70,0.321,75,1.624,77,1.021,81,0.57,134,0.703,148,1.42,149,3.81,163,0.931,165,1.973,166,1.468,167,1.311,335,2.422,400,1.426,404,2.644,408,1.426,505,3.577,506,4.259,508,3.957,509,3.957,510,3.957,511,3.957,512,3.957,1010,4.052,1011,6.787,1012,4.535]],["title/interfaces/User.html",[132,2.301,157,1.274]],["body/interfaces/User.html",[3,0.112,4,0.096,5,0.096,7,0.112,8,0.012,10,0.112,12,0.007,13,0.009,14,0.007,70,0.335,81,0.587,132,3.504,134,0.728,148,1.537,149,4.125,157,1.491,159,2.237,161,2.58,162,3.378,163,0.958,164,2.284,165,2.136,166,1.589,167,1.689,168,1.491,335,2.622,506,4.61,1013,4.139]],["title/controllers/UsersController.html",[0,1.116,1014,2.943]],["body/controllers/UsersController.html",[0,0.891,2,0.891,3,0.076,4,0.066,5,0.066,7,0.162,8,0.013,9,0.521,10,0.076,11,0.049,12,0.005,13,0.007,14,0.005,70,0.229,71,1.347,72,2.252,75,1.435,77,0.878,79,1.754,80,1.754,81,0.461,82,1.754,84,1.866,85,1.526,87,2.642,92,2.824,94,0.984,98,1.594,127,2.837,132,1.837,134,0.646,141,1.874,147,2.226,171,1.594,180,2.332,182,2.367,185,2.332,191,2.332,193,2.759,194,1.54,195,1.594,196,1.594,197,1.594,198,1.052,200,1.052,205,1.54,206,0.952,208,1.526,213,2.332,503,4.635,642,2.35,643,2.553,1010,4.635,1014,3.44,1015,2.824,1016,3.236,1017,4.889,1018,6.165,1019,4.133,1020,4.889,1021,4.889,1022,3.236,1023,3.236,1024,3.236,1025,3.236,1026,2.824,1027,3.236,1028,2.824,1029,3.236,1030,2.824,1031,3.236,1032,4.133,1033,2.824,1034,2.824,1035,3.236,1036,3.236,1037,3.236,1038,4.736,1039,3.236,1040,3.236,1041,3.236,1042,3.236,1043,3.236,1044,3.236,1045,3.236,1046,3.236]],["title/modules/UsersModule.html",[15,1.116,37,2.572]],["body/modules/UsersModule.html",[2,1.666,3,0.109,4,0.094,5,0.094,7,0.181,8,0.013,9,0.742,10,0.109,11,0.069,12,0.007,13,0.009,14,0.007,15,1.861,17,1.854,18,1.854,19,2.003,20,2.003,21,1.854,22,2.94,23,2.94,37,4.955,38,2.632,39,2.003,40,2.003,42,2.085,44,2.173,45,1.401,67,3.346,112,4.02,113,2.759,127,4.913,132,2.616,225,2.269,226,2.269,655,3.634,1014,4.912,1033,4.02,1047,4.02,1048,4.02,1049,4.02,1050,4.607,1051,4.607,1052,4.776,1053,4.607,1054,4.607,1055,4.607,1056,4.607]],["title/injectables/UsersService.html",[122,0.916,127,2.428]],["body/injectables/UsersService.html",[3,0.058,4,0.05,5,0.05,7,0.157,8,0.013,9,0.393,10,0.058,11,0.037,12,0.004,13,0.006,14,0.004,45,0.742,46,1.649,47,1.924,67,1.771,70,0.172,71,1.087,72,2.233,77,0.915,79,1.828,80,1.828,81,0.459,82,1.828,84,1.828,93,1.598,94,1.622,98,1.648,122,0.864,123,0.946,127,2.289,132,1.385,134,0.632,139,4.209,140,3.095,141,2.203,143,2.129,147,2.15,149,2.17,163,0.594,168,0.767,182,2.2,194,1.735,198,0.793,200,0.793,205,1.735,206,1.807,230,2.627,239,1.151,240,1.151,243,1.201,244,1.201,249,1.201,250,1.201,251,1.201,254,2.223,256,2.321,257,2.321,258,2.321,259,2.321,261,1.201,503,3.918,506,1.548,1010,4.345,1017,3.336,1019,3.336,1020,3.336,1021,3.336,1026,3.336,1028,3.336,1030,3.336,1032,3.336,1034,2.129,1057,2.129,1058,5.335,1059,3.822,1060,2.439,1061,2.439,1062,3.822,1063,3.822,1064,2.439,1065,3.822,1066,2.439,1067,2.439,1068,2.439,1069,3.822,1070,2.439,1071,2.439,1072,2.439,1073,3.822,1074,2.439,1075,2.439,1076,6.146,1077,2.439,1078,3.822,1079,2.439,1080,2.439,1081,2.439,1082,2.439,1083,2.439,1084,5.335,1085,2.439,1086,4.713,1087,2.439,1088,2.439,1089,2.439,1090,2.439,1091,2.439,1092,2.439,1093,2.439,1094,2.439,1095,3.822,1096,3.822,1097,2.439,1098,2.439,1099,2.439,1100,3.822,1101,2.129,1102,2.439]],["title/coverage.html",[1103,4.383]],["body/coverage.html",[0,1.936,1,1.484,5,0.042,6,1.783,8,0.013,11,0.115,12,0.003,13,0.005,14,0.003,21,0.822,46,1.382,68,1.484,69,1.783,81,0.153,88,1.224,90,1.484,103,1.382,104,1.382,114,1.484,122,1.653,124,1.783,127,1.224,132,1.16,157,2.132,158,1.052,160,1.783,165,0.601,169,1.484,170,1.783,179,1.382,188,1.382,201,1.296,206,0.601,223,1.612,227,1.783,265,1.296,266,1.783,269,1.484,270,1.783,278,1.382,284,1.382,289,1.296,307,1.612,309,1.783,333,1.296,334,1.783,335,0.737,336,1.484,337,1.783,345,1.382,351,1.382,356,1.296,374,1.612,376,1.783,401,1.783,402,2.618,409,1.783,410,2.618,411,1.16,417,1.783,418,2.618,424,1.16,448,1.382,449,1.783,450,2.618,455,1.382,456,1.783,457,2.618,462,1.382,463,1.783,464,2.618,469,1.382,470,1.783,471,2.618,472,1.052,482,1.382,483,1.783,484,2.618,489,1.382,490,1.783,491,2.618,496,1.382,497,1.783,498,2.618,503,1.382,504,1.783,505,2.618,514,1.783,515,1.484,516,1.783,524,1.382,534,1.296,552,1.612,554,1.783,578,1.783,579,1.484,580,1.783,588,1.382,598,1.296,616,1.612,618,1.783,642,1.484,643,1.612,644,2.618,647,1.783,666,1.783,670,1.783,680,1.296,681,1.783,682,1.484,683,1.783,691,1.382,701,1.296,719,1.612,721,1.783,745,1.296,746,1.783,747,1.484,748,1.783,756,1.382,766,1.296,784,1.612,786,1.783,810,1.783,811,1.484,812,1.783,820,1.382,830,1.296,848,1.612,850,1.783,871,1.783,872,1.484,873,1.783,881,1.382,891,1.296,909,1.612,911,1.783,936,1.783,937,1.484,938,1.783,946,1.382,956,1.296,974,1.612,976,1.783,1000,1.783,1001,1.783,1002,1.783,1003,1.783,1004,1.783,1005,1.783,1006,1.783,1007,1.783,1008,1.783,1009,1.783,1010,1.382,1011,1.783,1013,1.783,1014,1.484,1015,1.783,1052,1.612,1057,1.783,1103,1.612,1104,2.043,1105,2.043,1106,2.043,1107,8.46,1108,7.386,1109,2.043,1110,6.239,1111,1.783,1112,7.032,1113,3.318,1114,7.032,1115,7.032,1116,7.311,1117,1.783,1118,1.783,1119,2.043,1120,2.043,1121,1.783,1122,1.783,1123,1.783,1124,1.783,1125,1.783,1126,2.043,1127,1.783,1128,3.318,1129,1.783,1130,1.783,1131,1.783,1132,1.783,1133,2.043,1134,1.783,1135,2.043,1136,2.043,1137,2.043]],["title/dependencies.html",[18,1.965,1138,3.373]],["body/dependencies.html",[8,0.013,9,0.721,11,0.089,12,0.007,13,0.009,14,0.007,18,1.803,45,1.362,86,3.908,91,3.533,111,3.533,113,2.682,139,3.533,168,1.408,408,1.408,654,5.261,655,3.533,668,3.908,1139,5.943,1140,4.478,1141,5.943,1142,4.478,1143,4.478,1144,4.478,1145,5.943,1146,4.478,1147,4.478,1148,4.478,1149,4.478,1150,4.478,1151,4.478,1152,4.478,1153,4.478,1154,4.478,1155,4.478,1156,4.478,1157,4.478,1158,4.478,1159,4.478,1160,4.478,1161,4.478,1162,4.478,1163,4.478,1164,4.478,1165,4.478,1166,3.908,1167,4.478,1168,5.943,1169,4.478,1170,4.478,1171,4.478,1172,4.478,1173,4.478,1174,4.478,1175,4.478,1176,4.478,1177,4.478,1178,4.478,1179,4.478,1180,4.478,1181,4.478,1182,4.478,1183,4.478,1184,4.478,1185,4.478,1186,4.478,1187,4.478,1188,4.478,1189,4.478,1190,4.478]],["title/miscellaneous/functions.html",[1191,2.45,1192,4.26]],["body/miscellaneous/functions.html",[8,0.011,12,0.01,13,0.011,14,0.01,21,3.149,70,0.45,1125,5.562,1191,4.628,1192,5.562,1193,6.373]],["title/index.html",[70,0.238,1194,3.373,1195,3.373]],["body/index.html",[4,0.095,8,0.013,12,0.007,13,0.009,14,0.007,1103,3.669,1196,4.651,1197,4.651,1198,6.093,1199,4.651,1200,4.651,1201,4.651,1202,4.651,1203,4.651,1204,4.651,1205,4.651,1206,6.795,1207,4.651,1208,4.651,1209,4.651,1210,4.651,1211,7.825,1212,4.651,1213,4.651,1214,4.651,1215,7.68,1216,4.651,1217,4.651,1218,6.093,1219,4.651,1220,4.651,1221,4.651,1222,4.651,1223,6.093,1224,6.093,1225,4.651,1226,4.651,1227,4.651,1228,6.093,1229,6.093,1230,4.651,1231,4.651,1232,4.651,1233,4.651,1234,4.651,1235,4.059,1236,4.651,1237,4.651,1238,4.651,1239,4.651,1240,4.651,1241,4.651,1242,4.651,1243,4.651,1244,4.651,1245,4.651,1246,4.651,1247,4.651,1248,4.651,1249,4.651,1250,4.651,1251,4.651,1252,4.651,1253,4.651]],["title/modules.html",[17,2.236]],["body/modules.html",[8,0.01,12,0.008,13,0.01,14,0.008,16,3.686,17,2.043,26,3.432,27,3.432,28,3.432,29,3.432,30,3.432,31,3.432,32,3.432,33,3.432,34,3.432,35,3.432,36,3.432,37,3.221,1235,7.291,1254,8.354,1255,8.354,1256,8.354]],["title/overview.html",[1257,4.848]],["body/overview.html",[2,0.787,8,0.013,12,0.004,13,0.007,14,0.004,15,0.787,16,5.936,17,1.151,18,1.151,19,1.243,20,1.243,21,1.151,22,1.243,23,1.243,24,2.495,25,2.495,26,5.018,27,4.429,28,4.429,29,4.429,30,4.429,31,4.429,32,4.429,33,4.429,34,4.429,35,4.429,36,4.429,37,4.316,38,1.877,39,1.243,40,1.243,88,3.118,100,2.495,101,2.495,103,3.52,104,3.52,123,1.109,127,4.073,159,1.348,201,4.316,218,2.495,219,2.495,220,2.495,289,4.316,302,2.495,303,2.495,304,2.495,356,4.316,369,2.495,370,2.495,371,2.495,400,0.899,534,4.316,547,2.495,548,2.495,549,2.495,598,4.316,611,2.495,612,2.495,613,2.495,701,4.316,714,2.495,715,2.495,716,2.495,766,4.316,779,2.495,780,2.495,781,2.495,830,4.316,843,2.495,844,2.495,845,2.495,891,4.316,904,2.495,905,2.495,906,2.495,956,4.316,969,2.495,970,2.495,971,2.495,1047,2.495,1048,2.495,1049,2.495,1257,2.495,1258,4.319,1259,2.859,1260,2.859,1261,2.859]],["title/miscellaneous/variables.html",[1191,2.45,1262,4.26]],["body/miscellaneous/variables.html",[8,0.013,12,0.003,13,0.004,14,0.003,46,2.013,63,6.369,70,0.127,81,0.615,114,2.162,117,1.562,134,0.675,148,1.376,149,1.016,158,0.922,164,2.045,165,1.662,166,1.423,167,1.638,206,1.913,223,2.348,239,3.744,240,3.198,267,1.562,268,1.783,307,2.348,335,1.784,374,2.348,429,1.608,472,0.922,473,1.3,506,1.136,552,2.348,616,2.348,719,2.348,784,2.348,848,2.348,909,2.348,974,2.348,1052,2.348,1101,1.562,1111,1.562,1117,1.562,1118,1.562,1121,1.562,1122,1.562,1123,1.562,1124,1.562,1127,1.562,1129,1.562,1130,1.562,1131,1.562,1132,1.562,1134,1.562,1166,1.562,1191,1.3,1262,1.562,1263,1.79,1264,1.79,1265,1.79,1266,1.79,1267,1.79,1268,1.79,1269,1.79,1270,1.79,1271,1.79,1272,1.79,1273,1.79,1274,1.79,1275,1.79,1276,6.504,1277,7.806,1278,7.49,1279,6.504,1280,6.504,1281,1.79,1282,1.79,1283,1.79,1284,2.977,1285,1.79,1286,2.977,1287,2.977,1288,1.79,1289,1.79,1290,1.79,1291,1.79,1292,1.79,1293,1.79,1294,1.79,1295,1.79,1296,1.79,1297,1.79,1298,1.79,1299,1.79,1300,1.79]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"interfaces/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"interfaces/Fornecedor.html":{},"controllers/FornecedoresController.html":{},"modules/FornecedoresModule.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Origem.html":{},"controllers/OrigensController.html":{},"modules/OrigensModule.html":{},"injectables/OrigensService.html":{},"interfaces/Produto.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"interfaces/Profissao.html":{},"controllers/ProfissoesController.html":{},"modules/ProfissoesModule.html":{},"injectables/ProfissoesService.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1107,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":1165,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1181,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":1161,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":1178,"title":{},"body":{"dependencies.html":{}}}],["0.21.1",{"_index":1156,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":1159,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1173,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1135,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1114,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1133,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1115,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":1168,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1101,"title":{},"body":{"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":1261,"title":{},"body":{"overview.html":{}}}],["13",{"_index":1258,"title":{},"body":{"overview.html":{}}}],["16",{"_index":1259,"title":{},"body":{"overview.html":{}}}],["2.1.2",{"_index":1150,"title":{},"body":{"dependencies.html":{}}}],["2.1.6",{"_index":1172,"title":{},"body":{"dependencies.html":{}}}],["2.88.2",{"_index":1182,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":1260,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":1148,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1184,"title":{},"body":{"dependencies.html":{}}}],["3.0.8",{"_index":1157,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":1163,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":1174,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":1188,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":1146,"title":{},"body":{"dependencies.html":{}}}],["5.10.19",{"_index":1169,"title":{},"body":{"dependencies.html":{}}}],["5.10.3",{"_index":1152,"title":{},"body":{"dependencies.html":{}}}],["5347y5467ytryert43523432ew",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6.3",{"_index":1185,"title":{},"body":{"dependencies.html":{}}}],["6.9.4",{"_index":1176,"title":{},"body":{"dependencies.html":{}}}],["60s",{"_index":121,"title":{},"body":{"modules/AuthModule.html":{}}}],["7.0.4",{"_index":1139,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":1143,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1142,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":1141,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":1154,"title":{},"body":{"dependencies.html":{}}}],["8.3.2",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["_id},{$set",{"_index":261,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["access_token",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["amazing",{"_index":1236,"title":{},"body":{"index.html":{}}}],["api",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["apiproperty",{"_index":404,"title":{},"body":{"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{}}}],["app",{"_index":1213,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1204,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":16,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":72,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["atualizarcategoria",{"_index":173,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["atualizarcategoria(_id",{"_index":233,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["atualizarcategoria(updatecategoriadto",{"_index":178,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["atualizarcidade",{"_index":272,"title":{},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{}}}],["atualizarcidade(_id",{"_index":314,"title":{},"body":{"injectables/CidadesService.html":{}}}],["atualizarcidade(updatecidadedto",{"_index":277,"title":{},"body":{"controllers/CidadesController.html":{}}}],["atualizarcliente",{"_index":339,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{}}}],["atualizarcliente(_id",{"_index":381,"title":{},"body":{"injectables/ClientesService.html":{}}}],["atualizarcliente(updateclientedto",{"_index":344,"title":{},"body":{"controllers/ClientesController.html":{}}}],["atualizarestado",{"_index":518,"title":{},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{}}}],["atualizarestado(_id",{"_index":559,"title":{},"body":{"injectables/EstadosService.html":{}}}],["atualizarestado(updateestadodto",{"_index":523,"title":{},"body":{"controllers/EstadosController.html":{}}}],["atualizarfornecedor",{"_index":582,"title":{},"body":{"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{}}}],["atualizarfornecedor(_id",{"_index":623,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["atualizarfornecedor(updatefornecedordto",{"_index":587,"title":{},"body":{"controllers/FornecedoresController.html":{}}}],["atualizarorigem",{"_index":685,"title":{},"body":{"controllers/OrigensController.html":{},"injectables/OrigensService.html":{}}}],["atualizarorigem(_id",{"_index":726,"title":{},"body":{"injectables/OrigensService.html":{}}}],["atualizarorigem(updateorigemdto",{"_index":690,"title":{},"body":{"controllers/OrigensController.html":{}}}],["atualizarproduto",{"_index":750,"title":{},"body":{"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["atualizarproduto(_id",{"_index":791,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["atualizarproduto(updateprodutodto",{"_index":755,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["atualizarprofissao",{"_index":814,"title":{},"body":{"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{}}}],["atualizarprofissao(_id",{"_index":855,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["atualizarprofissao(updateprofissaodto",{"_index":819,"title":{},"body":{"controllers/ProfissoesController.html":{}}}],["atualizarstatus",{"_index":875,"title":{},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{}}}],["atualizarstatus(_id",{"_index":916,"title":{},"body":{"injectables/StatusService.html":{}}}],["atualizarstatus(updatestatusdto",{"_index":880,"title":{},"body":{"controllers/StatusController.html":{}}}],["atualizartipo",{"_index":940,"title":{},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{}}}],["atualizartipo(_id",{"_index":981,"title":{},"body":{"injectables/TiposService.html":{}}}],["atualizartipo(updatetipodto",{"_index":945,"title":{},"body":{"controllers/TiposController.html":{}}}],["atualizaruser",{"_index":1017,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["atualizaruser(_id",{"_index":1063,"title":{},"body":{"injectables/UsersService.html":{}}}],["atualizaruser(updateuserdto",{"_index":1022,"title":{},"body":{"controllers/UsersController.html":{}}}],["auth.controller",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":644,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":68,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":645,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":646,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":669,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":26,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1246,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":88,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["await",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"injectables/LocalStrategy.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["axios",{"_index":1155,"title":{},"body":{"dependencies.html":{}}}],["backers",{"_index":1237,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":243,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["badrequestexception(`categoria",{"_index":255,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["badrequestexception(`cidade",{"_index":328,"title":{},"body":{"injectables/CidadesService.html":{}}}],["badrequestexception(`cliente",{"_index":395,"title":{},"body":{"injectables/ClientesService.html":{}}}],["badrequestexception(`estado",{"_index":573,"title":{},"body":{"injectables/EstadosService.html":{}}}],["badrequestexception(`fornecedor",{"_index":637,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["badrequestexception(`origem",{"_index":740,"title":{},"body":{"injectables/OrigensService.html":{}}}],["badrequestexception(`produto",{"_index":805,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["badrequestexception(`profissao",{"_index":866,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["badrequestexception(`status",{"_index":931,"title":{},"body":{"injectables/StatusService.html":{}}}],["badrequestexception(`tipo",{"_index":995,"title":{},"body":{"injectables/TiposService.html":{}}}],["badrequestexception(`usuario",{"_index":1086,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["bcrypt(password",{"_index":1065,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.compare(updateuserdto.password",{"_index":1087,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.compare(userpassword",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(createuserdto.password",{"_index":1077,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(password",{"_index":1102,"title":{},"body":{"injectables/UsersService.html":{}}}],["bcrypt.hash(updateuserdto.password",{"_index":1090,"title":{},"body":{"injectables/UsersService.html":{}}}],["body",{"_index":193,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/ClientesController.html":{},"controllers/EstadosController.html":{},"controllers/FornecedoresController.html":{},"controllers/OrigensController.html":{},"controllers/ProdutosController.html":{},"controllers/ProfissoesController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/ClientesModule.html":{},"modules/EstadosModule.html":{},"modules/FornecedoresModule.html":{},"modules/OrigensModule.html":{},"modules/ProdutosModule.html":{},"modules/ProfissoesModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":1256,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1254,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1199,"title":{},"body":{"index.html":{}}}],["categoria",{"_index":158,"title":{"interfaces/Categoria.html":{}},"body":{"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"classes/CreateProdutoDto.html":{},"interfaces/Produto.html":{},"classes/UpdateProdutoDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoriacriado",{"_index":246,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["categoriacriado.save",{"_index":248,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["categorias",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["categorias.controller",{"_index":222,"title":{},"body":{"modules/CategoriasModule.html":{}}}],["categorias.dto",{"_index":199,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["categorias.dto.ts",{"_index":402,"title":{},"body":{"classes/CreateCategoriaDto.html":{},"classes/UpdateCategoriaDto.html":{},"coverage.html":{}}}],["categorias.dto.ts:5",{"_index":405,"title":{},"body":{"classes/CreateCategoriaDto.html":{},"classes/UpdateCategoriaDto.html":{}}}],["categorias.dto.ts:7",{"_index":406,"title":{},"body":{"classes/CreateCategoriaDto.html":{},"classes/UpdateCategoriaDto.html":{}}}],["categorias.dto.ts:8",{"_index":403,"title":{},"body":{"classes/CreateCategoriaDto.html":{},"classes/UpdateCategoriaDto.html":{}}}],["categorias.dto.ts:9",{"_index":407,"title":{},"body":{"classes/CreateCategoriaDto.html":{}}}],["categorias.service",{"_index":202,"title":{},"body":{"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{}}}],["categorias/categorias.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["categoriaschema",{"_index":223,"title":{},"body":{"modules/CategoriasModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoriascontroller",{"_index":169,"title":{"controllers/CategoriasController.html":{}},"body":{"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"coverage.html":{}}}],["categoriasmodel",{"_index":232,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["categoriasmodule",{"_index":27,"title":{"modules/CategoriasModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriasModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriasservice",{"_index":201,"title":{"injectables/CategoriasService.html":{}},"body":{"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"coverage.html":{},"overview.html":{}}}],["cidade",{"_index":265,"title":{"interfaces/Cidade.html":{}},"body":{"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"coverage.html":{}}}],["cidadecriado",{"_index":323,"title":{},"body":{"injectables/CidadesService.html":{}}}],["cidadecriado.save",{"_index":325,"title":{},"body":{"injectables/CidadesService.html":{}}}],["cidades",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cidades.controller",{"_index":306,"title":{},"body":{"modules/CidadesModule.html":{}}}],["cidades.dto",{"_index":288,"title":{},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{}}}],["cidades.dto.ts",{"_index":410,"title":{},"body":{"classes/CreateCidadeDto.html":{},"classes/UpdateCidadeDto.html":{},"coverage.html":{}}}],["cidades.dto.ts:10",{"_index":412,"title":{},"body":{"classes/CreateCidadeDto.html":{},"classes/UpdateCidadeDto.html":{}}}],["cidades.dto.ts:11",{"_index":416,"title":{},"body":{"classes/CreateCidadeDto.html":{}}}],["cidades.dto.ts:5",{"_index":415,"title":{},"body":{"classes/CreateCidadeDto.html":{},"classes/UpdateCidadeDto.html":{}}}],["cidades.dto.ts:7",{"_index":414,"title":{},"body":{"classes/CreateCidadeDto.html":{},"classes/UpdateCidadeDto.html":{}}}],["cidades.dto.ts:9",{"_index":413,"title":{},"body":{"classes/CreateCidadeDto.html":{},"classes/UpdateCidadeDto.html":{}}}],["cidades.service",{"_index":290,"title":{},"body":{"controllers/CidadesController.html":{},"modules/CidadesModule.html":{}}}],["cidades/cidades.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["cidadeschema",{"_index":307,"title":{},"body":{"modules/CidadesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cidadescontroller",{"_index":269,"title":{"controllers/CidadesController.html":{}},"body":{"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"coverage.html":{}}}],["cidadesmodel",{"_index":313,"title":{},"body":{"injectables/CidadesService.html":{}}}],["cidadesmodule",{"_index":28,"title":{"modules/CidadesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CidadesModule.html":{},"modules.html":{},"overview.html":{}}}],["cidadesservice",{"_index":289,"title":{"injectables/CidadesService.html":{}},"body":{"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"coverage.html":{},"overview.html":{}}}],["class",{"_index":11,"title":{"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"modules/FornecedoresModule.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/OrigensController.html":{},"modules/OrigensModule.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"modules/ProfissoesModule.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":400,"title":{},"body":{"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["cliente",{"_index":333,"title":{"interfaces/Cliente.html":{}},"body":{"interfaces/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"coverage.html":{}}}],["clientecriado",{"_index":390,"title":{},"body":{"injectables/ClientesService.html":{}}}],["clientecriado.save",{"_index":392,"title":{},"body":{"injectables/ClientesService.html":{}}}],["clientes",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clientes.controller",{"_index":373,"title":{},"body":{"modules/ClientesModule.html":{}}}],["clientes.dto",{"_index":355,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{}}}],["clientes.dto.ts",{"_index":418,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{},"coverage.html":{}}}],["clientes.dto.ts:11",{"_index":440,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["clientes.dto.ts:13",{"_index":435,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["clientes.dto.ts:15",{"_index":438,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["clientes.dto.ts:17",{"_index":431,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["clientes.dto.ts:19",{"_index":430,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["clientes.dto.ts:21",{"_index":434,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["clientes.dto.ts:23",{"_index":433,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["clientes.dto.ts:25",{"_index":437,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["clientes.dto.ts:26",{"_index":432,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["clientes.dto.ts:27",{"_index":442,"title":{},"body":{"classes/CreateClienteDto.html":{}}}],["clientes.dto.ts:5",{"_index":436,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["clientes.dto.ts:7",{"_index":439,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["clientes.dto.ts:9",{"_index":441,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["clientes.service",{"_index":357,"title":{},"body":{"controllers/ClientesController.html":{},"modules/ClientesModule.html":{}}}],["clientes/clientes.module",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["clienteschema",{"_index":374,"title":{},"body":{"modules/ClientesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["clientescontroller",{"_index":336,"title":{"controllers/ClientesController.html":{}},"body":{"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"coverage.html":{}}}],["clientesmodel",{"_index":380,"title":{},"body":{"injectables/ClientesService.html":{}}}],["clientesmodule",{"_index":29,"title":{"modules/ClientesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ClientesModule.html":{},"modules.html":{},"overview.html":{}}}],["clientesservice",{"_index":356,"title":{"injectables/ClientesService.html":{}},"body":{"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"coverage.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categoriasmodule",{"_index":218,"title":{},"body":{"modules/CategoriasModule.html":{},"overview.html":{}}}],["cluster_categoriasmodule_exports",{"_index":220,"title":{},"body":{"modules/CategoriasModule.html":{},"overview.html":{}}}],["cluster_categoriasmodule_providers",{"_index":219,"title":{},"body":{"modules/CategoriasModule.html":{},"overview.html":{}}}],["cluster_cidadesmodule",{"_index":302,"title":{},"body":{"modules/CidadesModule.html":{},"overview.html":{}}}],["cluster_cidadesmodule_exports",{"_index":304,"title":{},"body":{"modules/CidadesModule.html":{},"overview.html":{}}}],["cluster_cidadesmodule_providers",{"_index":303,"title":{},"body":{"modules/CidadesModule.html":{},"overview.html":{}}}],["cluster_clientesmodule",{"_index":369,"title":{},"body":{"modules/ClientesModule.html":{},"overview.html":{}}}],["cluster_clientesmodule_exports",{"_index":370,"title":{},"body":{"modules/ClientesModule.html":{},"overview.html":{}}}],["cluster_clientesmodule_providers",{"_index":371,"title":{},"body":{"modules/ClientesModule.html":{},"overview.html":{}}}],["cluster_estadosmodule",{"_index":547,"title":{},"body":{"modules/EstadosModule.html":{},"overview.html":{}}}],["cluster_estadosmodule_exports",{"_index":548,"title":{},"body":{"modules/EstadosModule.html":{},"overview.html":{}}}],["cluster_estadosmodule_providers",{"_index":549,"title":{},"body":{"modules/EstadosModule.html":{},"overview.html":{}}}],["cluster_fornecedoresmodule",{"_index":611,"title":{},"body":{"modules/FornecedoresModule.html":{},"overview.html":{}}}],["cluster_fornecedoresmodule_exports",{"_index":613,"title":{},"body":{"modules/FornecedoresModule.html":{},"overview.html":{}}}],["cluster_fornecedoresmodule_providers",{"_index":612,"title":{},"body":{"modules/FornecedoresModule.html":{},"overview.html":{}}}],["cluster_origensmodule",{"_index":714,"title":{},"body":{"modules/OrigensModule.html":{},"overview.html":{}}}],["cluster_origensmodule_exports",{"_index":715,"title":{},"body":{"modules/OrigensModule.html":{},"overview.html":{}}}],["cluster_origensmodule_providers",{"_index":716,"title":{},"body":{"modules/OrigensModule.html":{},"overview.html":{}}}],["cluster_produtosmodule",{"_index":779,"title":{},"body":{"modules/ProdutosModule.html":{},"overview.html":{}}}],["cluster_produtosmodule_exports",{"_index":780,"title":{},"body":{"modules/ProdutosModule.html":{},"overview.html":{}}}],["cluster_produtosmodule_providers",{"_index":781,"title":{},"body":{"modules/ProdutosModule.html":{},"overview.html":{}}}],["cluster_profissoesmodule",{"_index":843,"title":{},"body":{"modules/ProfissoesModule.html":{},"overview.html":{}}}],["cluster_profissoesmodule_exports",{"_index":844,"title":{},"body":{"modules/ProfissoesModule.html":{},"overview.html":{}}}],["cluster_profissoesmodule_providers",{"_index":845,"title":{},"body":{"modules/ProfissoesModule.html":{},"overview.html":{}}}],["cluster_statusmodule",{"_index":904,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_statusmodule_exports",{"_index":905,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_statusmodule_providers",{"_index":906,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_tiposmodule",{"_index":969,"title":{},"body":{"modules/TiposModule.html":{},"overview.html":{}}}],["cluster_tiposmodule_exports",{"_index":970,"title":{},"body":{"modules/TiposModule.html":{},"overview.html":{}}}],["cluster_tiposmodule_providers",{"_index":971,"title":{},"body":{"modules/TiposModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1047,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1048,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1049,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cnpj",{"_index":419,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["collection",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["com",{"_index":256,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["common/environment",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["console.log(doc",{"_index":251,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["const",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/LocalStrategy.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["constants",{"_index":115,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":93,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":671,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(categoriasmodel",{"_index":229,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["constructor(cidadesmodel",{"_index":311,"title":{},"body":{"injectables/CidadesService.html":{}}}],["constructor(clientesmodel",{"_index":378,"title":{},"body":{"injectables/ClientesService.html":{}}}],["constructor(estadosmodel",{"_index":556,"title":{},"body":{"injectables/EstadosService.html":{}}}],["constructor(fornecedoresmodel",{"_index":620,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["constructor(origensmodel",{"_index":723,"title":{},"body":{"injectables/OrigensService.html":{}}}],["constructor(private",{"_index":208,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/ClientesController.html":{},"controllers/EstadosController.html":{},"controllers/FornecedoresController.html":{},"injectables/LocalStrategy.html":{},"controllers/OrigensController.html":{},"controllers/ProdutosController.html":{},"controllers/ProfissoesController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["constructor(produtosmodel",{"_index":788,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["constructor(profissoesmodel",{"_index":852,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["constructor(statusmodel",{"_index":913,"title":{},"body":{"injectables/StatusService.html":{}}}],["constructor(tiposmodel",{"_index":978,"title":{},"body":{"injectables/TiposService.html":{}}}],["constructor(usermodel",{"_index":1060,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["consultarcategoria",{"_index":174,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["consultarcategoriakey",{"_index":175,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["consultarcategoriakey(@param('_id",{"_index":211,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["consultarcategoriakey(_id",{"_index":184,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["consultarcidade",{"_index":273,"title":{},"body":{"controllers/CidadesController.html":{}}}],["consultarcidadekey",{"_index":274,"title":{},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{}}}],["consultarcidadekey(@param('_id",{"_index":296,"title":{},"body":{"controllers/CidadesController.html":{}}}],["consultarcidadekey(_id",{"_index":281,"title":{},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{}}}],["consultarcliente",{"_index":340,"title":{},"body":{"controllers/ClientesController.html":{}}}],["consultarclientekey",{"_index":341,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{}}}],["consultarclientekey(@param('_id",{"_index":363,"title":{},"body":{"controllers/ClientesController.html":{}}}],["consultarclientekey(_id",{"_index":348,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{}}}],["consultarestado",{"_index":519,"title":{},"body":{"controllers/EstadosController.html":{}}}],["consultarestadokey",{"_index":520,"title":{},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{}}}],["consultarestadokey(@param('_id",{"_index":541,"title":{},"body":{"controllers/EstadosController.html":{}}}],["consultarestadokey(_id",{"_index":527,"title":{},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{}}}],["consultarfornecedor",{"_index":583,"title":{},"body":{"controllers/FornecedoresController.html":{}}}],["consultarfornecedorkey",{"_index":584,"title":{},"body":{"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{}}}],["consultarfornecedorkey(@param('_id",{"_index":605,"title":{},"body":{"controllers/FornecedoresController.html":{}}}],["consultarfornecedorkey(_id",{"_index":591,"title":{},"body":{"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{}}}],["consultarorigem",{"_index":686,"title":{},"body":{"controllers/OrigensController.html":{}}}],["consultarorigemkey",{"_index":687,"title":{},"body":{"controllers/OrigensController.html":{},"injectables/OrigensService.html":{}}}],["consultarorigemkey(@param('_id",{"_index":708,"title":{},"body":{"controllers/OrigensController.html":{}}}],["consultarorigemkey(_id",{"_index":694,"title":{},"body":{"controllers/OrigensController.html":{},"injectables/OrigensService.html":{}}}],["consultarproduto",{"_index":751,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["consultarprodutokey",{"_index":752,"title":{},"body":{"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["consultarprodutokey(@param('_id",{"_index":773,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["consultarprodutokey(_id",{"_index":759,"title":{},"body":{"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["consultarprofissao",{"_index":815,"title":{},"body":{"controllers/ProfissoesController.html":{}}}],["consultarprofissaokey",{"_index":816,"title":{},"body":{"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{}}}],["consultarprofissaokey(@param('_id",{"_index":837,"title":{},"body":{"controllers/ProfissoesController.html":{}}}],["consultarprofissaokey(_id",{"_index":823,"title":{},"body":{"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{}}}],["consultarstatus",{"_index":876,"title":{},"body":{"controllers/StatusController.html":{}}}],["consultarstatuskey",{"_index":877,"title":{},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{}}}],["consultarstatuskey(@param('_id",{"_index":898,"title":{},"body":{"controllers/StatusController.html":{}}}],["consultarstatuskey(_id",{"_index":884,"title":{},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{}}}],["consultartipo",{"_index":941,"title":{},"body":{"controllers/TiposController.html":{}}}],["consultartipokey",{"_index":942,"title":{},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{}}}],["consultartipokey(@param('_id",{"_index":963,"title":{},"body":{"controllers/TiposController.html":{}}}],["consultartipokey(_id",{"_index":949,"title":{},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{}}}],["consultartodoscategoria",{"_index":228,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["consultartodoscidade",{"_index":310,"title":{},"body":{"injectables/CidadesService.html":{}}}],["consultartodoscliente",{"_index":377,"title":{},"body":{"injectables/ClientesService.html":{}}}],["consultartodosestado",{"_index":555,"title":{},"body":{"injectables/EstadosService.html":{}}}],["consultartodosfornecedor",{"_index":619,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["consultartodosorigem",{"_index":722,"title":{},"body":{"injectables/OrigensService.html":{}}}],["consultartodosproduto",{"_index":787,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["consultartodosprofissao",{"_index":851,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["consultartodosstatus",{"_index":912,"title":{},"body":{"injectables/StatusService.html":{}}}],["consultartodostipo",{"_index":977,"title":{},"body":{"injectables/TiposService.html":{}}}],["consultartodosusers",{"_index":1058,"title":{},"body":{"injectables/UsersService.html":{}}}],["consultarusers",{"_index":1018,"title":{},"body":{"controllers/UsersController.html":{}}}],["consultaruserskey",{"_index":1019,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["consultaruserskey(@param('_id",{"_index":1041,"title":{},"body":{"controllers/UsersController.html":{}}}],["consultaruserskey(_id",{"_index":1026,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["consutaruseremail",{"_index":1059,"title":{},"body":{"injectables/UsersService.html":{}}}],["consutaruseremail(email",{"_index":1069,"title":{},"body":{"injectables/UsersService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/ClientesController.html":{},"controllers/EstadosController.html":{},"controllers/FornecedoresController.html":{},"controllers/OrigensController.html":{},"controllers/ProdutosController.html":{},"controllers/ProfissoesController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/ClientesController.html":{},"controllers/EstadosController.html":{},"controllers/FornecedoresController.html":{},"controllers/OrigensController.html":{},"controllers/ProdutosController.html":{},"controllers/ProfissoesController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('v1/categorias",{"_index":204,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["controller('v1/cidades",{"_index":292,"title":{},"body":{"controllers/CidadesController.html":{}}}],["controller('v1/clientes",{"_index":359,"title":{},"body":{"controllers/ClientesController.html":{}}}],["controller('v1/estados",{"_index":537,"title":{},"body":{"controllers/EstadosController.html":{}}}],["controller('v1/fornecedores",{"_index":601,"title":{},"body":{"controllers/FornecedoresController.html":{}}}],["controller('v1/origens",{"_index":704,"title":{},"body":{"controllers/OrigensController.html":{}}}],["controller('v1/produtos",{"_index":769,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["controller('v1/profissoes",{"_index":833,"title":{},"body":{"controllers/ProfissoesController.html":{}}}],["controller('v1/status",{"_index":894,"title":{},"body":{"controllers/StatusController.html":{}}}],["controller('v1/tipos",{"_index":959,"title":{},"body":{"controllers/TiposController.html":{}}}],["controller('v1/users",{"_index":1035,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"controllers/FornecedoresController.html":{},"modules/FornecedoresModule.html":{},"controllers/OrigensController.html":{},"modules/OrigensModule.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"controllers/ProfissoesController.html":{},"modules/ProfissoesModule.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":1103,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cpf",{"_index":420,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["createcategoriadto",{"_index":188,"title":{"classes/CreateCategoriaDto.html":{}},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"classes/CreateCategoriaDto.html":{},"coverage.html":{}}}],["createcidadedto",{"_index":284,"title":{"classes/CreateCidadeDto.html":{}},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"classes/CreateCidadeDto.html":{},"coverage.html":{}}}],["createclientedto",{"_index":351,"title":{"classes/CreateClienteDto.html":{}},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/CreateClienteDto.html":{},"coverage.html":{}}}],["createdat",{"_index":164,"title":{},"body":{"interfaces/Categoria.html":{},"interfaces/Cidade.html":{},"interfaces/Cliente.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"interfaces/Fornecedor.html":{},"interfaces/Origem.html":{},"interfaces/Produto.html":{},"interfaces/Profissao.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["createestadodto",{"_index":448,"title":{"classes/CreateEstadoDto.html":{}},"body":{"classes/CreateEstadoDto.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"coverage.html":{}}}],["createfornecedordto",{"_index":455,"title":{"classes/CreateFornecedorDto.html":{}},"body":{"classes/CreateFornecedorDto.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"coverage.html":{}}}],["createorigemdto",{"_index":462,"title":{"classes/CreateOrigemDto.html":{}},"body":{"classes/CreateOrigemDto.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"coverage.html":{}}}],["createprodutodto",{"_index":469,"title":{"classes/CreateProdutoDto.html":{}},"body":{"classes/CreateProdutoDto.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"coverage.html":{}}}],["createprofissaodto",{"_index":482,"title":{"classes/CreateProfissaoDto.html":{}},"body":{"classes/CreateProfissaoDto.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"coverage.html":{}}}],["createstatusdto",{"_index":489,"title":{"classes/CreateStatusDto.html":{}},"body":{"classes/CreateStatusDto.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"coverage.html":{}}}],["createtipodto",{"_index":496,"title":{"classes/CreateTipoDto.html":{}},"body":{"classes/CreateTipoDto.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":503,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.password",{"_index":1079,"title":{},"body":{"injectables/UsersService.html":{}}}],["criarcategoria",{"_index":176,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["criarcategoria(createcategoriadto",{"_index":187,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["criarcidade",{"_index":275,"title":{},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{}}}],["criarcidade(createcidadedto",{"_index":283,"title":{},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{}}}],["criarcliente",{"_index":342,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{}}}],["criarcliente(createclientedto",{"_index":350,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{}}}],["criarestado",{"_index":521,"title":{},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{}}}],["criarestado(createestadodto",{"_index":529,"title":{},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{}}}],["criarfornecedor",{"_index":585,"title":{},"body":{"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{}}}],["criarfornecedor(createfornecedordto",{"_index":593,"title":{},"body":{"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{}}}],["criarorigem",{"_index":688,"title":{},"body":{"controllers/OrigensController.html":{},"injectables/OrigensService.html":{}}}],["criarorigem(createorigemdto",{"_index":696,"title":{},"body":{"controllers/OrigensController.html":{},"injectables/OrigensService.html":{}}}],["criarproduto",{"_index":753,"title":{},"body":{"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["criarproduto(createprodutodto",{"_index":761,"title":{},"body":{"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["criarprofissao",{"_index":817,"title":{},"body":{"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{}}}],["criarprofissao(createprofissaodto",{"_index":825,"title":{},"body":{"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{}}}],["criarstatus",{"_index":878,"title":{},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{}}}],["criarstatus(createstatusdto",{"_index":886,"title":{},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{}}}],["criartipo",{"_index":943,"title":{},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{}}}],["criartipo(createtipodto",{"_index":951,"title":{},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{}}}],["criaruser",{"_index":1020,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["criaruser(createuserdto",{"_index":1028,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["data_nascimento",{"_index":421,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["date",{"_index":167,"title":{},"body":{"interfaces/Categoria.html":{},"interfaces/Cidade.html":{},"interfaces/Cliente.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"interfaces/Fornecedor.html":{},"interfaces/Origem.html":{},"interfaces/Produto.html":{},"interfaces/Profissao.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["date.now",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["db",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/ClientesModule.html":{},"modules/EstadosModule.html":{},"modules/FornecedoresModule.html":{},"modules/OrigensModule.html":{},"modules/ProdutosModule.html":{},"modules/ProfissoesModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":75,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/ClientesController.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"controllers/EstadosController.html":{},"controllers/FornecedoresController.html":{},"controllers/OrigensController.html":{},"controllers/ProdutosController.html":{},"controllers/ProfissoesController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":239,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":1055,"title":{},"body":{"modules/UsersModule.html":{}}}],["defined",{"_index":77,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletarcategoria",{"_index":177,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["deletarcategoria(_id",{"_index":190,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["deletarcidade",{"_index":276,"title":{},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{}}}],["deletarcidade(_id",{"_index":286,"title":{},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{}}}],["deletarcliente",{"_index":343,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{}}}],["deletarcliente(_id",{"_index":353,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{}}}],["deletarestado",{"_index":522,"title":{},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{}}}],["deletarestado(_id",{"_index":531,"title":{},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{}}}],["deletarfornecedor",{"_index":586,"title":{},"body":{"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{}}}],["deletarfornecedor(_id",{"_index":595,"title":{},"body":{"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{}}}],["deletarorigem",{"_index":689,"title":{},"body":{"controllers/OrigensController.html":{},"injectables/OrigensService.html":{}}}],["deletarorigem(_id",{"_index":698,"title":{},"body":{"controllers/OrigensController.html":{},"injectables/OrigensService.html":{}}}],["deletarproduto",{"_index":754,"title":{},"body":{"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["deletarproduto(_id",{"_index":763,"title":{},"body":{"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["deletarprofissao",{"_index":818,"title":{},"body":{"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{}}}],["deletarprofissao(_id",{"_index":827,"title":{},"body":{"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{}}}],["deletarstatus",{"_index":879,"title":{},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{}}}],["deletarstatus(_id",{"_index":888,"title":{},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{}}}],["deletartipo",{"_index":944,"title":{},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{}}}],["deletartipo(_id",{"_index":953,"title":{},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{}}}],["deletaruser",{"_index":1021,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deletaruser(_id",{"_index":1030,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":196,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/ClientesController.html":{},"controllers/EstadosController.html":{},"controllers/FornecedoresController.html":{},"controllers/OrigensController.html":{},"controllers/ProdutosController.html":{},"controllers/ProfissoesController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["delete('/:_id",{"_index":191,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/ClientesController.html":{},"controllers/EstadosController.html":{},"controllers/FornecedoresController.html":{},"controllers/OrigensController.html":{},"controllers/ProdutosController.html":{},"controllers/ProfissoesController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["dependencies",{"_index":18,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/ClientesModule.html":{},"modules/EstadosModule.html":{},"modules/FornecedoresModule.html":{},"modules/OrigensModule.html":{},"modules/ProdutosModule.html":{},"modules/ProfissoesModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependente",{"_index":447,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["description",{"_index":1205,"title":{},"body":{"index.html":{}}}],["development",{"_index":1214,"title":{},"body":{"index.html":{}}}],["doc",{"_index":250,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["document",{"_index":162,"title":{},"body":{"interfaces/Categoria.html":{},"interfaces/Cidade.html":{},"interfaces/Cliente.html":{},"interfaces/Estado.html":{},"interfaces/Fornecedor.html":{},"interfaces/Origem.html":{},"interfaces/Produto.html":{},"interfaces/Profissao.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"interfaces/User.html":{}}}],["documentation",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["dtos/create",{"_index":198,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/update",{"_index":200,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":1225,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":1200,"title":{},"body":{"index.html":{}}}],["email",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["encontrado",{"_index":259,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["environment",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.security.saltrounds",{"_index":1078,"title":{},"body":{"injectables/UsersService.html":{}}}],["error",{"_index":249,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["estado",{"_index":411,"title":{"interfaces/Estado.html":{}},"body":{"classes/CreateCidadeDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"classes/UpdateCidadeDto.html":{},"coverage.html":{}}}],["estado_id",{"_index":267,"title":{},"body":{"interfaces/Cidade.html":{},"miscellaneous/variables.html":{}}}],["estadocriado",{"_index":568,"title":{},"body":{"injectables/EstadosService.html":{}}}],["estadocriado.save",{"_index":570,"title":{},"body":{"injectables/EstadosService.html":{}}}],["estados",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["estados.controller",{"_index":551,"title":{},"body":{"modules/EstadosModule.html":{}}}],["estados.dto",{"_index":533,"title":{},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{}}}],["estados.dto.ts",{"_index":450,"title":{},"body":{"classes/CreateEstadoDto.html":{},"classes/UpdateEstadoDto.html":{},"coverage.html":{}}}],["estados.dto.ts:5",{"_index":453,"title":{},"body":{"classes/CreateEstadoDto.html":{},"classes/UpdateEstadoDto.html":{}}}],["estados.dto.ts:7",{"_index":452,"title":{},"body":{"classes/CreateEstadoDto.html":{},"classes/UpdateEstadoDto.html":{}}}],["estados.dto.ts:8",{"_index":451,"title":{},"body":{"classes/CreateEstadoDto.html":{},"classes/UpdateEstadoDto.html":{}}}],["estados.dto.ts:9",{"_index":454,"title":{},"body":{"classes/CreateEstadoDto.html":{}}}],["estados.service",{"_index":535,"title":{},"body":{"controllers/EstadosController.html":{},"modules/EstadosModule.html":{}}}],["estados/estados.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["estadoschema",{"_index":552,"title":{},"body":{"modules/EstadosModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["estadoscontroller",{"_index":515,"title":{"controllers/EstadosController.html":{}},"body":{"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"coverage.html":{}}}],["estadosmodel",{"_index":558,"title":{},"body":{"injectables/EstadosService.html":{}}}],["estadosmodule",{"_index":30,"title":{"modules/EstadosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EstadosModule.html":{},"modules.html":{},"overview.html":{}}}],["estadosservice",{"_index":534,"title":{"injectables/EstadosService.html":{}},"body":{"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"coverage.html":{},"overview.html":{}}}],["exec",{"_index":1098,"title":{},"body":{"injectables/UsersService.html":{}}}],["expiresin",{"_index":120,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"interfaces/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"interfaces/Fornecedor.html":{},"controllers/FornecedoresController.html":{},"modules/FornecedoresModule.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Origem.html":{},"controllers/OrigensController.html":{},"modules/OrigensModule.html":{},"injectables/OrigensService.html":{},"interfaces/Produto.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"interfaces/Profissao.html":{},"controllers/ProfissoesController.html":{},"modules/ProfissoesModule.html":{},"injectables/ProfissoesService.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/ClientesModule.html":{},"modules/EstadosModule.html":{},"modules/FornecedoresModule.html":{},"modules/OrigensModule.html":{},"modules/ProdutosModule.html":{},"modules/ProfissoesModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":1145,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":161,"title":{},"body":{"interfaces/Categoria.html":{},"interfaces/Cidade.html":{},"interfaces/Cliente.html":{},"interfaces/Estado.html":{},"interfaces/Fornecedor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Origem.html":{},"interfaces/Produto.html":{},"interfaces/Profissao.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"interfaces/User.html":{}}}],["extractjwt",{"_index":652,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":660,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"interfaces/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"interfaces/Fornecedor.html":{},"controllers/FornecedoresController.html":{},"modules/FornecedoresModule.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Origem.html":{},"controllers/OrigensController.html":{},"modules/OrigensModule.html":{},"injectables/OrigensService.html":{},"interfaces/Produto.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"interfaces/Profissao.html":{},"controllers/ProfissoesController.html":{},"modules/ProfissoesModule.html":{},"injectables/ProfissoesService.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["fisica",{"_index":443,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["flatted",{"_index":1162,"title":{},"body":{"dependencies.html":{}}}],["fornecedor",{"_index":472,"title":{"interfaces/Fornecedor.html":{}},"body":{"classes/CreateProdutoDto.html":{},"interfaces/Fornecedor.html":{},"controllers/FornecedoresController.html":{},"modules/FornecedoresModule.html":{},"injectables/FornecedoresService.html":{},"interfaces/Produto.html":{},"classes/UpdateProdutoDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fornecedorcriado",{"_index":632,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["fornecedorcriado.save",{"_index":634,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["fornecedores",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fornecedores.controller",{"_index":615,"title":{},"body":{"modules/FornecedoresModule.html":{}}}],["fornecedores.dto",{"_index":597,"title":{},"body":{"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{}}}],["fornecedores.dto.ts",{"_index":457,"title":{},"body":{"classes/CreateFornecedorDto.html":{},"classes/UpdateFornecedorDto.html":{},"coverage.html":{}}}],["fornecedores.dto.ts:5",{"_index":459,"title":{},"body":{"classes/CreateFornecedorDto.html":{},"classes/UpdateFornecedorDto.html":{}}}],["fornecedores.dto.ts:7",{"_index":460,"title":{},"body":{"classes/CreateFornecedorDto.html":{},"classes/UpdateFornecedorDto.html":{}}}],["fornecedores.dto.ts:8",{"_index":458,"title":{},"body":{"classes/CreateFornecedorDto.html":{},"classes/UpdateFornecedorDto.html":{}}}],["fornecedores.dto.ts:9",{"_index":461,"title":{},"body":{"classes/CreateFornecedorDto.html":{}}}],["fornecedores.service",{"_index":599,"title":{},"body":{"controllers/FornecedoresController.html":{},"modules/FornecedoresModule.html":{}}}],["fornecedores/fornecedores.module",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["fornecedorescontroller",{"_index":579,"title":{"controllers/FornecedoresController.html":{}},"body":{"controllers/FornecedoresController.html":{},"modules/FornecedoresModule.html":{},"coverage.html":{}}}],["fornecedoresmodel",{"_index":622,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["fornecedoresmodule",{"_index":31,"title":{"modules/FornecedoresModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FornecedoresModule.html":{},"modules.html":{},"overview.html":{}}}],["fornecedoresservice",{"_index":598,"title":{"injectables/FornecedoresService.html":{}},"body":{"controllers/FornecedoresController.html":{},"modules/FornecedoresModule.html":{},"injectables/FornecedoresService.html":{},"coverage.html":{},"overview.html":{}}}],["fornecedorschema",{"_index":616,"title":{},"body":{"modules/FornecedoresModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["framework",{"_index":1198,"title":{},"body":{"index.html":{}}}],["fs",{"_index":1164,"title":{},"body":{"dependencies.html":{}}}],["function",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1192,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/:_id",{"_index":185,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/ClientesController.html":{},"controllers/EstadosController.html":{},"controllers/FornecedoresController.html":{},"controllers/OrigensController.html":{},"controllers/ProdutosController.html":{},"controllers/ProfissoesController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["getting",{"_index":1194,"title":{"index.html":{}},"body":{}}],["grow",{"_index":1232,"title":{},"body":{"index.html":{}}}],["hash",{"_index":1076,"title":{},"body":{"injectables/UsersService.html":{}}}],["here",{"_index":1243,"title":{},"body":{"index.html":{}}}],["https",{"_index":1167,"title":{},"body":{"dependencies.html":{}}}],["https://nestjs.com",{"_index":1250,"title":{},"body":{"index.html":{}}}],["id",{"_index":663,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["identifier",{"_index":1105,"title":{},"body":{"coverage.html":{}}}],["if(!categoriacriado",{"_index":253,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["if(!cidadecriado",{"_index":327,"title":{},"body":{"injectables/CidadesService.html":{}}}],["if(!clientecriado",{"_index":394,"title":{},"body":{"injectables/ClientesService.html":{}}}],["if(!estadocriado",{"_index":572,"title":{},"body":{"injectables/EstadosService.html":{}}}],["if(!fornecedorcriado",{"_index":636,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["if(!origemcriado",{"_index":739,"title":{},"body":{"injectables/OrigensService.html":{},"injectables/ProfissoesService.html":{}}}],["if(!produtocriado",{"_index":804,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["if(!statusencontrado",{"_index":930,"title":{},"body":{"injectables/StatusService.html":{}}}],["if(!tipocriado",{"_index":994,"title":{},"body":{"injectables/TiposService.html":{}}}],["if(!user",{"_index":679,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["if(!userencontrado",{"_index":1085,"title":{},"body":{"injectables/UsersService.html":{}}}],["if(!vinculoencontrado",{"_index":1096,"title":{},"body":{"injectables/UsersService.html":{}}}],["if(ismatch",{"_index":1089,"title":{},"body":{"injectables/UsersService.html":{}}}],["if(user",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{}}}],["ignoreexpiration",{"_index":661,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"interfaces/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"interfaces/Fornecedor.html":{},"controllers/FornecedoresController.html":{},"modules/FornecedoresModule.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Origem.html":{},"controllers/OrigensController.html":{},"modules/OrigensModule.html":{},"injectables/OrigensService.html":{},"interfaces/Produto.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"interfaces/Profissao.html":{},"controllers/ProfissoesController.html":{},"modules/ProfissoesModule.html":{},"injectables/ProfissoesService.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/ClientesModule.html":{},"modules/EstadosModule.html":{},"modules/FornecedoresModule.html":{},"modules/OrigensModule.html":{},"modules/ProdutosModule.html":{},"modules/ProfissoesModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":70,"title":{"index.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"interfaces/Cliente.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"interfaces/Fornecedor.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/Origem.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"interfaces/Produto.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"interfaces/Profissao.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"interfaces/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"interfaces/Fornecedor.html":{},"controllers/FornecedoresController.html":{},"modules/FornecedoresModule.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Origem.html":{},"controllers/OrigensController.html":{},"modules/OrigensModule.html":{},"injectables/OrigensService.html":{},"interfaces/Produto.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"interfaces/Profissao.html":{},"controllers/ProfissoesController.html":{},"modules/ProfissoesModule.html":{},"injectables/ProfissoesService.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":122,"title":{"injectables/AuthService.html":{},"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":244,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["injectmodel('categoria",{"_index":245,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["injectmodel('cidade",{"_index":322,"title":{},"body":{"injectables/CidadesService.html":{}}}],["injectmodel('cliente",{"_index":389,"title":{},"body":{"injectables/ClientesService.html":{}}}],["injectmodel('estado",{"_index":567,"title":{},"body":{"injectables/EstadosService.html":{}}}],["injectmodel('fornecedor",{"_index":631,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["injectmodel('origem",{"_index":734,"title":{},"body":{"injectables/OrigensService.html":{}}}],["injectmodel('produto",{"_index":799,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["injectmodel('profissao",{"_index":863,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["injectmodel('status",{"_index":924,"title":{},"body":{"injectables/StatusService.html":{}}}],["injectmodel('tipo",{"_index":989,"title":{},"body":{"injectables/TiposService.html":{}}}],["injectmodel('user",{"_index":1075,"title":{},"body":{"injectables/UsersService.html":{}}}],["inscricao",{"_index":422,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["installation",{"_index":1210,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1212,"title":{},"body":{"index.html":{}}}],["interface",{"_index":157,"title":{"interfaces/Categoria.html":{},"interfaces/Cidade.html":{},"interfaces/Cliente.html":{},"interfaces/Estado.html":{},"interfaces/Fornecedor.html":{},"interfaces/Origem.html":{},"interfaces/Produto.html":{},"interfaces/Profissao.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"interfaces/User.html":{}},"body":{"interfaces/Categoria.html":{},"interfaces/Cidade.html":{},"interfaces/Cliente.html":{},"interfaces/Estado.html":{},"interfaces/Fornecedor.html":{},"interfaces/Origem.html":{},"interfaces/Produto.html":{},"interfaces/Profissao.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":159,"title":{},"body":{"interfaces/Categoria.html":{},"interfaces/Cidade.html":{},"interfaces/Cliente.html":{},"interfaces/Estado.html":{},"interfaces/Fornecedor.html":{},"interfaces/Origem.html":{},"interfaces/Produto.html":{},"interfaces/Profissao.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"interfaces/User.html":{},"overview.html":{}}}],["interfaces/categorias.interface",{"_index":203,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{}}}],["interfaces/categorias.schema",{"_index":224,"title":{},"body":{"modules/CategoriasModule.html":{}}}],["interfaces/cidades.interface",{"_index":291,"title":{},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{}}}],["interfaces/cidades.schema",{"_index":308,"title":{},"body":{"modules/CidadesModule.html":{}}}],["interfaces/clientes.interface",{"_index":358,"title":{},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{}}}],["interfaces/clientes.schema",{"_index":375,"title":{},"body":{"modules/ClientesModule.html":{}}}],["interfaces/estados.interface",{"_index":536,"title":{},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{}}}],["interfaces/estados.schema",{"_index":553,"title":{},"body":{"modules/EstadosModule.html":{}}}],["interfaces/fornecedores.interface",{"_index":600,"title":{},"body":{"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{}}}],["interfaces/fornecedores.schema",{"_index":617,"title":{},"body":{"modules/FornecedoresModule.html":{}}}],["interfaces/origens.interface",{"_index":703,"title":{},"body":{"controllers/OrigensController.html":{},"injectables/OrigensService.html":{}}}],["interfaces/origens.schema",{"_index":720,"title":{},"body":{"modules/OrigensModule.html":{}}}],["interfaces/produtos.interface",{"_index":768,"title":{},"body":{"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["interfaces/produtos.schema",{"_index":785,"title":{},"body":{"modules/ProdutosModule.html":{}}}],["interfaces/profissoes.interface",{"_index":832,"title":{},"body":{"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{}}}],["interfaces/profissoes.schema",{"_index":849,"title":{},"body":{"modules/ProfissoesModule.html":{}}}],["interfaces/status.interface",{"_index":893,"title":{},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{}}}],["interfaces/status.schema",{"_index":910,"title":{},"body":{"modules/StatusModule.html":{}}}],["interfaces/tipos.interface",{"_index":958,"title":{},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{}}}],["interfaces/tipos.schema",{"_index":975,"title":{},"body":{"modules/TiposModule.html":{}}}],["interfaces/user.interface",{"_index":1034,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["interfaces/user.schema",{"_index":1053,"title":{},"body":{"modules/UsersModule.html":{}}}],["ismatch",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["join",{"_index":1239,"title":{},"body":{"index.html":{}}}],["json.stringify(updatecategoriadto",{"_index":215,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["json.stringify(updatecidadedto",{"_index":299,"title":{},"body":{"controllers/CidadesController.html":{}}}],["json.stringify(updateclientedto",{"_index":366,"title":{},"body":{"controllers/ClientesController.html":{}}}],["json.stringify(updateestadodto",{"_index":544,"title":{},"body":{"controllers/EstadosController.html":{}}}],["json.stringify(updatefornecedordto",{"_index":608,"title":{},"body":{"controllers/FornecedoresController.html":{}}}],["json.stringify(updateorigemdto",{"_index":711,"title":{},"body":{"controllers/OrigensController.html":{}}}],["json.stringify(updateprodutodto",{"_index":776,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["json.stringify(updateprofissaodto",{"_index":840,"title":{},"body":{"controllers/ProfissoesController.html":{}}}],["json.stringify(updatestatusdto",{"_index":901,"title":{},"body":{"controllers/StatusController.html":{}}}],["json.stringify(updatetipodto",{"_index":966,"title":{},"body":{"controllers/TiposController.html":{}}}],["json.stringify(updateuserdto",{"_index":1044,"title":{},"body":{"controllers/UsersController.html":{}}}],["juridica",{"_index":445,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["jwt",{"_index":655,"title":{},"body":{"injectables/JwtStrategy.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":642,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":114,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":118,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":659,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":116,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":103,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1247,"title":{},"body":{"index.html":{}}}],["legend",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/ClientesModule.html":{},"modules/EstadosModule.html":{},"modules/FornecedoresModule.html":{},"modules/OrigensModule.html":{},"modules/ProdutosModule.html":{},"modules/ProfissoesModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":1253,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1229,"title":{},"body":{"index.html":{}}}],["local",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":90,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstorage",{"_index":1171,"title":{},"body":{"dependencies.html":{}}}],["localstrategy",{"_index":104,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":194,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["logger(categoriascontroller.name",{"_index":207,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["logger(categoriasservice.name",{"_index":241,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["logger(cidadescontroller.name",{"_index":293,"title":{},"body":{"controllers/CidadesController.html":{}}}],["logger(cidadesservice.name",{"_index":320,"title":{},"body":{"injectables/CidadesService.html":{}}}],["logger(clientescontroller.name",{"_index":360,"title":{},"body":{"controllers/ClientesController.html":{}}}],["logger(clientesservice.name",{"_index":387,"title":{},"body":{"injectables/ClientesService.html":{}}}],["logger(estadoscontroller.name",{"_index":538,"title":{},"body":{"controllers/EstadosController.html":{}}}],["logger(estadosservice.name",{"_index":565,"title":{},"body":{"injectables/EstadosService.html":{}}}],["logger(fornecedorescontroller.name",{"_index":602,"title":{},"body":{"controllers/FornecedoresController.html":{}}}],["logger(fornecedoresservice.name",{"_index":629,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["logger(origenscontroller.name",{"_index":705,"title":{},"body":{"controllers/OrigensController.html":{}}}],["logger(origensservice.name",{"_index":732,"title":{},"body":{"injectables/OrigensService.html":{}}}],["logger(produtoscontroller.name",{"_index":770,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["logger(produtosservice.name",{"_index":797,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["logger(profissoescontroller.name",{"_index":834,"title":{},"body":{"controllers/ProfissoesController.html":{}}}],["logger(profissoesservice.name",{"_index":861,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["logger(statuscontroller.name",{"_index":895,"title":{},"body":{"controllers/StatusController.html":{}}}],["logger(statusservice.name",{"_index":922,"title":{},"body":{"injectables/StatusService.html":{}}}],["logger(tiposcontroller.name",{"_index":960,"title":{},"body":{"controllers/TiposController.html":{}}}],["logger(tiposservice.name",{"_index":987,"title":{},"body":{"injectables/TiposService.html":{}}}],["logger(userscontroller.name",{"_index":1036,"title":{},"body":{"controllers/UsersController.html":{}}}],["logger(usersservice.name",{"_index":1073,"title":{},"body":{"injectables/UsersService.html":{}}}],["login",{"_index":73,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(req",{"_index":74,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{}}}],["master",{"_index":446,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["master_id",{"_index":423,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["matching",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"interfaces/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"interfaces/Fornecedor.html":{},"controllers/FornecedoresController.html":{},"modules/FornecedoresModule.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Origem.html":{},"controllers/OrigensController.html":{},"modules/OrigensModule.html":{},"injectables/OrigensService.html":{},"interfaces/Produto.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"interfaces/Profissao.html":{},"controllers/ProfissoesController.html":{},"modules/ProfissoesModule.html":{},"injectables/ProfissoesService.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":1180,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":71,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":1191,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1228,"title":{},"body":{"index.html":{}}}],["mode",{"_index":1218,"title":{},"body":{"index.html":{}}}],["model",{"_index":230,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":15,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/ClientesModule.html":{},"modules/EstadosModule.html":{},"modules/FornecedoresModule.html":{},"modules/OrigensModule.html":{},"modules/ProdutosModule.html":{},"modules/ProfissoesModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/ClientesModule.html":{},"modules/EstadosModule.html":{},"modules/FornecedoresModule.html":{},"modules/OrigensModule.html":{},"modules/ProdutosModule.html":{},"modules/ProfissoesModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":17,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/ClientesModule.html":{},"modules/EstadosModule.html":{},"modules/FornecedoresModule.html":{},"modules/OrigensModule.html":{},"modules/ProdutosModule.html":{},"modules/ProfissoesModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb://localhost:27017",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongodb://potencialuserhomolog:rewq987aa@200.219.222.90:27017",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose",{"_index":168,"title":{},"body":{"interfaces/Categoria.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"injectables/CidadesService.html":{},"interfaces/Cliente.html":{},"injectables/ClientesService.html":{},"interfaces/Estado.html":{},"injectables/EstadosService.html":{},"interfaces/Fornecedor.html":{},"injectables/FornecedoresService.html":{},"interfaces/Origem.html":{},"injectables/OrigensService.html":{},"interfaces/Produto.html":{},"injectables/ProdutosService.html":{},"interfaces/Profissao.html":{},"injectables/ProfissoesService.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"injectables/TiposService.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/ClientesModule.html":{},"modules/EstadosModule.html":{},"modules/FornecedoresModule.html":{},"modules/OrigensModule.html":{},"modules/ProdutosModule.html":{},"modules/ProfissoesModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":225,"title":{},"body":{"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/ClientesModule.html":{},"modules/EstadosModule.html":{},"modules/FornecedoresModule.html":{},"modules/OrigensModule.html":{},"modules/ProdutosModule.html":{},"modules/ProfissoesModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot(`${environment.db.url}/absoluta",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1242,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":1248,"title":{},"body":{"index.html":{}}}],["name",{"_index":80,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":1206,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1252,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"modules/FornecedoresModule.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/OrigensController.html":{},"modules/OrigensModule.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"modules/ProfissoesModule.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1140,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":111,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"modules/FornecedoresModule.html":{},"injectables/FornecedoresService.html":{},"modules/OrigensModule.html":{},"injectables/OrigensService.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"modules/ProfissoesModule.html":{},"injectables/ProfissoesService.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":113,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1144,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":408,"title":{},"body":{"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["new",{"_index":206,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"injectables/LocalStrategy.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":1170,"title":{},"body":{"dependencies.html":{}}}],["node.js",{"_index":1197,"title":{},"body":{"index.html":{}}}],["nome",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"interfaces/Cidade.html":{},"interfaces/Cliente.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"interfaces/Fornecedor.html":{},"interfaces/Origem.html":{},"interfaces/Produto.html":{},"interfaces/Profissao.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":1211,"title":{},"body":{"index.html":{}}}],["null",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":429,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"interfaces/Origem.html":{},"interfaces/Produto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"miscellaneous/variables.html":{}}}],["não",{"_index":258,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["o",{"_index":257,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":667,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["open",{"_index":1230,"title":{},"body":{"index.html":{}}}],["optional",{"_index":82,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["origem",{"_index":680,"title":{"interfaces/Origem.html":{}},"body":{"interfaces/Origem.html":{},"controllers/OrigensController.html":{},"modules/OrigensModule.html":{},"injectables/OrigensService.html":{},"coverage.html":{}}}],["origemcriado",{"_index":735,"title":{},"body":{"injectables/OrigensService.html":{},"injectables/ProfissoesService.html":{}}}],["origemcriado.save",{"_index":737,"title":{},"body":{"injectables/OrigensService.html":{},"injectables/ProfissoesService.html":{}}}],["origemschema",{"_index":719,"title":{},"body":{"modules/OrigensModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["origens",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["origens.controller",{"_index":718,"title":{},"body":{"modules/OrigensModule.html":{}}}],["origens.dto",{"_index":700,"title":{},"body":{"controllers/OrigensController.html":{},"injectables/OrigensService.html":{}}}],["origens.dto.ts",{"_index":464,"title":{},"body":{"classes/CreateOrigemDto.html":{},"classes/UpdateOrigemDto.html":{},"coverage.html":{}}}],["origens.dto.ts:5",{"_index":466,"title":{},"body":{"classes/CreateOrigemDto.html":{},"classes/UpdateOrigemDto.html":{}}}],["origens.dto.ts:7",{"_index":467,"title":{},"body":{"classes/CreateOrigemDto.html":{},"classes/UpdateOrigemDto.html":{}}}],["origens.dto.ts:8",{"_index":465,"title":{},"body":{"classes/CreateOrigemDto.html":{},"classes/UpdateOrigemDto.html":{}}}],["origens.dto.ts:9",{"_index":468,"title":{},"body":{"classes/CreateOrigemDto.html":{}}}],["origens.service",{"_index":702,"title":{},"body":{"controllers/OrigensController.html":{},"modules/OrigensModule.html":{}}}],["origens/origens.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["origenscontroller",{"_index":682,"title":{"controllers/OrigensController.html":{}},"body":{"controllers/OrigensController.html":{},"modules/OrigensModule.html":{},"coverage.html":{}}}],["origensmodel",{"_index":725,"title":{},"body":{"injectables/OrigensService.html":{}}}],["origensmodule",{"_index":32,"title":{"modules/OrigensModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrigensModule.html":{},"modules.html":{},"overview.html":{}}}],["origensservice",{"_index":701,"title":{"injectables/OrigensService.html":{}},"body":{"controllers/OrigensController.html":{},"modules/OrigensModule.html":{},"injectables/OrigensService.html":{},"coverage.html":{},"overview.html":{}}}],["ou",{"_index":444,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["out",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/ClientesModule.html":{},"modules/EstadosModule.html":{},"modules/FornecedoresModule.html":{},"modules/OrigensModule.html":{},"modules/ProdutosModule.html":{},"modules/ProfissoesModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":1257,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1138,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":195,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/ClientesController.html":{},"controllers/EstadosController.html":{},"controllers/FornecedoresController.html":{},"controllers/OrigensController.html":{},"controllers/ProdutosController.html":{},"controllers/ProfissoesController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["param('_id",{"_index":213,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/ClientesController.html":{},"controllers/EstadosController.html":{},"controllers/FornecedoresController.html":{},"controllers/OrigensController.html":{},"controllers/ProdutosController.html":{},"controllers/ProfissoesController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":79,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["passport",{"_index":654,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":112,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["passportmodule.register",{"_index":1054,"title":{},"body":{"modules/UsersModule.html":{}}}],["passportstrategy",{"_index":656,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":657,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":506,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["passwordfield",{"_index":677,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["payload",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":665,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":664,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["please",{"_index":1240,"title":{},"body":{"index.html":{}}}],["post",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/ClientesController.html":{},"controllers/EstadosController.html":{},"controllers/FornecedoresController.html":{},"controllers/OrigensController.html":{},"controllers/ProdutosController.html":{},"controllers/ProfissoesController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["post('v1/auth/login",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["prefix",{"_index":171,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/ClientesController.html":{},"controllers/EstadosController.html":{},"controllers/FornecedoresController.html":{},"controllers/OrigensController.html":{},"controllers/ProdutosController.html":{},"controllers/ProfissoesController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["process.env.db_url",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.salt_rounds",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1220,"title":{},"body":{"index.html":{}}}],["produto",{"_index":745,"title":{"interfaces/Produto.html":{}},"body":{"interfaces/Produto.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"coverage.html":{}}}],["produtocriado",{"_index":800,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["produtocriado.save",{"_index":802,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["produtos",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["produtos.controller",{"_index":783,"title":{},"body":{"modules/ProdutosModule.html":{}}}],["produtos.dto",{"_index":765,"title":{},"body":{"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{}}}],["produtos.dto.ts",{"_index":471,"title":{},"body":{"classes/CreateProdutoDto.html":{},"classes/UpdateProdutoDto.html":{},"coverage.html":{}}}],["produtos.dto.ts:11",{"_index":474,"title":{},"body":{"classes/CreateProdutoDto.html":{},"classes/UpdateProdutoDto.html":{}}}],["produtos.dto.ts:13",{"_index":478,"title":{},"body":{"classes/CreateProdutoDto.html":{},"classes/UpdateProdutoDto.html":{}}}],["produtos.dto.ts:15",{"_index":476,"title":{},"body":{"classes/CreateProdutoDto.html":{},"classes/UpdateProdutoDto.html":{}}}],["produtos.dto.ts:16",{"_index":475,"title":{},"body":{"classes/CreateProdutoDto.html":{},"classes/UpdateProdutoDto.html":{}}}],["produtos.dto.ts:17",{"_index":480,"title":{},"body":{"classes/CreateProdutoDto.html":{}}}],["produtos.dto.ts:5",{"_index":477,"title":{},"body":{"classes/CreateProdutoDto.html":{},"classes/UpdateProdutoDto.html":{}}}],["produtos.dto.ts:7",{"_index":481,"title":{},"body":{"classes/CreateProdutoDto.html":{},"classes/UpdateProdutoDto.html":{}}}],["produtos.dto.ts:9",{"_index":479,"title":{},"body":{"classes/CreateProdutoDto.html":{},"classes/UpdateProdutoDto.html":{}}}],["produtos.service",{"_index":767,"title":{},"body":{"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{}}}],["produtos/produtos.module",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["produtoschema",{"_index":784,"title":{},"body":{"modules/ProdutosModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["produtoscontroller",{"_index":747,"title":{"controllers/ProdutosController.html":{}},"body":{"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"coverage.html":{}}}],["produtosmodel",{"_index":790,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["produtosmodule",{"_index":33,"title":{"modules/ProdutosModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProdutosModule.html":{},"modules.html":{},"overview.html":{}}}],["produtosservice",{"_index":766,"title":{"injectables/ProdutosService.html":{}},"body":{"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"coverage.html":{},"overview.html":{}}}],["profissao",{"_index":424,"title":{"interfaces/Profissao.html":{}},"body":{"classes/CreateClienteDto.html":{},"interfaces/Profissao.html":{},"controllers/ProfissoesController.html":{},"modules/ProfissoesModule.html":{},"injectables/ProfissoesService.html":{},"classes/UpdateClienteDto.html":{},"coverage.html":{}}}],["profissaoschema",{"_index":848,"title":{},"body":{"modules/ProfissoesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["profissoes",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profissoes.controller",{"_index":847,"title":{},"body":{"modules/ProfissoesModule.html":{}}}],["profissoes.dto",{"_index":829,"title":{},"body":{"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{}}}],["profissoes.dto.ts",{"_index":484,"title":{},"body":{"classes/CreateProfissaoDto.html":{},"classes/UpdateProfissaoDto.html":{},"coverage.html":{}}}],["profissoes.dto.ts:5",{"_index":486,"title":{},"body":{"classes/CreateProfissaoDto.html":{},"classes/UpdateProfissaoDto.html":{}}}],["profissoes.dto.ts:7",{"_index":487,"title":{},"body":{"classes/CreateProfissaoDto.html":{},"classes/UpdateProfissaoDto.html":{}}}],["profissoes.dto.ts:8",{"_index":485,"title":{},"body":{"classes/CreateProfissaoDto.html":{},"classes/UpdateProfissaoDto.html":{}}}],["profissoes.dto.ts:9",{"_index":488,"title":{},"body":{"classes/CreateProfissaoDto.html":{}}}],["profissoes.service",{"_index":831,"title":{},"body":{"controllers/ProfissoesController.html":{},"modules/ProfissoesModule.html":{}}}],["profissoes/profissoes.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["profissoescontroller",{"_index":811,"title":{"controllers/ProfissoesController.html":{}},"body":{"controllers/ProfissoesController.html":{},"modules/ProfissoesModule.html":{},"coverage.html":{}}}],["profissoesmodel",{"_index":854,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["profissoesmodule",{"_index":34,"title":{"modules/ProfissoesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfissoesModule.html":{},"modules.html":{},"overview.html":{}}}],["profissoesservice",{"_index":830,"title":{"injectables/ProfissoesService.html":{}},"body":{"controllers/ProfissoesController.html":{},"modules/ProfissoesModule.html":{},"injectables/ProfissoesService.html":{},"coverage.html":{},"overview.html":{}}}],["progressive",{"_index":1196,"title":{},"body":{"index.html":{}}}],["project",{"_index":1231,"title":{},"body":{"index.html":{}}}],["promise",{"_index":182,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"injectables/LocalStrategy.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":163,"title":{},"body":{"interfaces/Categoria.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"injectables/CidadesService.html":{},"interfaces/Cliente.html":{},"injectables/ClientesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"injectables/EstadosService.html":{},"interfaces/Fornecedor.html":{},"injectables/FornecedoresService.html":{},"interfaces/Origem.html":{},"injectables/OrigensService.html":{},"interfaces/Produto.html":{},"injectables/ProdutosService.html":{},"interfaces/Profissao.html":{},"injectables/ProfissoesService.html":{},"interfaces/Status.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/ClientesModule.html":{},"modules/EstadosModule.html":{},"modules/FornecedoresModule.html":{},"modules/OrigensModule.html":{},"modules/ProdutosModule.html":{},"modules/ProfissoesModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["put",{"_index":197,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/ClientesController.html":{},"controllers/EstadosController.html":{},"controllers/FornecedoresController.html":{},"controllers/OrigensController.html":{},"controllers/ProdutosController.html":{},"controllers/ProfissoesController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["put('/:_id",{"_index":180,"title":{},"body":{"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/ClientesController.html":{},"controllers/EstadosController.html":{},"controllers/FornecedoresController.html":{},"controllers/OrigensController.html":{},"controllers/ProdutosController.html":{},"controllers/ProfissoesController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["qs",{"_index":1175,"title":{},"body":{"dependencies.html":{}}}],["querystring",{"_index":1177,"title":{},"body":{"dependencies.html":{}}}],["read",{"_index":1241,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":205,"title":{},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["reflect",{"_index":1179,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":1209,"title":{},"body":{"index.html":{}}}],["req",{"_index":83,"title":{},"body":{"controllers/AuthController.html":{}}}],["request",{"_index":86,"title":{},"body":{"controllers/AuthController.html":{},"dependencies.html":{}}}],["required",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/ClientesModule.html":{},"modules/EstadosModule.html":{},"modules/FornecedoresModule.html":{},"modules/OrigensModule.html":{},"modules/ProdutosModule.html":{},"modules/ProfissoesModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"interfaces/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"interfaces/Fornecedor.html":{},"controllers/FornecedoresController.html":{},"modules/FornecedoresModule.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Origem.html":{},"controllers/OrigensController.html":{},"modules/OrigensModule.html":{},"injectables/OrigensService.html":{},"interfaces/Produto.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"interfaces/Profissao.html":{},"controllers/ProfissoesController.html":{},"modules/ProfissoesModule.html":{},"injectables/ProfissoesService.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"interfaces/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"interfaces/Fornecedor.html":{},"controllers/FornecedoresController.html":{},"modules/FornecedoresModule.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Origem.html":{},"controllers/OrigensController.html":{},"modules/OrigensModule.html":{},"injectables/OrigensService.html":{},"interfaces/Produto.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"interfaces/Profissao.html":{},"controllers/ProfissoesController.html":{},"modules/ProfissoesModule.html":{},"injectables/ProfissoesService.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":84,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["rg",{"_index":425,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["rimraf",{"_index":1183,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":1215,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":668,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"dependencies.html":{}}}],["saltorrounds",{"_index":1100,"title":{},"body":{"injectables/UsersService.html":{}}}],["saltrounds",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalable",{"_index":1201,"title":{},"body":{"index.html":{}}}],["schema",{"_index":226,"title":{},"body":{"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/ClientesModule.html":{},"modules/EstadosModule.html":{},"modules/FornecedoresModule.html":{},"modules/OrigensModule.html":{},"modules/ProdutosModule.html":{},"modules/ProfissoesModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{}}}],["secret",{"_index":117,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":662,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["security",{"_index":1166,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":1202,"title":{},"body":{"index.html":{}}}],["session",{"_index":1056,"title":{},"body":{"modules/UsersModule.html":{}}}],["sexo",{"_index":426,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["side",{"_index":1203,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":119,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"modules/CategoriasModule.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"modules/CidadesModule.html":{},"injectables/CidadesService.html":{},"interfaces/Cliente.html":{},"controllers/ClientesController.html":{},"modules/ClientesModule.html":{},"injectables/ClientesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"modules/EstadosModule.html":{},"injectables/EstadosService.html":{},"interfaces/Fornecedor.html":{},"controllers/FornecedoresController.html":{},"modules/FornecedoresModule.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/Origem.html":{},"controllers/OrigensController.html":{},"modules/OrigensModule.html":{},"injectables/OrigensService.html":{},"interfaces/Produto.html":{},"controllers/ProdutosController.html":{},"modules/ProdutosModule.html":{},"injectables/ProdutosService.html":{},"interfaces/Profissao.html":{},"controllers/ProfissoesController.html":{},"modules/ProfissoesModule.html":{},"injectables/ProfissoesService.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":1234,"title":{},"body":{"index.html":{}}}],["src/.../categorias.schema.ts",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../cidades.schema.ts",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../clientes.schema.ts",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../estados.schema.ts",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fornecedores.schema.ts",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1193,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../origens.schema.ts",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../produtos.schema.ts",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../profissoes.schema.ts",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../status.schema.ts",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tipos.schema.ts",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["src/auth/auth.controller.ts",{"_index":69,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:14",{"_index":78,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:14",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:26",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:8",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":1111,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt",{"_index":643,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":647,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":651,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":649,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local",{"_index":666,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts",{"_index":670,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:15",{"_index":674,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:7",{"_index":672,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/categorias/categorias.controller.ts",{"_index":170,"title":{},"body":{"controllers/CategoriasController.html":{},"coverage.html":{}}}],["src/categorias/categorias.controller.ts:15",{"_index":189,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["src/categorias/categorias.controller.ts:22",{"_index":183,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["src/categorias/categorias.controller.ts:27",{"_index":186,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["src/categorias/categorias.controller.ts:32",{"_index":181,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["src/categorias/categorias.controller.ts:41",{"_index":192,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["src/categorias/categorias.module.ts",{"_index":221,"title":{},"body":{"modules/CategoriasModule.html":{}}}],["src/categorias/categorias.service.ts",{"_index":227,"title":{},"body":{"injectables/CategoriasService.html":{},"coverage.html":{}}}],["src/categorias/categorias.service.ts:15",{"_index":242,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/categorias/categorias.service.ts:17",{"_index":237,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/categorias/categorias.service.ts:24",{"_index":234,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/categorias/categorias.service.ts:32",{"_index":236,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/categorias/categorias.service.ts:36",{"_index":235,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/categorias/categorias.service.ts:44",{"_index":238,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/categorias/categorias.service.ts:9",{"_index":231,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["src/categorias/dtos/create",{"_index":401,"title":{},"body":{"classes/CreateCategoriaDto.html":{},"coverage.html":{}}}],["src/categorias/dtos/update",{"_index":1000,"title":{},"body":{"classes/UpdateCategoriaDto.html":{},"coverage.html":{}}}],["src/categorias/interfaces/categorias.interface.ts",{"_index":160,"title":{},"body":{"interfaces/Categoria.html":{},"coverage.html":{}}}],["src/categorias/interfaces/categorias.schema.ts",{"_index":1117,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cidades/cidades.controller.ts",{"_index":270,"title":{},"body":{"controllers/CidadesController.html":{},"coverage.html":{}}}],["src/cidades/cidades.controller.ts:15",{"_index":285,"title":{},"body":{"controllers/CidadesController.html":{}}}],["src/cidades/cidades.controller.ts:22",{"_index":280,"title":{},"body":{"controllers/CidadesController.html":{}}}],["src/cidades/cidades.controller.ts:27",{"_index":282,"title":{},"body":{"controllers/CidadesController.html":{}}}],["src/cidades/cidades.controller.ts:32",{"_index":279,"title":{},"body":{"controllers/CidadesController.html":{}}}],["src/cidades/cidades.controller.ts:41",{"_index":287,"title":{},"body":{"controllers/CidadesController.html":{}}}],["src/cidades/cidades.module.ts",{"_index":305,"title":{},"body":{"modules/CidadesModule.html":{}}}],["src/cidades/cidades.service.ts",{"_index":309,"title":{},"body":{"injectables/CidadesService.html":{},"coverage.html":{}}}],["src/cidades/cidades.service.ts:15",{"_index":321,"title":{},"body":{"injectables/CidadesService.html":{}}}],["src/cidades/cidades.service.ts:17",{"_index":318,"title":{},"body":{"injectables/CidadesService.html":{}}}],["src/cidades/cidades.service.ts:24",{"_index":315,"title":{},"body":{"injectables/CidadesService.html":{}}}],["src/cidades/cidades.service.ts:32",{"_index":317,"title":{},"body":{"injectables/CidadesService.html":{}}}],["src/cidades/cidades.service.ts:36",{"_index":316,"title":{},"body":{"injectables/CidadesService.html":{}}}],["src/cidades/cidades.service.ts:44",{"_index":319,"title":{},"body":{"injectables/CidadesService.html":{}}}],["src/cidades/cidades.service.ts:9",{"_index":312,"title":{},"body":{"injectables/CidadesService.html":{}}}],["src/cidades/dtos/create",{"_index":409,"title":{},"body":{"classes/CreateCidadeDto.html":{},"coverage.html":{}}}],["src/cidades/dtos/update",{"_index":1001,"title":{},"body":{"classes/UpdateCidadeDto.html":{},"coverage.html":{}}}],["src/cidades/interfaces/cidades.interface.ts",{"_index":266,"title":{},"body":{"interfaces/Cidade.html":{},"coverage.html":{}}}],["src/cidades/interfaces/cidades.schema.ts",{"_index":1118,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/clientes/clientes.controller.ts",{"_index":337,"title":{},"body":{"controllers/ClientesController.html":{},"coverage.html":{}}}],["src/clientes/clientes.controller.ts:15",{"_index":352,"title":{},"body":{"controllers/ClientesController.html":{}}}],["src/clientes/clientes.controller.ts:22",{"_index":347,"title":{},"body":{"controllers/ClientesController.html":{}}}],["src/clientes/clientes.controller.ts:27",{"_index":349,"title":{},"body":{"controllers/ClientesController.html":{}}}],["src/clientes/clientes.controller.ts:32",{"_index":346,"title":{},"body":{"controllers/ClientesController.html":{}}}],["src/clientes/clientes.controller.ts:41",{"_index":354,"title":{},"body":{"controllers/ClientesController.html":{}}}],["src/clientes/clientes.module.ts",{"_index":372,"title":{},"body":{"modules/ClientesModule.html":{}}}],["src/clientes/clientes.service.ts",{"_index":376,"title":{},"body":{"injectables/ClientesService.html":{},"coverage.html":{}}}],["src/clientes/clientes.service.ts:15",{"_index":388,"title":{},"body":{"injectables/ClientesService.html":{}}}],["src/clientes/clientes.service.ts:17",{"_index":385,"title":{},"body":{"injectables/ClientesService.html":{}}}],["src/clientes/clientes.service.ts:24",{"_index":382,"title":{},"body":{"injectables/ClientesService.html":{}}}],["src/clientes/clientes.service.ts:32",{"_index":384,"title":{},"body":{"injectables/ClientesService.html":{}}}],["src/clientes/clientes.service.ts:36",{"_index":383,"title":{},"body":{"injectables/ClientesService.html":{}}}],["src/clientes/clientes.service.ts:44",{"_index":386,"title":{},"body":{"injectables/ClientesService.html":{}}}],["src/clientes/clientes.service.ts:9",{"_index":379,"title":{},"body":{"injectables/ClientesService.html":{}}}],["src/clientes/dtos/create",{"_index":417,"title":{},"body":{"classes/CreateClienteDto.html":{},"coverage.html":{}}}],["src/clientes/dtos/update",{"_index":1002,"title":{},"body":{"classes/UpdateClienteDto.html":{},"coverage.html":{}}}],["src/clientes/interfaces/clientes.interface.ts",{"_index":334,"title":{},"body":{"interfaces/Cliente.html":{},"coverage.html":{}}}],["src/clientes/interfaces/clientes.schema.ts",{"_index":1121,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/environment.ts",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/estados/dtos/create",{"_index":449,"title":{},"body":{"classes/CreateEstadoDto.html":{},"coverage.html":{}}}],["src/estados/dtos/update",{"_index":1003,"title":{},"body":{"classes/UpdateEstadoDto.html":{},"coverage.html":{}}}],["src/estados/estados.controller.ts",{"_index":516,"title":{},"body":{"controllers/EstadosController.html":{},"coverage.html":{}}}],["src/estados/estados.controller.ts:15",{"_index":530,"title":{},"body":{"controllers/EstadosController.html":{}}}],["src/estados/estados.controller.ts:22",{"_index":526,"title":{},"body":{"controllers/EstadosController.html":{}}}],["src/estados/estados.controller.ts:27",{"_index":528,"title":{},"body":{"controllers/EstadosController.html":{}}}],["src/estados/estados.controller.ts:32",{"_index":525,"title":{},"body":{"controllers/EstadosController.html":{}}}],["src/estados/estados.controller.ts:41",{"_index":532,"title":{},"body":{"controllers/EstadosController.html":{}}}],["src/estados/estados.module.ts",{"_index":550,"title":{},"body":{"modules/EstadosModule.html":{}}}],["src/estados/estados.service.ts",{"_index":554,"title":{},"body":{"injectables/EstadosService.html":{},"coverage.html":{}}}],["src/estados/estados.service.ts:15",{"_index":566,"title":{},"body":{"injectables/EstadosService.html":{}}}],["src/estados/estados.service.ts:17",{"_index":563,"title":{},"body":{"injectables/EstadosService.html":{}}}],["src/estados/estados.service.ts:24",{"_index":560,"title":{},"body":{"injectables/EstadosService.html":{}}}],["src/estados/estados.service.ts:32",{"_index":562,"title":{},"body":{"injectables/EstadosService.html":{}}}],["src/estados/estados.service.ts:36",{"_index":561,"title":{},"body":{"injectables/EstadosService.html":{}}}],["src/estados/estados.service.ts:44",{"_index":564,"title":{},"body":{"injectables/EstadosService.html":{}}}],["src/estados/estados.service.ts:9",{"_index":557,"title":{},"body":{"injectables/EstadosService.html":{}}}],["src/estados/interfaces/estados.interface.ts",{"_index":514,"title":{},"body":{"interfaces/Estado.html":{},"coverage.html":{}}}],["src/estados/interfaces/estados.schema.ts",{"_index":1123,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/fornecedores/dtos/create",{"_index":456,"title":{},"body":{"classes/CreateFornecedorDto.html":{},"coverage.html":{}}}],["src/fornecedores/dtos/update",{"_index":1004,"title":{},"body":{"classes/UpdateFornecedorDto.html":{},"coverage.html":{}}}],["src/fornecedores/fornecedores.controller.ts",{"_index":580,"title":{},"body":{"controllers/FornecedoresController.html":{},"coverage.html":{}}}],["src/fornecedores/fornecedores.controller.ts:15",{"_index":594,"title":{},"body":{"controllers/FornecedoresController.html":{}}}],["src/fornecedores/fornecedores.controller.ts:22",{"_index":590,"title":{},"body":{"controllers/FornecedoresController.html":{}}}],["src/fornecedores/fornecedores.controller.ts:27",{"_index":592,"title":{},"body":{"controllers/FornecedoresController.html":{}}}],["src/fornecedores/fornecedores.controller.ts:32",{"_index":589,"title":{},"body":{"controllers/FornecedoresController.html":{}}}],["src/fornecedores/fornecedores.controller.ts:41",{"_index":596,"title":{},"body":{"controllers/FornecedoresController.html":{}}}],["src/fornecedores/fornecedores.module.ts",{"_index":614,"title":{},"body":{"modules/FornecedoresModule.html":{}}}],["src/fornecedores/fornecedores.service.ts",{"_index":618,"title":{},"body":{"injectables/FornecedoresService.html":{},"coverage.html":{}}}],["src/fornecedores/fornecedores.service.ts:15",{"_index":630,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["src/fornecedores/fornecedores.service.ts:17",{"_index":627,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["src/fornecedores/fornecedores.service.ts:24",{"_index":624,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["src/fornecedores/fornecedores.service.ts:32",{"_index":626,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["src/fornecedores/fornecedores.service.ts:36",{"_index":625,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["src/fornecedores/fornecedores.service.ts:44",{"_index":628,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["src/fornecedores/fornecedores.service.ts:9",{"_index":621,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["src/fornecedores/interfaces/fornecedores.interface.ts",{"_index":578,"title":{},"body":{"interfaces/Fornecedor.html":{},"coverage.html":{}}}],["src/fornecedores/interfaces/fornecedores.schema.ts",{"_index":1124,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1125,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/origens/dtos/create",{"_index":463,"title":{},"body":{"classes/CreateOrigemDto.html":{},"coverage.html":{}}}],["src/origens/dtos/update",{"_index":1005,"title":{},"body":{"classes/UpdateOrigemDto.html":{},"coverage.html":{}}}],["src/origens/interfaces/origens.interface.ts",{"_index":681,"title":{},"body":{"interfaces/Origem.html":{},"coverage.html":{}}}],["src/origens/interfaces/origens.schema.ts",{"_index":1127,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/origens/origens.controller.ts",{"_index":683,"title":{},"body":{"controllers/OrigensController.html":{},"coverage.html":{}}}],["src/origens/origens.controller.ts:15",{"_index":697,"title":{},"body":{"controllers/OrigensController.html":{}}}],["src/origens/origens.controller.ts:22",{"_index":693,"title":{},"body":{"controllers/OrigensController.html":{}}}],["src/origens/origens.controller.ts:27",{"_index":695,"title":{},"body":{"controllers/OrigensController.html":{}}}],["src/origens/origens.controller.ts:32",{"_index":692,"title":{},"body":{"controllers/OrigensController.html":{}}}],["src/origens/origens.controller.ts:41",{"_index":699,"title":{},"body":{"controllers/OrigensController.html":{}}}],["src/origens/origens.module.ts",{"_index":717,"title":{},"body":{"modules/OrigensModule.html":{}}}],["src/origens/origens.service.ts",{"_index":721,"title":{},"body":{"injectables/OrigensService.html":{},"coverage.html":{}}}],["src/origens/origens.service.ts:15",{"_index":733,"title":{},"body":{"injectables/OrigensService.html":{}}}],["src/origens/origens.service.ts:17",{"_index":730,"title":{},"body":{"injectables/OrigensService.html":{}}}],["src/origens/origens.service.ts:24",{"_index":727,"title":{},"body":{"injectables/OrigensService.html":{}}}],["src/origens/origens.service.ts:32",{"_index":729,"title":{},"body":{"injectables/OrigensService.html":{}}}],["src/origens/origens.service.ts:36",{"_index":728,"title":{},"body":{"injectables/OrigensService.html":{}}}],["src/origens/origens.service.ts:44",{"_index":731,"title":{},"body":{"injectables/OrigensService.html":{}}}],["src/origens/origens.service.ts:9",{"_index":724,"title":{},"body":{"injectables/OrigensService.html":{}}}],["src/produtos/dtos/create",{"_index":470,"title":{},"body":{"classes/CreateProdutoDto.html":{},"coverage.html":{}}}],["src/produtos/dtos/update",{"_index":1006,"title":{},"body":{"classes/UpdateProdutoDto.html":{},"coverage.html":{}}}],["src/produtos/interfaces/produtos.interface.ts",{"_index":746,"title":{},"body":{"interfaces/Produto.html":{},"coverage.html":{}}}],["src/produtos/interfaces/produtos.schema.ts",{"_index":1129,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/produtos/produtos.controller.ts",{"_index":748,"title":{},"body":{"controllers/ProdutosController.html":{},"coverage.html":{}}}],["src/produtos/produtos.controller.ts:15",{"_index":762,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["src/produtos/produtos.controller.ts:22",{"_index":758,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["src/produtos/produtos.controller.ts:27",{"_index":760,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["src/produtos/produtos.controller.ts:32",{"_index":757,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["src/produtos/produtos.controller.ts:41",{"_index":764,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["src/produtos/produtos.module.ts",{"_index":782,"title":{},"body":{"modules/ProdutosModule.html":{}}}],["src/produtos/produtos.service.ts",{"_index":786,"title":{},"body":{"injectables/ProdutosService.html":{},"coverage.html":{}}}],["src/produtos/produtos.service.ts:15",{"_index":798,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["src/produtos/produtos.service.ts:17",{"_index":795,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["src/produtos/produtos.service.ts:24",{"_index":792,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["src/produtos/produtos.service.ts:32",{"_index":794,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["src/produtos/produtos.service.ts:36",{"_index":793,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["src/produtos/produtos.service.ts:44",{"_index":796,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["src/produtos/produtos.service.ts:9",{"_index":789,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["src/profissoes/dtos/create",{"_index":483,"title":{},"body":{"classes/CreateProfissaoDto.html":{},"coverage.html":{}}}],["src/profissoes/dtos/update",{"_index":1007,"title":{},"body":{"classes/UpdateProfissaoDto.html":{},"coverage.html":{}}}],["src/profissoes/interfaces/profissoes.interface.ts",{"_index":810,"title":{},"body":{"interfaces/Profissao.html":{},"coverage.html":{}}}],["src/profissoes/interfaces/profissoes.schema.ts",{"_index":1130,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/profissoes/profissoes.controller.ts",{"_index":812,"title":{},"body":{"controllers/ProfissoesController.html":{},"coverage.html":{}}}],["src/profissoes/profissoes.controller.ts:15",{"_index":826,"title":{},"body":{"controllers/ProfissoesController.html":{}}}],["src/profissoes/profissoes.controller.ts:22",{"_index":822,"title":{},"body":{"controllers/ProfissoesController.html":{}}}],["src/profissoes/profissoes.controller.ts:27",{"_index":824,"title":{},"body":{"controllers/ProfissoesController.html":{}}}],["src/profissoes/profissoes.controller.ts:32",{"_index":821,"title":{},"body":{"controllers/ProfissoesController.html":{}}}],["src/profissoes/profissoes.controller.ts:41",{"_index":828,"title":{},"body":{"controllers/ProfissoesController.html":{}}}],["src/profissoes/profissoes.module.ts",{"_index":846,"title":{},"body":{"modules/ProfissoesModule.html":{}}}],["src/profissoes/profissoes.service.ts",{"_index":850,"title":{},"body":{"injectables/ProfissoesService.html":{},"coverage.html":{}}}],["src/profissoes/profissoes.service.ts:15",{"_index":862,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["src/profissoes/profissoes.service.ts:17",{"_index":859,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["src/profissoes/profissoes.service.ts:24",{"_index":856,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["src/profissoes/profissoes.service.ts:32",{"_index":858,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["src/profissoes/profissoes.service.ts:36",{"_index":857,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["src/profissoes/profissoes.service.ts:44",{"_index":860,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["src/profissoes/profissoes.service.ts:9",{"_index":853,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["src/status/dtos/create",{"_index":490,"title":{},"body":{"classes/CreateStatusDto.html":{},"coverage.html":{}}}],["src/status/dtos/update",{"_index":1008,"title":{},"body":{"classes/UpdateStatusDto.html":{},"coverage.html":{}}}],["src/status/interfaces/status.interface.ts",{"_index":871,"title":{},"body":{"interfaces/Status.html":{},"coverage.html":{}}}],["src/status/interfaces/status.schema.ts",{"_index":1131,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/status/status.controller.ts",{"_index":873,"title":{},"body":{"controllers/StatusController.html":{},"coverage.html":{}}}],["src/status/status.controller.ts:15",{"_index":887,"title":{},"body":{"controllers/StatusController.html":{}}}],["src/status/status.controller.ts:22",{"_index":883,"title":{},"body":{"controllers/StatusController.html":{}}}],["src/status/status.controller.ts:27",{"_index":885,"title":{},"body":{"controllers/StatusController.html":{}}}],["src/status/status.controller.ts:32",{"_index":882,"title":{},"body":{"controllers/StatusController.html":{}}}],["src/status/status.controller.ts:41",{"_index":889,"title":{},"body":{"controllers/StatusController.html":{}}}],["src/status/status.module.ts",{"_index":907,"title":{},"body":{"modules/StatusModule.html":{}}}],["src/status/status.service.ts",{"_index":911,"title":{},"body":{"injectables/StatusService.html":{},"coverage.html":{}}}],["src/status/status.service.ts:15",{"_index":923,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/status/status.service.ts:17",{"_index":920,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/status/status.service.ts:24",{"_index":917,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/status/status.service.ts:32",{"_index":919,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/status/status.service.ts:36",{"_index":918,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/status/status.service.ts:44",{"_index":921,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/status/status.service.ts:9",{"_index":914,"title":{},"body":{"injectables/StatusService.html":{}}}],["src/tipos/dtos/create",{"_index":497,"title":{},"body":{"classes/CreateTipoDto.html":{},"coverage.html":{}}}],["src/tipos/dtos/update",{"_index":1009,"title":{},"body":{"classes/UpdateTipoDto.html":{},"coverage.html":{}}}],["src/tipos/interfaces/tipos.interface.ts",{"_index":936,"title":{},"body":{"interfaces/Tipo.html":{},"coverage.html":{}}}],["src/tipos/interfaces/tipos.schema.ts",{"_index":1132,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/tipos/tipos.controller.ts",{"_index":938,"title":{},"body":{"controllers/TiposController.html":{},"coverage.html":{}}}],["src/tipos/tipos.controller.ts:15",{"_index":952,"title":{},"body":{"controllers/TiposController.html":{}}}],["src/tipos/tipos.controller.ts:22",{"_index":948,"title":{},"body":{"controllers/TiposController.html":{}}}],["src/tipos/tipos.controller.ts:27",{"_index":950,"title":{},"body":{"controllers/TiposController.html":{}}}],["src/tipos/tipos.controller.ts:32",{"_index":947,"title":{},"body":{"controllers/TiposController.html":{}}}],["src/tipos/tipos.controller.ts:41",{"_index":954,"title":{},"body":{"controllers/TiposController.html":{}}}],["src/tipos/tipos.module.ts",{"_index":972,"title":{},"body":{"modules/TiposModule.html":{}}}],["src/tipos/tipos.service.ts",{"_index":976,"title":{},"body":{"injectables/TiposService.html":{},"coverage.html":{}}}],["src/tipos/tipos.service.ts:15",{"_index":988,"title":{},"body":{"injectables/TiposService.html":{}}}],["src/tipos/tipos.service.ts:17",{"_index":985,"title":{},"body":{"injectables/TiposService.html":{}}}],["src/tipos/tipos.service.ts:24",{"_index":982,"title":{},"body":{"injectables/TiposService.html":{}}}],["src/tipos/tipos.service.ts:32",{"_index":984,"title":{},"body":{"injectables/TiposService.html":{}}}],["src/tipos/tipos.service.ts:36",{"_index":983,"title":{},"body":{"injectables/TiposService.html":{}}}],["src/tipos/tipos.service.ts:44",{"_index":986,"title":{},"body":{"injectables/TiposService.html":{}}}],["src/tipos/tipos.service.ts:9",{"_index":979,"title":{},"body":{"injectables/TiposService.html":{}}}],["src/users/dtos/create",{"_index":504,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/update",{"_index":1011,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/interfaces/user.interface.ts",{"_index":1013,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/users/interfaces/user.schema.ts",{"_index":1134,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/users.controller.ts",{"_index":1015,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:17",{"_index":1029,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:25",{"_index":1025,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:30",{"_index":1027,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:35",{"_index":1023,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:44",{"_index":1031,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":1050,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":1057,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:11",{"_index":1061,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":1074,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:19",{"_index":1071,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:28",{"_index":1064,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:44",{"_index":1067,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:48",{"_index":1068,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:56",{"_index":1070,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:60",{"_index":1072,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:68",{"_index":1066,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":1216,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1219,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1221,"title":{},"body":{"index.html":{}}}],["started",{"_index":1195,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1208,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1106,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":165,"title":{"interfaces/Status.html":{}},"body":{"interfaces/Categoria.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Fornecedor.html":{},"interfaces/Origem.html":{},"interfaces/Produto.html":{},"interfaces/Profissao.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["status.controller",{"_index":908,"title":{},"body":{"modules/StatusModule.html":{}}}],["status.dto",{"_index":890,"title":{},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{}}}],["status.dto.ts",{"_index":491,"title":{},"body":{"classes/CreateStatusDto.html":{},"classes/UpdateStatusDto.html":{},"coverage.html":{}}}],["status.dto.ts:5",{"_index":493,"title":{},"body":{"classes/CreateStatusDto.html":{},"classes/UpdateStatusDto.html":{}}}],["status.dto.ts:7",{"_index":494,"title":{},"body":{"classes/CreateStatusDto.html":{},"classes/UpdateStatusDto.html":{}}}],["status.dto.ts:8",{"_index":492,"title":{},"body":{"classes/CreateStatusDto.html":{},"classes/UpdateStatusDto.html":{}}}],["status.dto.ts:9",{"_index":495,"title":{},"body":{"classes/CreateStatusDto.html":{}}}],["status.service",{"_index":892,"title":{},"body":{"controllers/StatusController.html":{},"modules/StatusModule.html":{}}}],["status/status.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["statuscontroller",{"_index":872,"title":{"controllers/StatusController.html":{}},"body":{"controllers/StatusController.html":{},"modules/StatusModule.html":{},"coverage.html":{}}}],["statusencontrado",{"_index":928,"title":{},"body":{"injectables/StatusService.html":{}}}],["statusmodel",{"_index":915,"title":{},"body":{"injectables/StatusService.html":{}}}],["statusmodule",{"_index":35,"title":{"modules/StatusModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StatusModule.html":{},"modules.html":{},"overview.html":{}}}],["statusschema",{"_index":909,"title":{},"body":{"modules/StatusModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["statusservice",{"_index":891,"title":{"injectables/StatusService.html":{}},"body":{"controllers/StatusController.html":{},"modules/StatusModule.html":{},"injectables/StatusService.html":{},"coverage.html":{},"overview.html":{}}}],["stay",{"_index":1244,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":653,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"interfaces/Cliente.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"interfaces/Fornecedor.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"injectables/LocalStrategy.html":{},"interfaces/Origem.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"interfaces/Produto.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"interfaces/Profissao.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["sub",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":658,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["support",{"_index":1235,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":1255,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1186,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":1137,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1136,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":1224,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1227,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1226,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1223,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":1233,"title":{},"body":{"index.html":{}}}],["this.authservice.login(req.user",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validadeuser(email",{"_index":678,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.categoriasmodel(createcategoriadto",{"_index":247,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["this.categoriasmodel.deleteone({_id}).exec",{"_index":264,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["this.categoriasmodel.find().exec",{"_index":263,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["this.categoriasmodel.findone({_id}).exec",{"_index":252,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["this.categoriasmodel.findoneandupdate({_id",{"_index":260,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["this.categoriasservice.atualizarcategoria(_id,updatecategoriadto",{"_index":216,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["this.categoriasservice.consultarcategoriakey(_id",{"_index":212,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["this.categoriasservice.consultartodoscategoria",{"_index":210,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["this.categoriasservice.criarcategoria(createcategoriadto",{"_index":209,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["this.categoriasservice.deletarcategoria(_id",{"_index":217,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["this.cidadesmodel(createcidadedto",{"_index":324,"title":{},"body":{"injectables/CidadesService.html":{}}}],["this.cidadesmodel.deleteone({_id}).exec",{"_index":332,"title":{},"body":{"injectables/CidadesService.html":{}}}],["this.cidadesmodel.find().exec",{"_index":331,"title":{},"body":{"injectables/CidadesService.html":{}}}],["this.cidadesmodel.findone({_id}).exec",{"_index":326,"title":{},"body":{"injectables/CidadesService.html":{}}}],["this.cidadesmodel.findoneandupdate({_id",{"_index":329,"title":{},"body":{"injectables/CidadesService.html":{}}}],["this.cidadesservice.atualizarcidade(_id,updatecidadedto",{"_index":300,"title":{},"body":{"controllers/CidadesController.html":{}}}],["this.cidadesservice.consultarcidadekey(_id",{"_index":297,"title":{},"body":{"controllers/CidadesController.html":{}}}],["this.cidadesservice.consultartodoscidade",{"_index":295,"title":{},"body":{"controllers/CidadesController.html":{}}}],["this.cidadesservice.criarcidade(createcidadedto",{"_index":294,"title":{},"body":{"controllers/CidadesController.html":{}}}],["this.cidadesservice.deletarcidade(_id",{"_index":301,"title":{},"body":{"controllers/CidadesController.html":{}}}],["this.clientesmodel(createclientedto",{"_index":391,"title":{},"body":{"injectables/ClientesService.html":{}}}],["this.clientesmodel.deleteone({_id}).exec",{"_index":399,"title":{},"body":{"injectables/ClientesService.html":{}}}],["this.clientesmodel.find().exec",{"_index":398,"title":{},"body":{"injectables/ClientesService.html":{}}}],["this.clientesmodel.findone({_id}).exec",{"_index":393,"title":{},"body":{"injectables/ClientesService.html":{}}}],["this.clientesmodel.findoneandupdate({_id",{"_index":396,"title":{},"body":{"injectables/ClientesService.html":{}}}],["this.clientesservice.atualizarcliente(_id,updateclientedto",{"_index":367,"title":{},"body":{"controllers/ClientesController.html":{}}}],["this.clientesservice.consultarclientekey(_id",{"_index":364,"title":{},"body":{"controllers/ClientesController.html":{}}}],["this.clientesservice.consultartodoscliente",{"_index":362,"title":{},"body":{"controllers/ClientesController.html":{}}}],["this.clientesservice.criarcliente(createclientedto",{"_index":361,"title":{},"body":{"controllers/ClientesController.html":{}}}],["this.clientesservice.deletarcliente(_id",{"_index":368,"title":{},"body":{"controllers/ClientesController.html":{}}}],["this.estadosmodel(createestadodto",{"_index":569,"title":{},"body":{"injectables/EstadosService.html":{}}}],["this.estadosmodel.deleteone({_id}).exec",{"_index":577,"title":{},"body":{"injectables/EstadosService.html":{}}}],["this.estadosmodel.find().exec",{"_index":576,"title":{},"body":{"injectables/EstadosService.html":{}}}],["this.estadosmodel.findone({_id}).exec",{"_index":571,"title":{},"body":{"injectables/EstadosService.html":{}}}],["this.estadosmodel.findoneandupdate({_id",{"_index":574,"title":{},"body":{"injectables/EstadosService.html":{}}}],["this.estadosservice.atualizarestado(_id,updateestadodto",{"_index":545,"title":{},"body":{"controllers/EstadosController.html":{}}}],["this.estadosservice.consultarestadokey(_id",{"_index":542,"title":{},"body":{"controllers/EstadosController.html":{}}}],["this.estadosservice.consultartodosestado",{"_index":540,"title":{},"body":{"controllers/EstadosController.html":{}}}],["this.estadosservice.criarestado(createestadodto",{"_index":539,"title":{},"body":{"controllers/EstadosController.html":{}}}],["this.estadosservice.deletarestado(_id",{"_index":546,"title":{},"body":{"controllers/EstadosController.html":{}}}],["this.fornecedoresmodel(createfornecedordto",{"_index":633,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["this.fornecedoresmodel.deleteone({_id}).exec",{"_index":641,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["this.fornecedoresmodel.find().exec",{"_index":640,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["this.fornecedoresmodel.findone({_id}).exec",{"_index":635,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["this.fornecedoresmodel.findoneandupdate({_id",{"_index":638,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["this.fornecedoresservice.atualizarfornecedor(_id,updatefornecedordto",{"_index":609,"title":{},"body":{"controllers/FornecedoresController.html":{}}}],["this.fornecedoresservice.consultarfornecedorkey(_id",{"_index":606,"title":{},"body":{"controllers/FornecedoresController.html":{}}}],["this.fornecedoresservice.consultartodosfornecedor",{"_index":604,"title":{},"body":{"controllers/FornecedoresController.html":{}}}],["this.fornecedoresservice.criarfornecedor(createfornecedordto",{"_index":603,"title":{},"body":{"controllers/FornecedoresController.html":{}}}],["this.fornecedoresservice.deletarfornecedor(_id",{"_index":610,"title":{},"body":{"controllers/FornecedoresController.html":{}}}],["this.jwtservice.sign(payload",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.log(`updatecategoriadto",{"_index":214,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["this.logger.log(`updatecidadedto",{"_index":298,"title":{},"body":{"controllers/CidadesController.html":{}}}],["this.logger.log(`updateclientedto",{"_index":365,"title":{},"body":{"controllers/ClientesController.html":{}}}],["this.logger.log(`updateestadodto",{"_index":543,"title":{},"body":{"controllers/EstadosController.html":{}}}],["this.logger.log(`updatefornecedordto",{"_index":607,"title":{},"body":{"controllers/FornecedoresController.html":{}}}],["this.logger.log(`updateorigemdto",{"_index":710,"title":{},"body":{"controllers/OrigensController.html":{}}}],["this.logger.log(`updateprodutodto",{"_index":775,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["this.logger.log(`updateprofissaodto",{"_index":839,"title":{},"body":{"controllers/ProfissoesController.html":{}}}],["this.logger.log(`updatestatusdto",{"_index":900,"title":{},"body":{"controllers/StatusController.html":{}}}],["this.logger.log(`updatetipodto",{"_index":965,"title":{},"body":{"controllers/TiposController.html":{}}}],["this.logger.log(`updateuserdto",{"_index":1043,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.origensmodel(createorigemdto",{"_index":736,"title":{},"body":{"injectables/OrigensService.html":{}}}],["this.origensmodel.deleteone({_id}).exec",{"_index":744,"title":{},"body":{"injectables/OrigensService.html":{}}}],["this.origensmodel.find().exec",{"_index":743,"title":{},"body":{"injectables/OrigensService.html":{}}}],["this.origensmodel.findone({_id}).exec",{"_index":738,"title":{},"body":{"injectables/OrigensService.html":{}}}],["this.origensmodel.findoneandupdate({_id",{"_index":741,"title":{},"body":{"injectables/OrigensService.html":{}}}],["this.origensservice.atualizarorigem(_id,updateorigemdto",{"_index":712,"title":{},"body":{"controllers/OrigensController.html":{}}}],["this.origensservice.consultarorigemkey(_id",{"_index":709,"title":{},"body":{"controllers/OrigensController.html":{}}}],["this.origensservice.consultartodosorigem",{"_index":707,"title":{},"body":{"controllers/OrigensController.html":{}}}],["this.origensservice.criarorigem(createorigemdto",{"_index":706,"title":{},"body":{"controllers/OrigensController.html":{}}}],["this.origensservice.deletarorigem(_id",{"_index":713,"title":{},"body":{"controllers/OrigensController.html":{}}}],["this.produtosmodel(createprodutodto",{"_index":801,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["this.produtosmodel.deleteone({_id}).exec",{"_index":809,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["this.produtosmodel.find().exec",{"_index":808,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["this.produtosmodel.findone({_id}).exec",{"_index":803,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["this.produtosmodel.findoneandupdate({_id",{"_index":806,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["this.produtosservice.atualizarproduto(_id,updateprodutodto",{"_index":777,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["this.produtosservice.consultarprodutokey(_id",{"_index":774,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["this.produtosservice.consultartodosproduto",{"_index":772,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["this.produtosservice.criarproduto(createprodutodto",{"_index":771,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["this.produtosservice.deletarproduto(_id",{"_index":778,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["this.profissoesmodel(createprofissaodto",{"_index":864,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["this.profissoesmodel.deleteone({_id}).exec",{"_index":870,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["this.profissoesmodel.find().exec",{"_index":869,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["this.profissoesmodel.findone({_id}).exec",{"_index":865,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["this.profissoesmodel.findoneandupdate({_id",{"_index":867,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["this.profissoesservice.atualizarprofissao(_id,updateprofissaodto",{"_index":841,"title":{},"body":{"controllers/ProfissoesController.html":{}}}],["this.profissoesservice.consultarprofissaokey(_id",{"_index":838,"title":{},"body":{"controllers/ProfissoesController.html":{}}}],["this.profissoesservice.consultartodosprofissao",{"_index":836,"title":{},"body":{"controllers/ProfissoesController.html":{}}}],["this.profissoesservice.criarprofissao(createprofissaodto",{"_index":835,"title":{},"body":{"controllers/ProfissoesController.html":{}}}],["this.profissoesservice.deletarprofissao(_id",{"_index":842,"title":{},"body":{"controllers/ProfissoesController.html":{}}}],["this.statusmodel(createstatusdto",{"_index":926,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.statusmodel.deleteone({_id}).exec",{"_index":935,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.statusmodel.find().exec",{"_index":934,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.statusmodel.findone({_id}).exec",{"_index":929,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.statusmodel.findoneandupdate({_id",{"_index":932,"title":{},"body":{"injectables/StatusService.html":{}}}],["this.statusservice.atualizarstatus(_id,updatestatusdto",{"_index":902,"title":{},"body":{"controllers/StatusController.html":{}}}],["this.statusservice.consultarstatuskey(_id",{"_index":899,"title":{},"body":{"controllers/StatusController.html":{}}}],["this.statusservice.consultartodosstatus",{"_index":897,"title":{},"body":{"controllers/StatusController.html":{}}}],["this.statusservice.criarstatus(createstatusdto",{"_index":896,"title":{},"body":{"controllers/StatusController.html":{}}}],["this.statusservice.deletarstatus(_id",{"_index":903,"title":{},"body":{"controllers/StatusController.html":{}}}],["this.tiposmodel(createtipodto",{"_index":991,"title":{},"body":{"injectables/TiposService.html":{}}}],["this.tiposmodel.deleteone({_id}).exec",{"_index":999,"title":{},"body":{"injectables/TiposService.html":{}}}],["this.tiposmodel.find().exec",{"_index":998,"title":{},"body":{"injectables/TiposService.html":{}}}],["this.tiposmodel.findone({_id}).exec",{"_index":993,"title":{},"body":{"injectables/TiposService.html":{}}}],["this.tiposmodel.findoneandupdate({_id",{"_index":996,"title":{},"body":{"injectables/TiposService.html":{}}}],["this.tiposservice.atualizartipo(_id,updatetipodto",{"_index":967,"title":{},"body":{"controllers/TiposController.html":{}}}],["this.tiposservice.consultartipokey(_id",{"_index":964,"title":{},"body":{"controllers/TiposController.html":{}}}],["this.tiposservice.consultartodostipo",{"_index":962,"title":{},"body":{"controllers/TiposController.html":{}}}],["this.tiposservice.criartipo(createtipodto",{"_index":961,"title":{},"body":{"controllers/TiposController.html":{}}}],["this.tiposservice.deletartipo(_id",{"_index":968,"title":{},"body":{"controllers/TiposController.html":{}}}],["this.usermodel(createuserdto",{"_index":1081,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.deleteone({_id}).exec",{"_index":1099,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find().exec",{"_index":1094,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":1097,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone({_id}).exec",{"_index":1084,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findoneandupdate({_id",{"_index":1092,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.consutaruseremail(useremail",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usuariosservice.atualizaruser(_id,updateuserdto",{"_index":1045,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usuariosservice.consultartodosusers",{"_index":1040,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usuariosservice.consultaruserskey(_id",{"_index":1042,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usuariosservice.criaruser(createuserdto",{"_index":1039,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usuariosservice.deletaruser(_id",{"_index":1046,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":254,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/LocalStrategy.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{}}}],["timestamps",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tipo",{"_index":335,"title":{"interfaces/Tipo.html":{}},"body":{"interfaces/Cliente.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Produto.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tipo_cliente",{"_index":427,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["tipo_pessoa",{"_index":428,"title":{},"body":{"classes/CreateClienteDto.html":{},"classes/UpdateClienteDto.html":{}}}],["tipocriado",{"_index":990,"title":{},"body":{"injectables/TiposService.html":{}}}],["tipocriado.save",{"_index":992,"title":{},"body":{"injectables/TiposService.html":{}}}],["tipos",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tipos.controller",{"_index":973,"title":{},"body":{"modules/TiposModule.html":{}}}],["tipos.dto",{"_index":955,"title":{},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{}}}],["tipos.dto.ts",{"_index":498,"title":{},"body":{"classes/CreateTipoDto.html":{},"classes/UpdateTipoDto.html":{},"coverage.html":{}}}],["tipos.dto.ts:5",{"_index":500,"title":{},"body":{"classes/CreateTipoDto.html":{},"classes/UpdateTipoDto.html":{}}}],["tipos.dto.ts:7",{"_index":501,"title":{},"body":{"classes/CreateTipoDto.html":{},"classes/UpdateTipoDto.html":{}}}],["tipos.dto.ts:8",{"_index":499,"title":{},"body":{"classes/CreateTipoDto.html":{},"classes/UpdateTipoDto.html":{}}}],["tipos.dto.ts:9",{"_index":502,"title":{},"body":{"classes/CreateTipoDto.html":{}}}],["tipos.service",{"_index":957,"title":{},"body":{"controllers/TiposController.html":{},"modules/TiposModule.html":{}}}],["tipos/tipos.module",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["tiposchema",{"_index":974,"title":{},"body":{"modules/TiposModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tiposcontroller",{"_index":937,"title":{"controllers/TiposController.html":{}},"body":{"controllers/TiposController.html":{},"modules/TiposModule.html":{},"coverage.html":{}}}],["tiposmodel",{"_index":980,"title":{},"body":{"injectables/TiposService.html":{}}}],["tiposmodule",{"_index":36,"title":{"modules/TiposModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TiposModule.html":{},"modules.html":{},"overview.html":{}}}],["tiposservice",{"_index":956,"title":{"injectables/TiposService.html":{}},"body":{"controllers/TiposController.html":{},"modules/TiposModule.html":{},"injectables/TiposService.html":{},"coverage.html":{},"overview.html":{}}}],["touch",{"_index":1245,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":1158,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":1251,"title":{},"body":{"index.html":{}}}],["type",{"_index":81,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Categoria.html":{},"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"interfaces/Cidade.html":{},"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"interfaces/Cliente.html":{},"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"interfaces/Fornecedor.html":{},"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/Origem.html":{},"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"interfaces/Produto.html":{},"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"interfaces/Profissao.html":{},"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"interfaces/Status.html":{},"controllers/StatusController.html":{},"injectables/StatusService.html":{},"interfaces/Tipo.html":{},"controllers/TiposController.html":{},"injectables/TiposService.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/bcrypt",{"_index":1147,"title":{},"body":{"dependencies.html":{}}}],["types/cookiejar",{"_index":1149,"title":{},"body":{"dependencies.html":{}}}],["types/mongoose",{"_index":1151,"title":{},"body":{"dependencies.html":{}}}],["types/uuid",{"_index":1153,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1207,"title":{},"body":{"index.html":{}}}],["uf",{"_index":268,"title":{},"body":{"interfaces/Cidade.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateEstadoDto.html":{},"interfaces/Estado.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateEstadoDto.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":1187,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":675,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unique",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":1222,"title":{},"body":{"index.html":{}}}],["updatecategoriadto",{"_index":179,"title":{"classes/UpdateCategoriaDto.html":{}},"body":{"controllers/CategoriasController.html":{},"injectables/CategoriasService.html":{},"classes/UpdateCategoriaDto.html":{},"coverage.html":{}}}],["updatecategoriadto}).exec",{"_index":262,"title":{},"body":{"injectables/CategoriasService.html":{}}}],["updatecidadedto",{"_index":278,"title":{"classes/UpdateCidadeDto.html":{}},"body":{"controllers/CidadesController.html":{},"injectables/CidadesService.html":{},"classes/UpdateCidadeDto.html":{},"coverage.html":{}}}],["updatecidadedto}).exec",{"_index":330,"title":{},"body":{"injectables/CidadesService.html":{}}}],["updateclientedto",{"_index":345,"title":{"classes/UpdateClienteDto.html":{}},"body":{"controllers/ClientesController.html":{},"injectables/ClientesService.html":{},"classes/UpdateClienteDto.html":{},"coverage.html":{}}}],["updateclientedto}).exec",{"_index":397,"title":{},"body":{"injectables/ClientesService.html":{}}}],["updatedat",{"_index":166,"title":{},"body":{"interfaces/Categoria.html":{},"interfaces/Cidade.html":{},"interfaces/Cliente.html":{},"classes/CreateCategoriaDto.html":{},"classes/CreateCidadeDto.html":{},"classes/CreateClienteDto.html":{},"classes/CreateEstadoDto.html":{},"classes/CreateFornecedorDto.html":{},"classes/CreateOrigemDto.html":{},"classes/CreateProdutoDto.html":{},"classes/CreateProfissaoDto.html":{},"classes/CreateStatusDto.html":{},"classes/CreateTipoDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Estado.html":{},"interfaces/Fornecedor.html":{},"interfaces/Origem.html":{},"interfaces/Produto.html":{},"interfaces/Profissao.html":{},"interfaces/Status.html":{},"interfaces/Tipo.html":{},"classes/UpdateCategoriaDto.html":{},"classes/UpdateCidadeDto.html":{},"classes/UpdateClienteDto.html":{},"classes/UpdateEstadoDto.html":{},"classes/UpdateFornecedorDto.html":{},"classes/UpdateOrigemDto.html":{},"classes/UpdateProdutoDto.html":{},"classes/UpdateProfissaoDto.html":{},"classes/UpdateStatusDto.html":{},"classes/UpdateTipoDto.html":{},"classes/UpdateUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["updateestadodto",{"_index":524,"title":{"classes/UpdateEstadoDto.html":{}},"body":{"controllers/EstadosController.html":{},"injectables/EstadosService.html":{},"classes/UpdateEstadoDto.html":{},"coverage.html":{}}}],["updateestadodto}).exec",{"_index":575,"title":{},"body":{"injectables/EstadosService.html":{}}}],["updatefornecedordto",{"_index":588,"title":{"classes/UpdateFornecedorDto.html":{}},"body":{"controllers/FornecedoresController.html":{},"injectables/FornecedoresService.html":{},"classes/UpdateFornecedorDto.html":{},"coverage.html":{}}}],["updatefornecedordto}).exec",{"_index":639,"title":{},"body":{"injectables/FornecedoresService.html":{}}}],["updateorigemdto",{"_index":691,"title":{"classes/UpdateOrigemDto.html":{}},"body":{"controllers/OrigensController.html":{},"injectables/OrigensService.html":{},"classes/UpdateOrigemDto.html":{},"coverage.html":{}}}],["updateorigemdto}).exec",{"_index":742,"title":{},"body":{"injectables/OrigensService.html":{}}}],["updateprodutodto",{"_index":756,"title":{"classes/UpdateProdutoDto.html":{}},"body":{"controllers/ProdutosController.html":{},"injectables/ProdutosService.html":{},"classes/UpdateProdutoDto.html":{},"coverage.html":{}}}],["updateprodutodto}).exec",{"_index":807,"title":{},"body":{"injectables/ProdutosService.html":{}}}],["updateprofissaodto",{"_index":820,"title":{"classes/UpdateProfissaoDto.html":{}},"body":{"controllers/ProfissoesController.html":{},"injectables/ProfissoesService.html":{},"classes/UpdateProfissaoDto.html":{},"coverage.html":{}}}],["updateprofissaodto}).exec",{"_index":868,"title":{},"body":{"injectables/ProfissoesService.html":{}}}],["updatestatusdto",{"_index":881,"title":{"classes/UpdateStatusDto.html":{}},"body":{"controllers/StatusController.html":{},"injectables/StatusService.html":{},"classes/UpdateStatusDto.html":{},"coverage.html":{}}}],["updatestatusdto}).exec",{"_index":933,"title":{},"body":{"injectables/StatusService.html":{}}}],["updatetipodto",{"_index":946,"title":{"classes/UpdateTipoDto.html":{}},"body":{"controllers/TiposController.html":{},"injectables/TiposService.html":{},"classes/UpdateTipoDto.html":{},"coverage.html":{}}}],["updatetipodto}).exec",{"_index":997,"title":{},"body":{"injectables/TiposService.html":{}}}],["updateuserdto",{"_index":1010,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto.password",{"_index":1091,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto}).exec",{"_index":1093,"title":{},"body":{"injectables/UsersService.html":{}}}],["url",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usecreateindex",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["usefindandmodify",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["useguards",{"_index":85,"title":{},"body":{"controllers/AuthController.html":{},"controllers/CategoriasController.html":{},"controllers/CidadesController.html":{},"controllers/ClientesController.html":{},"controllers/EstadosController.html":{},"controllers/FornecedoresController.html":{},"controllers/OrigensController.html":{},"controllers/ProdutosController.html":{},"controllers/ProfissoesController.html":{},"controllers/StatusController.html":{},"controllers/TiposController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":1038,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get",{"_index":1024,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(localauthguard",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard)@post('v1/auth/login",{"_index":76,"title":{},"body":{"controllers/AuthController.html":{}}}],["usenewurlparser",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":132,"title":{"interfaces/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"interfaces/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.dto",{"_index":1032,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":505,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":512,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:13",{"_index":511,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:14",{"_index":1012,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:15",{"_index":507,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:17",{"_index":513,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":509,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:7",{"_index":508,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.dto.ts:9",{"_index":510,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["user.email",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.password",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.sub",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["usercriado",{"_index":1080,"title":{},"body":{"injectables/UsersService.html":{}}}],["usercriado.save",{"_index":1082,"title":{},"body":{"injectables/UsersService.html":{}}}],["useremail",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{}}}],["userencontrado",{"_index":1083,"title":{},"body":{"injectables/UsersService.html":{}}}],["userencontrado.password",{"_index":1088,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodel",{"_index":1062,"title":{},"body":{"injectables/UsersService.html":{}}}],["usernamefield",{"_index":676,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userpassword",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["users",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["users.controller",{"_index":1051,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":1033,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.service",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["userschema",{"_index":1052,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":1014,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":37,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":127,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["useunifiedtopology",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["usuariosservice",{"_index":1037,"title":{},"body":{"controllers/UsersController.html":{}}}],["uuid",{"_index":1189,"title":{},"body":{"dependencies.html":{}}}],["v1/categorias",{"_index":172,"title":{},"body":{"controllers/CategoriasController.html":{}}}],["v1/cidades",{"_index":271,"title":{},"body":{"controllers/CidadesController.html":{}}}],["v1/clientes",{"_index":338,"title":{},"body":{"controllers/ClientesController.html":{}}}],["v1/estados",{"_index":517,"title":{},"body":{"controllers/EstadosController.html":{}}}],["v1/fornecedores",{"_index":581,"title":{},"body":{"controllers/FornecedoresController.html":{}}}],["v1/origens",{"_index":684,"title":{},"body":{"controllers/OrigensController.html":{}}}],["v1/produtos",{"_index":749,"title":{},"body":{"controllers/ProdutosController.html":{}}}],["v1/profissoes",{"_index":813,"title":{},"body":{"controllers/ProfissoesController.html":{}}}],["v1/status",{"_index":874,"title":{},"body":{"controllers/StatusController.html":{}}}],["v1/tipos",{"_index":939,"title":{},"body":{"controllers/TiposController.html":{}}}],["v1/users",{"_index":1016,"title":{},"body":{"controllers/UsersController.html":{}}}],["validadeuser",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{}}}],["validadeuser(useremail",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["validate",{"_index":648,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":673,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":650,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":1160,"title":{},"body":{"dependencies.html":{}}}],["valor",{"_index":473,"title":{},"body":{"classes/CreateProdutoDto.html":{},"interfaces/Produto.html":{},"classes/UpdateProdutoDto.html":{},"miscellaneous/variables.html":{}}}],["value",{"_index":240,"title":{},"body":{"injectables/CategoriasService.html":{},"injectables/CidadesService.html":{},"injectables/ClientesService.html":{},"injectables/EstadosService.html":{},"injectables/FornecedoresService.html":{},"injectables/OrigensService.html":{},"injectables/ProdutosService.html":{},"injectables/ProfissoesService.html":{},"injectables/StatusService.html":{},"injectables/TiposService.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1262,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vinculocriado",{"_index":925,"title":{},"body":{"injectables/StatusService.html":{}}}],["vinculocriado.save",{"_index":927,"title":{},"body":{"injectables/StatusService.html":{}}}],["vinculoencontrado",{"_index":1095,"title":{},"body":{"injectables/UsersService.html":{}}}],["watch",{"_index":1217,"title":{},"body":{"index.html":{}}}],["website",{"_index":1249,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":1238,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriasModule.html":{},"modules/CidadesModule.html":{},"modules/ClientesModule.html":{},"modules/EstadosModule.html":{},"modules/FornecedoresModule.html":{},"modules/OrigensModule.html":{},"modules/ProdutosModule.html":{},"modules/ProfissoesModule.html":{},"modules/StatusModule.html":{},"modules/TiposModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\n\n@Controller()\nexport class AppController {}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriasModule\n\nCategoriasModule\n\nAppModule -->\n\nCategoriasModule->AppModule\n\n\n\n\n\nCidadesModule\n\nCidadesModule\n\nAppModule -->\n\nCidadesModule->AppModule\n\n\n\n\n\nClientesModule\n\nClientesModule\n\nAppModule -->\n\nClientesModule->AppModule\n\n\n\n\n\nEstadosModule\n\nEstadosModule\n\nAppModule -->\n\nEstadosModule->AppModule\n\n\n\n\n\nFornecedoresModule\n\nFornecedoresModule\n\nAppModule -->\n\nFornecedoresModule->AppModule\n\n\n\n\n\nOrigensModule\n\nOrigensModule\n\nAppModule -->\n\nOrigensModule->AppModule\n\n\n\n\n\nProdutosModule\n\nProdutosModule\n\nAppModule -->\n\nProdutosModule->AppModule\n\n\n\n\n\nProfissoesModule\n\nProfissoesModule\n\nAppModule -->\n\nProfissoesModule->AppModule\n\n\n\n\n\nStatusModule\n\nStatusModule\n\nAppModule -->\n\nStatusModule->AppModule\n\n\n\n\n\nTiposModule\n\nTiposModule\n\nAppModule -->\n\nTiposModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoriasModule\n                        \n                        \n                            CidadesModule\n                        \n                        \n                            ClientesModule\n                        \n                        \n                            EstadosModule\n                        \n                        \n                            FornecedoresModule\n                        \n                        \n                            OrigensModule\n                        \n                        \n                            ProdutosModule\n                        \n                        \n                            ProfissoesModule\n                        \n                        \n                            StatusModule\n                        \n                        \n                            TiposModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AuthModule } from './auth/auth.module';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { environment } from './common/environment';\nimport { AppController } from './app.controller';\nimport { UsersModule } from './users/users.module'\nimport { ProfissoesModule } from './profissoes/profissoes.module';\nimport { CategoriasModule } from './categorias/categorias.module'\nimport { CidadesModule } from './cidades/cidades.module'\nimport { EstadosModule } from './estados/estados.module'\nimport { OrigensModule } from './origens/origens.module'\nimport { StatusModule } from './status/status.module'\nimport { TiposModule } from './tipos/tipos.module'\nimport { FornecedoresModule } from './fornecedores/fornecedores.module';\nimport { ProdutosModule } from './produtos/produtos.module';\nimport { ClientesModule } from './clientes/clientes.module'\n\n@Module({\n  imports: [\n    MongooseModule.forRoot(`${environment.db.url}/absoluta-api`,\n      {\n        useNewUrlParser: true,\n        useCreateIndex: true,\n        useUnifiedTopology: true,\n        useFindAndModify: false\n      }),\n    UsersModule,\n    ProfissoesModule,\n    CategoriasModule,\n    CidadesModule,\n    EstadosModule,\n    OrigensModule,\n    StatusModule,\n    TiposModule,\n    FornecedoresModule,\n    ProdutosModule,\n    ClientesModule,\n    AuthModule\n  ],\n  controllers: [AppController],\n  providers: [],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('v1/auth/login')\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, UseGuards, Request, Post } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalAuthGuard } from './local-auth.guard'\n\n@Controller()\nexport class AuthController {\n\n    constructor(\n        private authService: AuthService\n    ){}\n\n    @UseGuards(LocalAuthGuard)\n    @Post('v1/auth/login')\n    async login(@Request() req: any){\n        return this.authService.login(req.user)\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { Module } from '@nestjs/common';\nimport { UsersModule } from 'src/users/users.module';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { JwtModule } from '@nestjs/jwt'\nimport { PassportModule } from '@nestjs/passport'\nimport { jwtConstants } from './constants';\n\n@Module({\n    imports: [\n        UsersModule,\n        PassportModule,\n        JwtModule.register({\n            secret: jwtConstants.secret,\n            signOptions: { expiresIn: '60s' }\n        })\n    ],\n    controllers: [\n        AuthController,\n    ],\n    providers: [\n        AuthService,\n        LocalStrategy,\n        JwtStrategy\n    ],\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validadeUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validadeUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validadeUser(userEmail: string, userPassword: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userEmail\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userPassword\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { UsersService} from './../users/users.service'\nimport * as bcrypt from 'bcrypt'\nimport { environment } from '../common/environment'\n\n@Injectable()\nexport class AuthService {\n    constructor(\n        private usersService: UsersService,\n        private jwtService: JwtService\n    ){}\n\n    async validadeUser(userEmail: string, userPassword: string){\n        const user = await this.usersService.consutarUserEmail(userEmail)\n\n        const isMatch = await bcrypt.compare(userPassword, user.password)\n\n        if(user && isMatch === true){\n            const { _id, nome, email } = user\n            return { _id, nome, email }\n        }\n        return null\n    }\n\n    async   login(user: any){\n        const payload = { email: user.email, sub: user.sub }\n        return {\n            access_token: this.jwtService.sign(payload)\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Categoria.html":{"url":"interfaces/Categoria.html","title":"interface - Categoria","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Categoria\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categorias/interfaces/categorias.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        nome\n                                \n                                \n                                        status\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nome\n                                    \n                                \n                                \n                                    \n                                        nome:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Categoria extends Document {\n    nome: string,\n    status: string,\n    createdAt: Date,\n    updatedAt: Date\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriasController.html":{"url":"controllers/CategoriasController.html","title":"controller - CategoriasController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoriasController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categorias/categorias.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/categorias\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarCategoria\n                            \n                            \n                                    Async\n                                consultarCategoria\n                            \n                            \n                                    Async\n                                consultarCategoriaKey\n                            \n                            \n                                    Async\n                                criarCategoria\n                            \n                            \n                                    Async\n                                deletarCategoria\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarCategoria\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarCategoria(updateCategoriaDto: UpdateCategoriaDto, _id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/categorias/categorias.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateCategoriaDto\n                                    \n                                                UpdateCategoriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarCategoria\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarCategoria()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/categorias/categorias.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarCategoriaKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarCategoriaKey(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/categorias/categorias.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarCategoria\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarCategoria(createCategoriaDto: CreateCategoriaDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/categorias/categorias.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCategoriaDto\n                                    \n                                                CreateCategoriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarCategoria\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarCategoria(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/categorias/categorias.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Logger, Param, Delete, Put } from '@nestjs/common';\nimport { CreateCategoriaDto } from './dtos/create-categorias.dto';\nimport { UpdateCategoriaDto } from './dtos/update-categorias.dto'\nimport { CategoriasService } from './categorias.service';\nimport { Categoria } from './interfaces/categorias.interface';\n\n@Controller('v1/categorias')\nexport class CategoriasController {\n\n    private readonly logger = new Logger(CategoriasController.name);\n\n    constructor(private readonly categoriasService: CategoriasService) {}\n\n    @Post()\n    async criarCategoria(\n        @Body() createCategoriaDto: CreateCategoriaDto\n    ): Promise{\n        return await this.categoriasService.criarCategoria(createCategoriaDto)\n    }\n\n    @Get()\n    async consultarCategoria(): Promise {\n        return await this.categoriasService.consultarTodosCategoria();\n    }\n\n    @Get('/:_id')\n    async consultarCategoriaKey(@Param('_id') _id: string): Promise {\n        return await this.categoriasService.consultarCategoriaKey(_id);\n    }\n\n    @Put('/:_id')\n    async atualizarCategoria(\n        @Body() updateCategoriaDto: UpdateCategoriaDto,\n        @Param('_id') _id: string\n    ): Promise { \n        this.logger.log(`updateCategoriaDto: ${JSON.stringify(updateCategoriaDto)}`);\n        await this.categoriasService.atualizarCategoria(_id,updateCategoriaDto)\n    }\n\n    @Delete('/:_id')\n    async deletarCategoria(\n        @Param('_id') _id: string): Promise{\n        this.categoriasService.deletarCategoria(_id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriasModule.html":{"url":"modules/CategoriasModule.html","title":"module - CategoriasModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriasModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriasModule\n\n\n\ncluster_CategoriasModule_providers\n\n\n\ncluster_CategoriasModule_exports\n\n\n\n\nCategoriasService \n\nCategoriasService \n\n\n\nCategoriasModule\n\nCategoriasModule\n\nCategoriasService  -->\n\nCategoriasModule->CategoriasService \n\n\n\n\n\nCategoriasService\n\nCategoriasService\n\nCategoriasModule -->\n\nCategoriasService->CategoriasModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categorias/categorias.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriasService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoriasController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoriasService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { CategoriasController } from './categorias.controller';\nimport { CategoriasService } from './categorias.service';\nimport { CategoriaSchema } from './interfaces/categorias.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'Categoria', schema: CategoriaSchema}])\n  ],\n  exports: [CategoriasService],\n  controllers: [CategoriasController],\n  providers: [CategoriasService]\n})\nexport class CategoriasModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriasService.html":{"url":"injectables/CategoriasService.html","title":"injectable - CategoriasService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CategoriasService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categorias/categorias.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarCategoria\n                            \n                            \n                                    Async\n                                consultarCategoriaKey\n                            \n                            \n                                    Async\n                                consultarTodosCategoria\n                            \n                            \n                                    Async\n                                criarCategoria\n                            \n                            \n                                    Async\n                                deletarCategoria\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoriasModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/categorias/categorias.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoriasModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarCategoria\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarCategoria(_id: string, updateCategoriaDto: UpdateCategoriaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/categorias/categorias.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCategoriaDto\n                                    \n                                                UpdateCategoriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarCategoriaKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarCategoriaKey(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/categorias/categorias.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTodosCategoria\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTodosCategoria()\n                \n            \n\n\n            \n                \n                    Defined in src/categorias/categorias.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarCategoria\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarCategoria(createCategoriaDto: CreateCategoriaDto)\n                \n            \n\n\n            \n                \n                    Defined in src/categorias/categorias.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCategoriaDto\n                                    \n                                                CreateCategoriaDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarCategoria\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarCategoria(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/categorias/categorias.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(CategoriasService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/categorias/categorias.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common'\nimport { CreateCategoriaDto } from './dtos/create-categorias.dto'\nimport { UpdateCategoriaDto } from './dtos/update-categorias.dto'\nimport { Categoria } from './interfaces/categorias.interface'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class CategoriasService {\n\n    constructor(\n        @InjectModel('Categoria') private readonly categoriasModel: Model\n    ) {}\n\n    private readonly logger = new Logger(CategoriasService.name);\n\n    async criarCategoria(createCategoriaDto: CreateCategoriaDto): Promise {\n        const categoriaCriado = new this.categoriasModel(createCategoriaDto)\n        categoriaCriado.save( (error, doc) => {\n            console.log(doc)\n        })\n    }\n\n    async atualizarCategoria(_id: string, updateCategoriaDto: UpdateCategoriaDto): Promise {\n        const categoriaCriado = await this.categoriasModel.findOne({_id}).exec()\n        if(!categoriaCriado){\n            throw new BadRequestException(`Categoria com o _id ${_id} não encontrado`)\n        }\n        return await this.categoriasModel.findOneAndUpdate({_id: _id},{$set: updateCategoriaDto}).exec()\n    }\n\n    async consultarTodosCategoria(): Promise {\n        return await this.categoriasModel.find().exec()\n    }\n\n    async consultarCategoriaKey(_id: string): Promise {\n        const categoriaCriado = await this.categoriasModel.findOne({_id}).exec()\n        if(!categoriaCriado){\n            throw new BadRequestException(`Categoria com o _id ${_id} não encontrado`)\n        }\n        return await this.categoriasModel.findOne({_id}).exec()\n    }\n\n    async deletarCategoria(_id: string): Promise {\n        const categoriaCriado = await this.categoriasModel.findOne({_id}).exec()\n        if(!categoriaCriado){\n            throw new BadRequestException(`Categoria com o _id ${_id} não encontrado`)\n        }\n        await this.categoriasModel.deleteOne({_id}).exec()\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cidade.html":{"url":"interfaces/Cidade.html","title":"interface - Cidade","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cidade\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cidades/interfaces/cidades.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        estado_id\n                                \n                                \n                                        nome\n                                \n                                \n                                        uf\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        estado_id\n                                    \n                                \n                                \n                                    \n                                        estado_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nome\n                                    \n                                \n                                \n                                    \n                                        nome:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uf\n                                    \n                                \n                                \n                                    \n                                        uf:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Cidade extends Document {\n    uf: string,\n    nome: string,\n    estado_id: string,\n    createdAt: Date,\n    updatedAt: Date\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CidadesController.html":{"url":"controllers/CidadesController.html","title":"controller - CidadesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CidadesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cidades/cidades.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/cidades\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarCidade\n                            \n                            \n                                    Async\n                                consultarCidade\n                            \n                            \n                                    Async\n                                consultarCidadeKey\n                            \n                            \n                                    Async\n                                criarCidade\n                            \n                            \n                                    Async\n                                deletarCidade\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarCidade\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarCidade(updateCidadeDto: UpdateCidadeDto, _id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/cidades/cidades.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateCidadeDto\n                                    \n                                                UpdateCidadeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarCidade\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarCidade()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cidades/cidades.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarCidadeKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarCidadeKey(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/cidades/cidades.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarCidade\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarCidade(createCidadeDto: CreateCidadeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/cidades/cidades.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCidadeDto\n                                    \n                                                CreateCidadeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarCidade\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarCidade(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/cidades/cidades.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Logger, Param, Delete, Put } from '@nestjs/common';\nimport { CreateCidadeDto } from './dtos/create-cidades.dto';\nimport { UpdateCidadeDto } from './dtos/update-cidades.dto'\nimport { CidadesService } from './cidades.service';\nimport { Cidade } from './interfaces/cidades.interface';\n\n@Controller('v1/cidades')\nexport class CidadesController {\n\n    private readonly logger = new Logger(CidadesController.name);\n\n    constructor(private readonly cidadesService: CidadesService) {}\n\n    @Post()\n    async criarCidade(\n        @Body() createCidadeDto: CreateCidadeDto\n    ): Promise{\n        return await this.cidadesService.criarCidade(createCidadeDto)\n    }\n\n    @Get()\n    async consultarCidade(): Promise {\n        return await this.cidadesService.consultarTodosCidade();\n    }\n\n    @Get('/:_id')\n    async consultarCidadeKey(@Param('_id') _id: string): Promise {\n        return await this.cidadesService.consultarCidadeKey(_id);\n    }\n\n    @Put('/:_id')\n    async atualizarCidade(\n        @Body() updateCidadeDto: UpdateCidadeDto,\n        @Param('_id') _id: string\n    ): Promise { \n        this.logger.log(`updateCidadeDto: ${JSON.stringify(updateCidadeDto)}`);\n        await this.cidadesService.atualizarCidade(_id,updateCidadeDto)\n    }\n\n    @Delete('/:_id')\n    async deletarCidade(\n        @Param('_id') _id: string): Promise{\n        this.cidadesService.deletarCidade(_id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CidadesModule.html":{"url":"modules/CidadesModule.html","title":"module - CidadesModule","body":"\n                   \n\n\n\n\n    Modules\n    CidadesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CidadesModule\n\n\n\ncluster_CidadesModule_providers\n\n\n\ncluster_CidadesModule_exports\n\n\n\n\nCidadesService \n\nCidadesService \n\n\n\nCidadesModule\n\nCidadesModule\n\nCidadesService  -->\n\nCidadesModule->CidadesService \n\n\n\n\n\nCidadesService\n\nCidadesService\n\nCidadesModule -->\n\nCidadesService->CidadesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cidades/cidades.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CidadesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CidadesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CidadesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { CidadesController } from './cidades.controller';\nimport { CidadesService } from './cidades.service';\nimport { CidadeSchema } from './interfaces/cidades.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'Cidade', schema: CidadeSchema}])\n  ],\n  exports: [CidadesService],\n  controllers: [CidadesController],\n  providers: [CidadesService]\n})\nexport class CidadesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CidadesService.html":{"url":"injectables/CidadesService.html","title":"injectable - CidadesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CidadesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cidades/cidades.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarCidade\n                            \n                            \n                                    Async\n                                consultarCidadeKey\n                            \n                            \n                                    Async\n                                consultarTodosCidade\n                            \n                            \n                                    Async\n                                criarCidade\n                            \n                            \n                                    Async\n                                deletarCidade\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cidadesModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/cidades/cidades.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cidadesModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarCidade\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarCidade(_id: string, updateCidadeDto: UpdateCidadeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cidades/cidades.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCidadeDto\n                                    \n                                                UpdateCidadeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarCidadeKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarCidadeKey(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cidades/cidades.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTodosCidade\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTodosCidade()\n                \n            \n\n\n            \n                \n                    Defined in src/cidades/cidades.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarCidade\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarCidade(createCidadeDto: CreateCidadeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/cidades/cidades.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCidadeDto\n                                    \n                                                CreateCidadeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarCidade\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarCidade(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/cidades/cidades.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(CidadesService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/cidades.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common'\nimport { CreateCidadeDto } from './dtos/create-cidades.dto'\nimport { UpdateCidadeDto } from './dtos/update-cidades.dto'\nimport { Cidade } from './interfaces/cidades.interface'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class CidadesService {\n\n    constructor(\n        @InjectModel('Cidade') private readonly cidadesModel: Model\n    ) {}\n\n    private readonly logger = new Logger(CidadesService.name);\n\n    async criarCidade(createCidadeDto: CreateCidadeDto): Promise {\n        const cidadeCriado = new this.cidadesModel(createCidadeDto)\n        cidadeCriado.save( (error, doc) => {\n            console.log(doc)\n        })\n    }\n\n    async atualizarCidade(_id: string, updateCidadeDto: UpdateCidadeDto): Promise {\n        const cidadeCriado = await this.cidadesModel.findOne({_id}).exec()\n        if(!cidadeCriado){\n            throw new BadRequestException(`Cidade com o _id ${_id} não encontrado`)\n        }\n        return await this.cidadesModel.findOneAndUpdate({_id: _id},{$set: updateCidadeDto}).exec()\n    }\n\n    async consultarTodosCidade(): Promise {\n        return await this.cidadesModel.find().exec()\n    }\n\n    async consultarCidadeKey(_id: string): Promise {\n        const cidadeCriado = await this.cidadesModel.findOne({_id}).exec()\n        if(!cidadeCriado){\n            throw new BadRequestException(`Cidade com o _id ${_id} não encontrado`)\n        }\n        return await this.cidadesModel.findOne({_id}).exec()\n    }\n\n    async deletarCidade(_id: string): Promise {\n        const cidadeCriado = await this.cidadesModel.findOne({_id}).exec()\n        if(!cidadeCriado){\n            throw new BadRequestException(`Cidade com o _id ${_id} não encontrado`)\n        }\n        await this.cidadesModel.deleteOne({_id}).exec()\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cliente.html":{"url":"interfaces/Cliente.html","title":"interface - Cliente","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cliente\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clientes/interfaces/clientes.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        nome\n                                \n                                \n                                        tipo\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nome\n                                    \n                                \n                                \n                                    \n                                        nome:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                    \n                                \n                                \n                                    \n                                        tipo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Cliente extends Document {\n    nome: string,\n    tipo: string,\n    createdAt: Date,\n    updatedAt: Date\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ClientesController.html":{"url":"controllers/ClientesController.html","title":"controller - ClientesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ClientesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clientes/clientes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/clientes\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarCliente\n                            \n                            \n                                    Async\n                                consultarCliente\n                            \n                            \n                                    Async\n                                consultarClienteKey\n                            \n                            \n                                    Async\n                                criarCliente\n                            \n                            \n                                    Async\n                                deletarCliente\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarCliente\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarCliente(updateClienteDto: UpdateClienteDto, _id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/clientes/clientes.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateClienteDto\n                                    \n                                                UpdateClienteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarCliente\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarCliente()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/clientes/clientes.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarClienteKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarClienteKey(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/clientes/clientes.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarCliente\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarCliente(createClienteDto: CreateClienteDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/clientes/clientes.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createClienteDto\n                                    \n                                                CreateClienteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarCliente\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarCliente(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/clientes/clientes.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Logger, Param, Delete, Put } from '@nestjs/common';\nimport { CreateClienteDto } from './dtos/create-clientes.dto';\nimport { UpdateClienteDto } from './dtos/update-clientes.dto'\nimport { ClientesService } from './clientes.service';\nimport { Cliente } from './interfaces/clientes.interface';\n\n@Controller('v1/clientes')\nexport class ClientesController {\n\n    private readonly logger = new Logger(ClientesController.name);\n\n    constructor(private readonly clientesService: ClientesService) {}\n\n    @Post()\n    async criarCliente(\n        @Body() createClienteDto: CreateClienteDto\n    ): Promise{\n        return await this.clientesService.criarCliente(createClienteDto)\n    }\n\n    @Get()\n    async consultarCliente(): Promise {\n        return await this.clientesService.consultarTodosCliente();\n    }\n\n    @Get('/:_id')\n    async consultarClienteKey(@Param('_id') _id: string): Promise {\n        return await this.clientesService.consultarClienteKey(_id);\n    }\n\n    @Put('/:_id')\n    async atualizarCliente(\n        @Body() updateClienteDto: UpdateClienteDto,\n        @Param('_id') _id: string\n    ): Promise { \n        this.logger.log(`updateClienteDto: ${JSON.stringify(updateClienteDto)}`);\n        await this.clientesService.atualizarCliente(_id,updateClienteDto)\n    }\n\n    @Delete('/:_id')\n    async deletarCliente(\n        @Param('_id') _id: string): Promise{\n        this.clientesService.deletarCliente(_id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ClientesModule.html":{"url":"modules/ClientesModule.html","title":"module - ClientesModule","body":"\n                   \n\n\n\n\n    Modules\n    ClientesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ClientesModule\n\n\n\ncluster_ClientesModule_exports\n\n\n\ncluster_ClientesModule_providers\n\n\n\n\nClientesService \n\nClientesService \n\n\n\nClientesModule\n\nClientesModule\n\nClientesService  -->\n\nClientesModule->ClientesService \n\n\n\n\n\nClientesService\n\nClientesService\n\nClientesModule -->\n\nClientesService->ClientesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/clientes/clientes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ClientesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ClientesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ClientesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ClientesController } from './clientes.controller';\nimport { ClientesService } from './clientes.service';\nimport { ClienteSchema } from './interfaces/clientes.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'Cliente', schema: ClienteSchema}])\n  ],\n  exports: [ClientesService],\n  controllers: [ClientesController],\n  providers: [ClientesService]\n})\nexport class ClientesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClientesService.html":{"url":"injectables/ClientesService.html","title":"injectable - ClientesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ClientesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clientes/clientes.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarCliente\n                            \n                            \n                                    Async\n                                consultarClienteKey\n                            \n                            \n                                    Async\n                                consultarTodosCliente\n                            \n                            \n                                    Async\n                                criarCliente\n                            \n                            \n                                    Async\n                                deletarCliente\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientesModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/clientes/clientes.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientesModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarCliente\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarCliente(_id: string, updateClienteDto: UpdateClienteDto)\n                \n            \n\n\n            \n                \n                    Defined in src/clientes/clientes.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateClienteDto\n                                    \n                                                UpdateClienteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarClienteKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarClienteKey(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/clientes/clientes.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTodosCliente\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTodosCliente()\n                \n            \n\n\n            \n                \n                    Defined in src/clientes/clientes.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarCliente\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarCliente(createClienteDto: CreateClienteDto)\n                \n            \n\n\n            \n                \n                    Defined in src/clientes/clientes.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createClienteDto\n                                    \n                                                CreateClienteDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarCliente\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarCliente(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/clientes/clientes.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(ClientesService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/clientes.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common'\nimport { CreateClienteDto } from './dtos/create-clientes.dto'\nimport { UpdateClienteDto } from './dtos/update-clientes.dto'\nimport { Cliente } from './interfaces/clientes.interface'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class ClientesService {\n\n    constructor(\n        @InjectModel('Cliente') private readonly clientesModel: Model\n    ) {}\n\n    private readonly logger = new Logger(ClientesService.name);\n\n    async criarCliente(createClienteDto: CreateClienteDto): Promise {\n        const clienteCriado = new this.clientesModel(createClienteDto)\n        clienteCriado.save( (error, doc) => {\n            console.log(doc)\n        })\n    }\n\n    async atualizarCliente(_id: string, updateClienteDto: UpdateClienteDto): Promise {\n        const clienteCriado = await this.clientesModel.findOne({_id}).exec()\n        if(!clienteCriado){\n            throw new BadRequestException(`Cliente com o _id ${_id} não encontrado`)\n        }\n        return await this.clientesModel.findOneAndUpdate({_id: _id},{$set: updateClienteDto}).exec()\n    }\n\n    async consultarTodosCliente(): Promise {\n        return await this.clientesModel.find().exec()\n    }\n\n    async consultarClienteKey(_id: string): Promise {\n        const clienteCriado = await this.clientesModel.findOne({_id}).exec()\n        if(!clienteCriado){\n            throw new BadRequestException(`Cliente com o _id ${_id} não encontrado`)\n        }\n        return await this.clientesModel.findOne({_id}).exec()\n    }\n\n    async deletarCliente(_id: string): Promise {\n        const clienteCriado = await this.clientesModel.findOne({_id}).exec()\n        if(!clienteCriado){\n            throw new BadRequestException(`Cliente com o _id ${_id} não encontrado`)\n        }\n        await this.clientesModel.deleteOne({_id}).exec()\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoriaDto.html":{"url":"classes/CreateCategoriaDto.html","title":"class - CreateCategoriaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoriaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categorias/dtos/create-categorias.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                nome\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/categorias/dtos/create-categorias.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categorias/dtos/create-categorias.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categorias/dtos/create-categorias.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/categorias/dtos/create-categorias.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateCategoriaDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    status: string\n    createdAt: Date\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCidadeDto.html":{"url":"classes/CreateCidadeDto.html","title":"class - CreateCidadeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCidadeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cidades/dtos/create-cidades.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                estado\n                            \n                            \n                                nome\n                            \n                            \n                                uf\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/dtos/create-cidades.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            estado\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/dtos/create-cidades.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/dtos/create-cidades.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/dtos/create-cidades.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/dtos/create-cidades.dto.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateCidadeDto {\n    @ApiProperty()\n    uf: string\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    estado: string\n    createdAt: Date\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateClienteDto.html":{"url":"classes/CreateClienteDto.html","title":"class - CreateClienteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateClienteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clientes/dtos/create-clientes.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cnpj\n                            \n                            \n                                cpf\n                            \n                            \n                                createdAt\n                            \n                            \n                                data_nascimento\n                            \n                            \n                                inscricao\n                            \n                            \n                                master_id\n                            \n                            \n                                nome\n                            \n                            \n                                profissao\n                            \n                            \n                                rg\n                            \n                            \n                                sexo\n                            \n                            \n                                tipo_cliente\n                            \n                            \n                                tipo_pessoa\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cnpj\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/create-clientes.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cpf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/create-clientes.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/create-clientes.dto.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data_nascimento\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/create-clientes.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inscricao\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/create-clientes.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            master_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/create-clientes.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/create-clientes.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profissao\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/create-clientes.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/create-clientes.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sexo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/create-clientes.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tipo_cliente\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/create-clientes.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tipo_pessoa\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/create-clientes.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/create-clientes.dto.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateClienteDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    sexo: string\n    @ApiProperty()\n    tipo_pessoa: number //fisica ou juridica\n    @ApiProperty()\n    tipo_cliente: string //master ou dependente\n    @ApiProperty()\n    master_id: string\n    @ApiProperty()\n    rg: number\n    @ApiProperty()\n    cpf: number\n    @ApiProperty()\n    cnpj: number\n    @ApiProperty()\n    inscricao: number\n    @ApiProperty()\n    data_nascimento: Date\n    @ApiProperty()\n    profissao: string\n    createdAt: Date\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEstadoDto.html":{"url":"classes/CreateEstadoDto.html","title":"class - CreateEstadoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEstadoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/estados/dtos/create-estados.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                nome\n                            \n                            \n                                uf\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/estados/dtos/create-estados.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/estados/dtos/create-estados.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/estados/dtos/create-estados.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/estados/dtos/create-estados.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateEstadoDto {\n    @ApiProperty()\n    uf: string\n    @ApiProperty()\n    nome: string\n    createdAt: Date\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFornecedorDto.html":{"url":"classes/CreateFornecedorDto.html","title":"class - CreateFornecedorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFornecedorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fornecedores/dtos/create-fornecedores.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                nome\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/fornecedores/dtos/create-fornecedores.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/fornecedores/dtos/create-fornecedores.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/fornecedores/dtos/create-fornecedores.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/fornecedores/dtos/create-fornecedores.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateFornecedorDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    status: string\n    createdAt: Date\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrigemDto.html":{"url":"classes/CreateOrigemDto.html","title":"class - CreateOrigemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrigemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/origens/dtos/create-origens.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                nome\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/origens/dtos/create-origens.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/origens/dtos/create-origens.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/origens/dtos/create-origens.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/origens/dtos/create-origens.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateOrigemDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    status: Number\n    createdAt: Date\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProdutoDto.html":{"url":"classes/CreateProdutoDto.html","title":"class - CreateProdutoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProdutoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtos/dtos/create-produtos.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoria\n                            \n                            \n                                createdAt\n                            \n                            \n                                fornecedor\n                            \n                            \n                                nome\n                            \n                            \n                                status\n                            \n                            \n                                tipo\n                            \n                            \n                                updatedAt\n                            \n                            \n                                valor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoria\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/produtos/dtos/create-produtos.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/produtos/dtos/create-produtos.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fornecedor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/produtos/dtos/create-produtos.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/produtos/dtos/create-produtos.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/produtos/dtos/create-produtos.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tipo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/produtos/dtos/create-produtos.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/produtos/dtos/create-produtos.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/produtos/dtos/create-produtos.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateProdutoDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    valor: Number\n    @ApiProperty()\n    tipo: string\n    @ApiProperty()\n    categoria: string\n    @ApiProperty()\n    status: string\n    @ApiProperty()\n    fornecedor: string\n    createdAt: Date\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProfissaoDto.html":{"url":"classes/CreateProfissaoDto.html","title":"class - CreateProfissaoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProfissaoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profissoes/dtos/create-profissoes.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                nome\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/profissoes/dtos/create-profissoes.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profissoes/dtos/create-profissoes.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profissoes/dtos/create-profissoes.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/profissoes/dtos/create-profissoes.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateProfissaoDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    status: string\n    createdAt: Date\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateStatusDto.html":{"url":"classes/CreateStatusDto.html","title":"class - CreateStatusDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateStatusDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/status/dtos/create-status.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                nome\n                            \n                            \n                                tipo\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/status/dtos/create-status.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/status/dtos/create-status.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tipo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/status/dtos/create-status.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/status/dtos/create-status.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateStatusDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    tipo: string\n    createdAt: Date\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTipoDto.html":{"url":"classes/CreateTipoDto.html","title":"class - CreateTipoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTipoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tipos/dtos/create-tipos.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                nome\n                            \n                            \n                                tipo\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tipos/dtos/create-tipos.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tipos/dtos/create-tipos.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tipo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tipos/dtos/create-tipos.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tipos/dtos/create-tipos.dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateTipoDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    tipo: string\n    createdAt: Date\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                nome\n                            \n                            \n                                password\n                            \n                            \n                                status\n                            \n                            \n                                tipo\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/create-user.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/create-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/create-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/create-user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/create-user.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tipo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/create-user.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/create-user.dto.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUserDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    email: string\n    @ApiProperty()\n    password: string\n    @ApiProperty()\n    tipo: string\n    @ApiProperty()\n    status: string\n    @ApiProperty()\n    createdAt: Date\n    @ApiProperty()\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Estado.html":{"url":"interfaces/Estado.html","title":"interface - Estado","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Estado\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/estados/interfaces/estados.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        nome\n                                \n                                \n                                        uf\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nome\n                                    \n                                \n                                \n                                    \n                                        nome:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uf\n                                    \n                                \n                                \n                                    \n                                        uf:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Estado extends Document {\n    uf: string,\n    nome: string,\n    createdAt: Date,\n    updatedAt: Date\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EstadosController.html":{"url":"controllers/EstadosController.html","title":"controller - EstadosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EstadosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/estados/estados.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/estados\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarEstado\n                            \n                            \n                                    Async\n                                consultarEstado\n                            \n                            \n                                    Async\n                                consultarEstadoKey\n                            \n                            \n                                    Async\n                                criarEstado\n                            \n                            \n                                    Async\n                                deletarEstado\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarEstado\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarEstado(updateEstadoDto: UpdateEstadoDto, _id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/estados/estados.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateEstadoDto\n                                    \n                                                UpdateEstadoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarEstado\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarEstado()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/estados/estados.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarEstadoKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarEstadoKey(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/estados/estados.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarEstado\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarEstado(createEstadoDto: CreateEstadoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/estados/estados.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEstadoDto\n                                    \n                                                CreateEstadoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarEstado\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarEstado(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/estados/estados.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Logger, Param, Delete, Put } from '@nestjs/common';\nimport { CreateEstadoDto } from './dtos/create-estados.dto';\nimport { UpdateEstadoDto } from './dtos/update-estados.dto'\nimport { EstadosService } from './estados.service';\nimport { Estado } from './interfaces/estados.interface';\n\n@Controller('v1/estados')\nexport class EstadosController {\n\n    private readonly logger = new Logger(EstadosController.name);\n\n    constructor(private readonly estadosService: EstadosService) {}\n\n    @Post()\n    async criarEstado(\n        @Body() createEstadoDto: CreateEstadoDto\n    ): Promise{\n        return await this.estadosService.criarEstado(createEstadoDto)\n    }\n\n    @Get()\n    async consultarEstado(): Promise {\n        return await this.estadosService.consultarTodosEstado();\n    }\n\n    @Get('/:_id')\n    async consultarEstadoKey(@Param('_id') _id: string): Promise {\n        return await this.estadosService.consultarEstadoKey(_id);\n    }\n\n    @Put('/:_id')\n    async atualizarEstado(\n        @Body() updateEstadoDto: UpdateEstadoDto,\n        @Param('_id') _id: string\n    ): Promise { \n        this.logger.log(`updateEstadoDto: ${JSON.stringify(updateEstadoDto)}`);\n        await this.estadosService.atualizarEstado(_id,updateEstadoDto)\n    }\n\n    @Delete('/:_id')\n    async deletarEstado(\n        @Param('_id') _id: string): Promise{\n        this.estadosService.deletarEstado(_id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EstadosModule.html":{"url":"modules/EstadosModule.html","title":"module - EstadosModule","body":"\n                   \n\n\n\n\n    Modules\n    EstadosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EstadosModule\n\n\n\ncluster_EstadosModule_exports\n\n\n\ncluster_EstadosModule_providers\n\n\n\n\nEstadosService \n\nEstadosService \n\n\n\nEstadosModule\n\nEstadosModule\n\nEstadosService  -->\n\nEstadosModule->EstadosService \n\n\n\n\n\nEstadosService\n\nEstadosService\n\nEstadosModule -->\n\nEstadosService->EstadosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/estados/estados.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EstadosService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EstadosController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EstadosService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { EstadosController } from './estados.controller';\nimport { EstadosService } from './estados.service';\nimport { EstadoSchema } from './interfaces/estados.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'Estado', schema: EstadoSchema}])\n  ],\n  exports: [EstadosService],\n  controllers: [EstadosController],\n  providers: [EstadosService]\n})\nexport class EstadosModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EstadosService.html":{"url":"injectables/EstadosService.html","title":"injectable - EstadosService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EstadosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/estados/estados.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarEstado\n                            \n                            \n                                    Async\n                                consultarEstadoKey\n                            \n                            \n                                    Async\n                                consultarTodosEstado\n                            \n                            \n                                    Async\n                                criarEstado\n                            \n                            \n                                    Async\n                                deletarEstado\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(estadosModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/estados/estados.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        estadosModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarEstado\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarEstado(_id: string, updateEstadoDto: UpdateEstadoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/estados/estados.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEstadoDto\n                                    \n                                                UpdateEstadoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarEstadoKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarEstadoKey(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/estados/estados.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTodosEstado\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTodosEstado()\n                \n            \n\n\n            \n                \n                    Defined in src/estados/estados.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarEstado\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarEstado(createEstadoDto: CreateEstadoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/estados/estados.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEstadoDto\n                                    \n                                                CreateEstadoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarEstado\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarEstado(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/estados/estados.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(EstadosService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/estados/estados.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common'\nimport { CreateEstadoDto } from './dtos/create-estados.dto'\nimport { UpdateEstadoDto } from './dtos/update-estados.dto'\nimport { Estado } from './interfaces/estados.interface'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class EstadosService {\n\n    constructor(\n        @InjectModel('Estado') private readonly estadosModel: Model\n    ) {}\n\n    private readonly logger = new Logger(EstadosService.name);\n\n    async criarEstado(createEstadoDto: CreateEstadoDto): Promise {\n        const estadoCriado = new this.estadosModel(createEstadoDto)\n        estadoCriado.save( (error, doc) => {\n            console.log(doc)\n        })\n    }\n\n    async atualizarEstado(_id: string, updateEstadoDto: UpdateEstadoDto): Promise {\n        const estadoCriado = await this.estadosModel.findOne({_id}).exec()\n        if(!estadoCriado){\n            throw new BadRequestException(`Estado com o _id ${_id} não encontrado`)\n        }\n        return await this.estadosModel.findOneAndUpdate({_id: _id},{$set: updateEstadoDto}).exec()\n    }\n\n    async consultarTodosEstado(): Promise {\n        return await this.estadosModel.find().exec()\n    }\n\n    async consultarEstadoKey(_id: string): Promise {\n        const estadoCriado = await this.estadosModel.findOne({_id}).exec()\n        if(!estadoCriado){\n            throw new BadRequestException(`Estado com o _id ${_id} não encontrado`)\n        }\n        return await this.estadosModel.findOne({_id}).exec()\n    }\n\n    async deletarEstado(_id: string): Promise {\n        const estadoCriado = await this.estadosModel.findOne({_id}).exec()\n        if(!estadoCriado){\n            throw new BadRequestException(`Estado com o _id ${_id} não encontrado`)\n        }\n        await this.estadosModel.deleteOne({_id}).exec()\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Fornecedor.html":{"url":"interfaces/Fornecedor.html","title":"interface - Fornecedor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Fornecedor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fornecedores/interfaces/fornecedores.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        nome\n                                \n                                \n                                        status\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nome\n                                    \n                                \n                                \n                                    \n                                        nome:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Fornecedor extends Document {\n    nome: string,\n    status: string,\n    createdAt: Date,\n    updatedAt: Date\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FornecedoresController.html":{"url":"controllers/FornecedoresController.html","title":"controller - FornecedoresController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FornecedoresController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fornecedores/fornecedores.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/fornecedores\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarFornecedor\n                            \n                            \n                                    Async\n                                consultarFornecedor\n                            \n                            \n                                    Async\n                                consultarFornecedorKey\n                            \n                            \n                                    Async\n                                criarFornecedor\n                            \n                            \n                                    Async\n                                deletarFornecedor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarFornecedor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarFornecedor(updateFornecedorDto: UpdateFornecedorDto, _id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/fornecedores/fornecedores.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateFornecedorDto\n                                    \n                                                UpdateFornecedorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarFornecedor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarFornecedor()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/fornecedores/fornecedores.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarFornecedorKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarFornecedorKey(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/fornecedores/fornecedores.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarFornecedor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarFornecedor(createFornecedorDto: CreateFornecedorDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/fornecedores/fornecedores.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createFornecedorDto\n                                    \n                                                CreateFornecedorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarFornecedor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarFornecedor(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/fornecedores/fornecedores.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Logger, Param, Delete, Put } from '@nestjs/common';\nimport { CreateFornecedorDto } from './dtos/create-fornecedores.dto';\nimport { UpdateFornecedorDto } from './dtos/update-fornecedores.dto'\nimport { FornecedoresService } from './fornecedores.service';\nimport { Fornecedor } from './interfaces/fornecedores.interface';\n\n@Controller('v1/fornecedores')\nexport class FornecedoresController {\n\n    private readonly logger = new Logger(FornecedoresController.name);\n\n    constructor(private readonly fornecedoresService: FornecedoresService) {}\n\n    @Post()\n    async criarFornecedor(\n        @Body() createFornecedorDto: CreateFornecedorDto\n    ): Promise{\n        return await this.fornecedoresService.criarFornecedor(createFornecedorDto)\n    }\n\n    @Get()\n    async consultarFornecedor(): Promise {\n        return await this.fornecedoresService.consultarTodosFornecedor();\n    }\n\n    @Get('/:_id')\n    async consultarFornecedorKey(@Param('_id') _id: string): Promise {\n        return await this.fornecedoresService.consultarFornecedorKey(_id);\n    }\n\n    @Put('/:_id')\n    async atualizarFornecedor(\n        @Body() updateFornecedorDto: UpdateFornecedorDto,\n        @Param('_id') _id: string\n    ): Promise { \n        this.logger.log(`updateFornecedorDto: ${JSON.stringify(updateFornecedorDto)}`);\n        await this.fornecedoresService.atualizarFornecedor(_id,updateFornecedorDto)\n    }\n\n    @Delete('/:_id')\n    async deletarFornecedor(\n        @Param('_id') _id: string): Promise{\n        this.fornecedoresService.deletarFornecedor(_id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FornecedoresModule.html":{"url":"modules/FornecedoresModule.html","title":"module - FornecedoresModule","body":"\n                   \n\n\n\n\n    Modules\n    FornecedoresModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FornecedoresModule\n\n\n\ncluster_FornecedoresModule_providers\n\n\n\ncluster_FornecedoresModule_exports\n\n\n\n\nFornecedoresService \n\nFornecedoresService \n\n\n\nFornecedoresModule\n\nFornecedoresModule\n\nFornecedoresService  -->\n\nFornecedoresModule->FornecedoresService \n\n\n\n\n\nFornecedoresService\n\nFornecedoresService\n\nFornecedoresModule -->\n\nFornecedoresService->FornecedoresModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/fornecedores/fornecedores.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FornecedoresService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FornecedoresController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FornecedoresService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { FornecedoresController } from './fornecedores.controller';\nimport { FornecedoresService } from './fornecedores.service';\nimport { FornecedorSchema } from './interfaces/fornecedores.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'Fornecedor', schema: FornecedorSchema}])\n  ],\n  exports: [FornecedoresService],\n  controllers: [FornecedoresController],\n  providers: [FornecedoresService]\n})\nexport class FornecedoresModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FornecedoresService.html":{"url":"injectables/FornecedoresService.html","title":"injectable - FornecedoresService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FornecedoresService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fornecedores/fornecedores.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarFornecedor\n                            \n                            \n                                    Async\n                                consultarFornecedorKey\n                            \n                            \n                                    Async\n                                consultarTodosFornecedor\n                            \n                            \n                                    Async\n                                criarFornecedor\n                            \n                            \n                                    Async\n                                deletarFornecedor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fornecedoresModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/fornecedores/fornecedores.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fornecedoresModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarFornecedor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarFornecedor(_id: string, updateFornecedorDto: UpdateFornecedorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/fornecedores/fornecedores.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateFornecedorDto\n                                    \n                                                UpdateFornecedorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarFornecedorKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarFornecedorKey(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/fornecedores/fornecedores.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTodosFornecedor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTodosFornecedor()\n                \n            \n\n\n            \n                \n                    Defined in src/fornecedores/fornecedores.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarFornecedor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarFornecedor(createFornecedorDto: CreateFornecedorDto)\n                \n            \n\n\n            \n                \n                    Defined in src/fornecedores/fornecedores.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createFornecedorDto\n                                    \n                                                CreateFornecedorDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarFornecedor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarFornecedor(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/fornecedores/fornecedores.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(FornecedoresService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/fornecedores/fornecedores.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common'\nimport { CreateFornecedorDto } from './dtos/create-fornecedores.dto'\nimport { UpdateFornecedorDto } from './dtos/update-fornecedores.dto'\nimport { Fornecedor } from './interfaces/fornecedores.interface'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class FornecedoresService {\n\n    constructor(\n        @InjectModel('Fornecedor') private readonly fornecedoresModel: Model\n    ) {}\n\n    private readonly logger = new Logger(FornecedoresService.name);\n\n    async criarFornecedor(createFornecedorDto: CreateFornecedorDto): Promise {\n        const fornecedorCriado = new this.fornecedoresModel(createFornecedorDto)\n        fornecedorCriado.save( (error, doc) => {\n            console.log(doc)\n        })\n    }\n\n    async atualizarFornecedor(_id: string, updateFornecedorDto: UpdateFornecedorDto): Promise {\n        const fornecedorCriado = await this.fornecedoresModel.findOne({_id}).exec()\n        if(!fornecedorCriado){\n            throw new BadRequestException(`Fornecedor com o _id ${_id} não encontrado`)\n        }\n        return await this.fornecedoresModel.findOneAndUpdate({_id: _id},{$set: updateFornecedorDto}).exec()\n    }\n\n    async consultarTodosFornecedor(): Promise {\n        return await this.fornecedoresModel.find().exec()\n    }\n\n    async consultarFornecedorKey(_id: string): Promise {\n        const fornecedorCriado = await this.fornecedoresModel.findOne({_id}).exec()\n        if(!fornecedorCriado){\n            throw new BadRequestException(`Fornecedor com o _id ${_id} não encontrado`)\n        }\n        return await this.fornecedoresModel.findOne({_id}).exec()\n    }\n\n    async deletarFornecedor(_id: string): Promise {\n        const fornecedorCriado = await this.fornecedoresModel.findOne({_id}).exec()\n        if(!fornecedorCriado){\n            throw new BadRequestException(`Fornecedor com o _id ${_id} não encontrado`)\n        }\n        await this.fornecedoresModel.deleteOne({_id}).exec()\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from './constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return { id: payload.sub, email: payload.email };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common'\nimport { PassportStrategy } from '@nestjs/passport'\nimport { Strategy } from 'passport-local'\nimport { AuthService } from './auth.service'\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy){\n    constructor(private authService: AuthService){\n        super({\n            usernameField: 'email',\n            passwordField: 'password'\n        })\n    }\n\n    async validate(email: string, password: string): Promise {\n        const user = await this.authService.validadeUser(email, password)\n        if(!user){\n            throw new UnauthorizedException()\n        }\n        return user\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Origem.html":{"url":"interfaces/Origem.html","title":"interface - Origem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Origem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/origens/interfaces/origens.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        nome\n                                \n                                \n                                        status\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nome\n                                    \n                                \n                                \n                                    \n                                        nome:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Origem extends Document {\n    nome: string,\n    status: Number,\n    createdAt: Date,\n    updatedAt: Date\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrigensController.html":{"url":"controllers/OrigensController.html","title":"controller - OrigensController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrigensController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/origens/origens.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/origens\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarOrigem\n                            \n                            \n                                    Async\n                                consultarOrigem\n                            \n                            \n                                    Async\n                                consultarOrigemKey\n                            \n                            \n                                    Async\n                                criarOrigem\n                            \n                            \n                                    Async\n                                deletarOrigem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarOrigem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarOrigem(updateOrigemDto: UpdateOrigemDto, _id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/origens/origens.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateOrigemDto\n                                    \n                                                UpdateOrigemDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarOrigem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarOrigem()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/origens/origens.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarOrigemKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarOrigemKey(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/origens/origens.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarOrigem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarOrigem(createOrigemDto: CreateOrigemDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/origens/origens.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrigemDto\n                                    \n                                                CreateOrigemDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarOrigem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarOrigem(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/origens/origens.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Logger, Param, Delete, Put } from '@nestjs/common';\nimport { CreateOrigemDto } from './dtos/create-origens.dto';\nimport { UpdateOrigemDto } from './dtos/update-origens.dto'\nimport { OrigensService } from './origens.service';\nimport { Origem } from './interfaces/origens.interface';\n\n@Controller('v1/origens')\nexport class OrigensController {\n\n    private readonly logger = new Logger(OrigensController.name);\n\n    constructor(private readonly origensService: OrigensService) {}\n\n    @Post()\n    async criarOrigem(\n        @Body() createOrigemDto: CreateOrigemDto\n    ): Promise{\n        return await this.origensService.criarOrigem(createOrigemDto)\n    }\n\n    @Get()\n    async consultarOrigem(): Promise {\n        return await this.origensService.consultarTodosOrigem();\n    }\n\n    @Get('/:_id')\n    async consultarOrigemKey(@Param('_id') _id: string): Promise {\n        return await this.origensService.consultarOrigemKey(_id);\n    }\n\n    @Put('/:_id')\n    async atualizarOrigem(\n        @Body() updateOrigemDto: UpdateOrigemDto,\n        @Param('_id') _id: string\n    ): Promise { \n        this.logger.log(`updateOrigemDto: ${JSON.stringify(updateOrigemDto)}`);\n        await this.origensService.atualizarOrigem(_id,updateOrigemDto)\n    }\n\n    @Delete('/:_id')\n    async deletarOrigem(\n        @Param('_id') _id: string): Promise{\n        this.origensService.deletarOrigem(_id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrigensModule.html":{"url":"modules/OrigensModule.html","title":"module - OrigensModule","body":"\n                   \n\n\n\n\n    Modules\n    OrigensModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrigensModule\n\n\n\ncluster_OrigensModule_exports\n\n\n\ncluster_OrigensModule_providers\n\n\n\n\nOrigensService \n\nOrigensService \n\n\n\nOrigensModule\n\nOrigensModule\n\nOrigensService  -->\n\nOrigensModule->OrigensService \n\n\n\n\n\nOrigensService\n\nOrigensService\n\nOrigensModule -->\n\nOrigensService->OrigensModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/origens/origens.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrigensService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrigensController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrigensService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { OrigensController } from './origens.controller';\nimport { OrigensService } from './origens.service';\nimport { OrigemSchema } from './interfaces/origens.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'Origem', schema: OrigemSchema}])\n  ],\n  exports: [OrigensService],\n  controllers: [OrigensController],\n  providers: [OrigensService]\n})\nexport class OrigensModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrigensService.html":{"url":"injectables/OrigensService.html","title":"injectable - OrigensService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OrigensService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/origens/origens.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarOrigem\n                            \n                            \n                                    Async\n                                consultarOrigemKey\n                            \n                            \n                                    Async\n                                consultarTodosOrigem\n                            \n                            \n                                    Async\n                                criarOrigem\n                            \n                            \n                                    Async\n                                deletarOrigem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(origensModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/origens/origens.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        origensModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarOrigem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarOrigem(_id: string, updateOrigemDto: UpdateOrigemDto)\n                \n            \n\n\n            \n                \n                    Defined in src/origens/origens.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateOrigemDto\n                                    \n                                                UpdateOrigemDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarOrigemKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarOrigemKey(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/origens/origens.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTodosOrigem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTodosOrigem()\n                \n            \n\n\n            \n                \n                    Defined in src/origens/origens.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarOrigem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarOrigem(createOrigemDto: CreateOrigemDto)\n                \n            \n\n\n            \n                \n                    Defined in src/origens/origens.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrigemDto\n                                    \n                                                CreateOrigemDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarOrigem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarOrigem(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/origens/origens.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(OrigensService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/origens/origens.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common'\nimport { CreateOrigemDto } from './dtos/create-origens.dto'\nimport { UpdateOrigemDto } from './dtos/update-origens.dto'\nimport { Origem } from './interfaces/origens.interface'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class OrigensService {\n\n    constructor(\n        @InjectModel('Origem') private readonly origensModel: Model\n    ) {}\n\n    private readonly logger = new Logger(OrigensService.name);\n\n    async criarOrigem(createOrigemDto: CreateOrigemDto): Promise {\n        const origemCriado = new this.origensModel(createOrigemDto)\n        origemCriado.save( (error, doc) => {\n            console.log(doc)\n        })\n    }\n\n    async atualizarOrigem(_id: string, updateOrigemDto: UpdateOrigemDto): Promise {\n        const origemCriado = await this.origensModel.findOne({_id}).exec()\n        if(!origemCriado){\n            throw new BadRequestException(`Origem com o _id ${_id} não encontrado`)\n        }\n        return await this.origensModel.findOneAndUpdate({_id: _id},{$set: updateOrigemDto}).exec()\n    }\n\n    async consultarTodosOrigem(): Promise {\n        return await this.origensModel.find().exec()\n    }\n\n    async consultarOrigemKey(_id: string): Promise {\n        const origemCriado = await this.origensModel.findOne({_id}).exec()\n        if(!origemCriado){\n            throw new BadRequestException(`Origem com o _id ${_id} não encontrado`)\n        }\n        return await this.origensModel.findOne({_id}).exec()\n    }\n\n    async deletarOrigem(_id: string): Promise {\n        const origemCriado = await this.origensModel.findOne({_id}).exec()\n        if(!origemCriado){\n            throw new BadRequestException(`Origem com o _id ${_id} não encontrado`)\n        }\n        await this.origensModel.deleteOne({_id}).exec()\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Produto.html":{"url":"interfaces/Produto.html","title":"interface - Produto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Produto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtos/interfaces/produtos.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        categoria\n                                \n                                \n                                        createdAt\n                                \n                                \n                                        fornecedor\n                                \n                                \n                                        nome\n                                \n                                \n                                        status\n                                \n                                \n                                        tipo\n                                \n                                \n                                        updatedAt\n                                \n                                \n                                        valor\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categoria\n                                    \n                                \n                                \n                                    \n                                        categoria:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fornecedor\n                                    \n                                \n                                \n                                    \n                                        fornecedor:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nome\n                                    \n                                \n                                \n                                    \n                                        nome:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                    \n                                \n                                \n                                    \n                                        tipo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        valor\n                                    \n                                \n                                \n                                    \n                                        valor:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Produto extends Document {\n    nome: string,\n    valor: Number\n    tipo: string,\n    categoria: string,\n    status: string,\n    fornecedor: string,\n    createdAt: Date,\n    updatedAt: Date\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProdutosController.html":{"url":"controllers/ProdutosController.html","title":"controller - ProdutosController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProdutosController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtos/produtos.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/produtos\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarProduto\n                            \n                            \n                                    Async\n                                consultarProduto\n                            \n                            \n                                    Async\n                                consultarProdutoKey\n                            \n                            \n                                    Async\n                                criarProduto\n                            \n                            \n                                    Async\n                                deletarProduto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarProduto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarProduto(updateProdutoDto: UpdateProdutoDto, _id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/produtos/produtos.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateProdutoDto\n                                    \n                                                UpdateProdutoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarProduto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarProduto()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/produtos/produtos.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarProdutoKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarProdutoKey(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/produtos/produtos.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarProduto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarProduto(createProdutoDto: CreateProdutoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/produtos/produtos.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProdutoDto\n                                    \n                                                CreateProdutoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarProduto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarProduto(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/produtos/produtos.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Logger, Param, Delete, Put } from '@nestjs/common';\nimport { CreateProdutoDto } from './dtos/create-produtos.dto';\nimport { UpdateProdutoDto } from './dtos/update-produtos.dto'\nimport { ProdutosService } from './produtos.service';\nimport { Produto } from './interfaces/produtos.interface';\n\n@Controller('v1/produtos')\nexport class ProdutosController {\n\n    private readonly logger = new Logger(ProdutosController.name);\n\n    constructor(private readonly produtosService: ProdutosService) {}\n\n    @Post()\n    async criarProduto(\n        @Body() createProdutoDto: CreateProdutoDto\n    ): Promise{\n        return await this.produtosService.criarProduto(createProdutoDto)\n    }\n\n    @Get()\n    async consultarProduto(): Promise {\n        return await this.produtosService.consultarTodosProduto();\n    }\n\n    @Get('/:_id')\n    async consultarProdutoKey(@Param('_id') _id: string): Promise {\n        return await this.produtosService.consultarProdutoKey(_id);\n    }\n\n    @Put('/:_id')\n    async atualizarProduto(\n        @Body() updateProdutoDto: UpdateProdutoDto,\n        @Param('_id') _id: string\n    ): Promise { \n        this.logger.log(`updateProdutoDto: ${JSON.stringify(updateProdutoDto)}`);\n        await this.produtosService.atualizarProduto(_id,updateProdutoDto)\n    }\n\n    @Delete('/:_id')\n    async deletarProduto(\n        @Param('_id') _id: string): Promise{\n        this.produtosService.deletarProduto(_id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProdutosModule.html":{"url":"modules/ProdutosModule.html","title":"module - ProdutosModule","body":"\n                   \n\n\n\n\n    Modules\n    ProdutosModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProdutosModule\n\n\n\ncluster_ProdutosModule_exports\n\n\n\ncluster_ProdutosModule_providers\n\n\n\n\nProdutosService \n\nProdutosService \n\n\n\nProdutosModule\n\nProdutosModule\n\nProdutosService  -->\n\nProdutosModule->ProdutosService \n\n\n\n\n\nProdutosService\n\nProdutosService\n\nProdutosModule -->\n\nProdutosService->ProdutosModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/produtos/produtos.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProdutosService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProdutosController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProdutosService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ProdutosController } from './produtos.controller';\nimport { ProdutosService } from './produtos.service';\nimport { ProdutoSchema } from './interfaces/produtos.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'Produto', schema: ProdutoSchema}])\n  ],\n  exports: [ProdutosService],\n  controllers: [ProdutosController],\n  providers: [ProdutosService]\n})\nexport class ProdutosModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProdutosService.html":{"url":"injectables/ProdutosService.html","title":"injectable - ProdutosService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProdutosService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtos/produtos.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarProduto\n                            \n                            \n                                    Async\n                                consultarProdutoKey\n                            \n                            \n                                    Async\n                                consultarTodosProduto\n                            \n                            \n                                    Async\n                                criarProduto\n                            \n                            \n                                    Async\n                                deletarProduto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(produtosModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/produtos/produtos.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        produtosModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarProduto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarProduto(_id: string, updateProdutoDto: UpdateProdutoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/produtos/produtos.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProdutoDto\n                                    \n                                                UpdateProdutoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarProdutoKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarProdutoKey(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/produtos/produtos.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTodosProduto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTodosProduto()\n                \n            \n\n\n            \n                \n                    Defined in src/produtos/produtos.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarProduto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarProduto(createProdutoDto: CreateProdutoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/produtos/produtos.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProdutoDto\n                                    \n                                                CreateProdutoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarProduto\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarProduto(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/produtos/produtos.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(ProdutosService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/produtos/produtos.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common'\nimport { CreateProdutoDto } from './dtos/create-produtos.dto'\nimport { UpdateProdutoDto } from './dtos/update-produtos.dto'\nimport { Produto } from './interfaces/produtos.interface'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class ProdutosService {\n\n    constructor(\n        @InjectModel('Produto') private readonly produtosModel: Model\n    ) {}\n\n    private readonly logger = new Logger(ProdutosService.name);\n\n    async criarProduto(createProdutoDto: CreateProdutoDto): Promise {\n        const produtoCriado = new this.produtosModel(createProdutoDto)\n        produtoCriado.save( (error, doc) => {\n            console.log(doc)\n        })\n    }\n\n    async atualizarProduto(_id: string, updateProdutoDto: UpdateProdutoDto): Promise {\n        const produtoCriado = await this.produtosModel.findOne({_id}).exec()\n        if(!produtoCriado){\n            throw new BadRequestException(`Produto com o _id ${_id} não encontrado`)\n        }\n        return await this.produtosModel.findOneAndUpdate({_id: _id},{$set: updateProdutoDto}).exec()\n    }\n\n    async consultarTodosProduto(): Promise {\n        return await this.produtosModel.find().exec()\n    }\n\n    async consultarProdutoKey(_id: string): Promise {\n        const produtoCriado = await this.produtosModel.findOne({_id}).exec()\n        if(!produtoCriado){\n            throw new BadRequestException(`Produto com o _id ${_id} não encontrado`)\n        }\n        return await this.produtosModel.findOne({_id}).exec()\n    }\n\n    async deletarProduto(_id: string): Promise {\n        const produtoCriado = await this.produtosModel.findOne({_id}).exec()\n        if(!produtoCriado){\n            throw new BadRequestException(`Produto com o _id ${_id} não encontrado`)\n        }\n        await this.produtosModel.deleteOne({_id}).exec()\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Profissao.html":{"url":"interfaces/Profissao.html","title":"interface - Profissao","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Profissao\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profissoes/interfaces/profissoes.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        nome\n                                \n                                \n                                        status\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nome\n                                    \n                                \n                                \n                                    \n                                        nome:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Profissao extends Document {\n    nome: string,\n    status: string,\n    createdAt: Date,\n    updatedAt: Date\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfissoesController.html":{"url":"controllers/ProfissoesController.html","title":"controller - ProfissoesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfissoesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profissoes/profissoes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/profissoes\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarProfissao\n                            \n                            \n                                    Async\n                                consultarProfissao\n                            \n                            \n                                    Async\n                                consultarProfissaoKey\n                            \n                            \n                                    Async\n                                criarProfissao\n                            \n                            \n                                    Async\n                                deletarProfissao\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarProfissao\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarProfissao(updateProfissaoDto: UpdateProfissaoDto, _id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/profissoes/profissoes.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateProfissaoDto\n                                    \n                                                UpdateProfissaoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarProfissao\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarProfissao()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/profissoes/profissoes.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarProfissaoKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarProfissaoKey(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/profissoes/profissoes.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarProfissao\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarProfissao(createProfissaoDto: CreateProfissaoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/profissoes/profissoes.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProfissaoDto\n                                    \n                                                CreateProfissaoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarProfissao\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarProfissao(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/profissoes/profissoes.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Logger, Param, Delete, Put } from '@nestjs/common';\nimport { CreateProfissaoDto } from './dtos/create-profissoes.dto';\nimport { UpdateProfissaoDto } from './dtos/update-profissoes.dto'\nimport { ProfissoesService } from './profissoes.service';\nimport { Profissao } from './interfaces/profissoes.interface';\n\n@Controller('v1/profissoes')\nexport class ProfissoesController {\n\n    private readonly logger = new Logger(ProfissoesController.name);\n\n    constructor(private readonly profissoesService: ProfissoesService) {}\n\n    @Post()\n    async criarProfissao(\n        @Body() createProfissaoDto: CreateProfissaoDto\n    ): Promise{\n        return await this.profissoesService.criarProfissao(createProfissaoDto)\n    }\n\n    @Get()\n    async consultarProfissao(): Promise {\n        return await this.profissoesService.consultarTodosProfissao();\n    }\n\n    @Get('/:_id')\n    async consultarProfissaoKey(@Param('_id') _id: string): Promise {\n        return await this.profissoesService.consultarProfissaoKey(_id);\n    }\n\n    @Put('/:_id')\n    async atualizarProfissao(\n        @Body() updateProfissaoDto: UpdateProfissaoDto,\n        @Param('_id') _id: string\n    ): Promise { \n        this.logger.log(`updateProfissaoDto: ${JSON.stringify(updateProfissaoDto)}`);\n        await this.profissoesService.atualizarProfissao(_id,updateProfissaoDto)\n    }\n\n    @Delete('/:_id')\n    async deletarProfissao(\n        @Param('_id') _id: string): Promise{\n        this.profissoesService.deletarProfissao(_id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfissoesModule.html":{"url":"modules/ProfissoesModule.html","title":"module - ProfissoesModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfissoesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfissoesModule\n\n\n\ncluster_ProfissoesModule_exports\n\n\n\ncluster_ProfissoesModule_providers\n\n\n\n\nProfissoesService \n\nProfissoesService \n\n\n\nProfissoesModule\n\nProfissoesModule\n\nProfissoesService  -->\n\nProfissoesModule->ProfissoesService \n\n\n\n\n\nProfissoesService\n\nProfissoesService\n\nProfissoesModule -->\n\nProfissoesService->ProfissoesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/profissoes/profissoes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfissoesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfissoesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProfissoesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ProfissoesController } from './profissoes.controller';\nimport { ProfissoesService } from './profissoes.service';\nimport { ProfissaoSchema } from './interfaces/profissoes.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'Profissao', schema: ProfissaoSchema}])\n  ],\n  exports: [ProfissoesService],\n  controllers: [ProfissoesController],\n  providers: [ProfissoesService]\n})\nexport class ProfissoesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfissoesService.html":{"url":"injectables/ProfissoesService.html","title":"injectable - ProfissoesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfissoesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profissoes/profissoes.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarProfissao\n                            \n                            \n                                    Async\n                                consultarProfissaoKey\n                            \n                            \n                                    Async\n                                consultarTodosProfissao\n                            \n                            \n                                    Async\n                                criarProfissao\n                            \n                            \n                                    Async\n                                deletarProfissao\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profissoesModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/profissoes/profissoes.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profissoesModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarProfissao\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarProfissao(_id: string, updateProfissaoDto: UpdateProfissaoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/profissoes/profissoes.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateProfissaoDto\n                                    \n                                                UpdateProfissaoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarProfissaoKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarProfissaoKey(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profissoes/profissoes.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTodosProfissao\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTodosProfissao()\n                \n            \n\n\n            \n                \n                    Defined in src/profissoes/profissoes.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarProfissao\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarProfissao(createProfissaoDto: CreateProfissaoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/profissoes/profissoes.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProfissaoDto\n                                    \n                                                CreateProfissaoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarProfissao\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarProfissao(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/profissoes/profissoes.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(ProfissoesService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/profissoes/profissoes.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common'\nimport { CreateProfissaoDto } from './dtos/create-profissoes.dto'\nimport { UpdateProfissaoDto } from './dtos/update-profissoes.dto'\nimport { Profissao } from './interfaces/profissoes.interface'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class ProfissoesService {\n\n    constructor(\n        @InjectModel('Profissao') private readonly profissoesModel: Model\n    ) {}\n\n    private readonly logger = new Logger(ProfissoesService.name);\n\n    async criarProfissao(createProfissaoDto: CreateProfissaoDto): Promise {\n        const origemCriado = new this.profissoesModel(createProfissaoDto)\n        origemCriado.save( (error, doc) => {\n            console.log(doc)\n        })\n    }\n\n    async atualizarProfissao(_id: string, updateProfissaoDto: UpdateProfissaoDto): Promise {\n        const origemCriado = await this.profissoesModel.findOne({_id}).exec()\n        if(!origemCriado){\n            throw new BadRequestException(`Profissao com o _id ${_id} não encontrado`)\n        }\n        return await this.profissoesModel.findOneAndUpdate({_id: _id},{$set: updateProfissaoDto}).exec()\n    }\n\n    async consultarTodosProfissao(): Promise {\n        return await this.profissoesModel.find().exec()\n    }\n\n    async consultarProfissaoKey(_id: string): Promise {\n        const origemCriado = await this.profissoesModel.findOne({_id}).exec()\n        if(!origemCriado){\n            throw new BadRequestException(`Profissao com o _id ${_id} não encontrado`)\n        }\n        return await this.profissoesModel.findOne({_id}).exec()\n    }\n\n    async deletarProfissao(_id: string): Promise {\n        const origemCriado = await this.profissoesModel.findOne({_id}).exec()\n        if(!origemCriado){\n            throw new BadRequestException(`Profissao com o _id ${_id} não encontrado`)\n        }\n        await this.profissoesModel.deleteOne({_id}).exec()\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Status.html":{"url":"interfaces/Status.html","title":"interface - Status","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Status\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/status/interfaces/status.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        nome\n                                \n                                \n                                        tipo\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nome\n                                    \n                                \n                                \n                                    \n                                        nome:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                    \n                                \n                                \n                                    \n                                        tipo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Status extends Document {\n    nome: string,\n    tipo: string,\n    createdAt: Date,\n    updatedAt: Date\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/StatusController.html":{"url":"controllers/StatusController.html","title":"controller - StatusController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  StatusController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/status/status.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/status\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarStatus\n                            \n                            \n                                    Async\n                                consultarStatus\n                            \n                            \n                                    Async\n                                consultarStatusKey\n                            \n                            \n                                    Async\n                                criarStatus\n                            \n                            \n                                    Async\n                                deletarStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarStatus(updateStatusDto: UpdateStatusDto, _id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/status/status.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateStatusDto\n                                    \n                                                UpdateStatusDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarStatus()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/status/status.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarStatusKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarStatusKey(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/status/status.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarStatus(createStatusDto: CreateStatusDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/status/status.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createStatusDto\n                                    \n                                                CreateStatusDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarStatus(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/status/status.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Logger, Param, Delete, Put } from '@nestjs/common';\nimport { CreateStatusDto } from './dtos/create-status.dto';\nimport { UpdateStatusDto } from './dtos/update-status.dto'\nimport { StatusService } from './status.service';\nimport { Status } from './interfaces/status.interface';\n\n@Controller('v1/status')\nexport class StatusController {\n\n    private readonly logger = new Logger(StatusController.name);\n\n    constructor(private readonly statusService: StatusService) {}\n\n    @Post()\n    async criarStatus(\n        @Body() createStatusDto: CreateStatusDto\n    ): Promise{\n        return await this.statusService.criarStatus(createStatusDto)\n    }\n\n    @Get()\n    async consultarStatus(): Promise {\n        return await this.statusService.consultarTodosStatus();\n    }\n\n    @Get('/:_id')\n    async consultarStatusKey(@Param('_id') _id: string): Promise {\n        return await this.statusService.consultarStatusKey(_id);\n    }\n\n    @Put('/:_id')\n    async atualizarStatus(\n        @Body() updateStatusDto: UpdateStatusDto,\n        @Param('_id') _id: string\n    ): Promise { \n        this.logger.log(`updateStatusDto: ${JSON.stringify(updateStatusDto)}`);\n        await this.statusService.atualizarStatus(_id,updateStatusDto)\n    }\n\n    @Delete('/:_id')\n    async deletarStatus(\n        @Param('_id') _id: string): Promise{\n        this.statusService.deletarStatus(_id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatusModule.html":{"url":"modules/StatusModule.html","title":"module - StatusModule","body":"\n                   \n\n\n\n\n    Modules\n    StatusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_StatusModule\n\n\n\ncluster_StatusModule_exports\n\n\n\ncluster_StatusModule_providers\n\n\n\n\nStatusService \n\nStatusService \n\n\n\nStatusModule\n\nStatusModule\n\nStatusService  -->\n\nStatusModule->StatusService \n\n\n\n\n\nStatusService\n\nStatusService\n\nStatusModule -->\n\nStatusService->StatusModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/status/status.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            StatusService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            StatusController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatusService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { StatusController } from './status.controller';\nimport { StatusService } from './status.service';\nimport { StatusSchema } from './interfaces/status.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'Status', schema: StatusSchema}])\n  ],\n  exports: [StatusService],\n  controllers: [StatusController],\n  providers: [StatusService]\n})\nexport class StatusModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StatusService.html":{"url":"injectables/StatusService.html","title":"injectable - StatusService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  StatusService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/status/status.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarStatus\n                            \n                            \n                                    Async\n                                consultarStatusKey\n                            \n                            \n                                    Async\n                                consultarTodosStatus\n                            \n                            \n                                    Async\n                                criarStatus\n                            \n                            \n                                    Async\n                                deletarStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(statusModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/status/status.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        statusModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarStatus(_id: string, updateStatusDto: UpdateStatusDto)\n                \n            \n\n\n            \n                \n                    Defined in src/status/status.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateStatusDto\n                                    \n                                                UpdateStatusDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarStatusKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarStatusKey(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/status/status.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTodosStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTodosStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/status/status.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarStatus(createStatusDto: CreateStatusDto)\n                \n            \n\n\n            \n                \n                    Defined in src/status/status.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createStatusDto\n                                    \n                                                CreateStatusDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarStatus(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/status/status.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(StatusService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/status/status.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common'\nimport { CreateStatusDto } from './dtos/create-status.dto'\nimport { UpdateStatusDto } from './dtos/update-status.dto'\nimport { Status } from './interfaces/status.interface'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class StatusService {\n\n    constructor(\n        @InjectModel('Status') private readonly statusModel: Model\n    ) {}\n\n    private readonly logger = new Logger(StatusService.name);\n\n    async criarStatus(createStatusDto: CreateStatusDto): Promise {\n        const vinculoCriado = new this.statusModel(createStatusDto)\n        vinculoCriado.save( (error, doc) => {\n            console.log(doc)\n        })\n    }\n\n    async atualizarStatus(_id: string, updateStatusDto: UpdateStatusDto): Promise {\n        const statusEncontrado = await this.statusModel.findOne({_id}).exec()\n        if(!statusEncontrado){\n            throw new BadRequestException(`Status com o _id ${_id} não encontrado`)\n        }\n        return await this.statusModel.findOneAndUpdate({_id: _id},{$set: updateStatusDto}).exec()\n    }\n\n    async consultarTodosStatus(): Promise {\n        return await this.statusModel.find().exec()\n    }\n\n    async consultarStatusKey(_id: string): Promise {\n        const statusEncontrado = await this.statusModel.findOne({_id}).exec()\n        if(!statusEncontrado){\n            throw new BadRequestException(`Status com o _id ${_id} não encontrado`)\n        }\n        return await this.statusModel.findOne({_id}).exec()\n    }\n\n    async deletarStatus(_id: string): Promise {\n        const statusEncontrado = await this.statusModel.findOne({_id}).exec()\n        if(!statusEncontrado){\n            throw new BadRequestException(`Status com o _id ${_id} não encontrado`)\n        }\n        await this.statusModel.deleteOne({_id}).exec()\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tipo.html":{"url":"interfaces/Tipo.html","title":"interface - Tipo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tipo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tipos/interfaces/tipos.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        nome\n                                \n                                \n                                        tipo\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nome\n                                    \n                                \n                                \n                                    \n                                        nome:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                    \n                                \n                                \n                                    \n                                        tipo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface Tipo extends Document {\n    nome: string,\n    tipo: string,\n    createdAt: Date,\n    updatedAt: Date\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TiposController.html":{"url":"controllers/TiposController.html","title":"controller - TiposController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TiposController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tipos/tipos.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/tipos\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarTipo\n                            \n                            \n                                    Async\n                                consultarTipo\n                            \n                            \n                                    Async\n                                consultarTipoKey\n                            \n                            \n                                    Async\n                                criarTipo\n                            \n                            \n                                    Async\n                                deletarTipo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarTipo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarTipo(updateTipoDto: UpdateTipoDto, _id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/tipos/tipos.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateTipoDto\n                                    \n                                                UpdateTipoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTipo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTipo()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/tipos/tipos.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTipoKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTipoKey(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/tipos/tipos.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarTipo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarTipo(createTipoDto: CreateTipoDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/tipos/tipos.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTipoDto\n                                    \n                                                CreateTipoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarTipo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarTipo(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/tipos/tipos.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Logger, Param, Delete, Put } from '@nestjs/common';\nimport { CreateTipoDto } from './dtos/create-tipos.dto';\nimport { UpdateTipoDto } from './dtos/update-tipos.dto'\nimport { TiposService } from './tipos.service';\nimport { Tipo } from './interfaces/tipos.interface';\n\n@Controller('v1/tipos')\nexport class TiposController {\n\n    private readonly logger = new Logger(TiposController.name);\n\n    constructor(private readonly tiposService: TiposService) {}\n\n    @Post()\n    async criarTipo(\n        @Body() createTipoDto: CreateTipoDto\n    ): Promise{\n        return await this.tiposService.criarTipo(createTipoDto)\n    }\n\n    @Get()\n    async consultarTipo(): Promise {\n        return await this.tiposService.consultarTodosTipo();\n    }\n\n    @Get('/:_id')\n    async consultarTipoKey(@Param('_id') _id: string): Promise {\n        return await this.tiposService.consultarTipoKey(_id);\n    }\n\n    @Put('/:_id')\n    async atualizarTipo(\n        @Body() updateTipoDto: UpdateTipoDto,\n        @Param('_id') _id: string\n    ): Promise { \n        this.logger.log(`updateTipoDto: ${JSON.stringify(updateTipoDto)}`);\n        await this.tiposService.atualizarTipo(_id,updateTipoDto)\n    }\n\n    @Delete('/:_id')\n    async deletarTipo(\n        @Param('_id') _id: string): Promise{\n        this.tiposService.deletarTipo(_id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TiposModule.html":{"url":"modules/TiposModule.html","title":"module - TiposModule","body":"\n                   \n\n\n\n\n    Modules\n    TiposModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TiposModule\n\n\n\ncluster_TiposModule_exports\n\n\n\ncluster_TiposModule_providers\n\n\n\n\nTiposService \n\nTiposService \n\n\n\nTiposModule\n\nTiposModule\n\nTiposService  -->\n\nTiposModule->TiposService \n\n\n\n\n\nTiposService\n\nTiposService\n\nTiposModule -->\n\nTiposService->TiposModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tipos/tipos.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TiposService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TiposController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TiposService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { TiposController } from './tipos.controller';\nimport { TiposService } from './tipos.service';\nimport { TipoSchema } from './interfaces/tipos.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'Tipo', schema: TipoSchema}])\n  ],\n  exports: [TiposService],\n  controllers: [TiposController],\n  providers: [TiposService]\n})\nexport class TiposModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TiposService.html":{"url":"injectables/TiposService.html","title":"injectable - TiposService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TiposService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tipos/tipos.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarTipo\n                            \n                            \n                                    Async\n                                consultarTipoKey\n                            \n                            \n                                    Async\n                                consultarTodosTipo\n                            \n                            \n                                    Async\n                                criarTipo\n                            \n                            \n                                    Async\n                                deletarTipo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tiposModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/tipos/tipos.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tiposModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarTipo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarTipo(_id: string, updateTipoDto: UpdateTipoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tipos/tipos.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTipoDto\n                                    \n                                                UpdateTipoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTipoKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTipoKey(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tipos/tipos.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTodosTipo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTodosTipo()\n                \n            \n\n\n            \n                \n                    Defined in src/tipos/tipos.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarTipo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarTipo(createTipoDto: CreateTipoDto)\n                \n            \n\n\n            \n                \n                    Defined in src/tipos/tipos.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTipoDto\n                                    \n                                                CreateTipoDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarTipo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarTipo(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/tipos/tipos.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(TiposService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/tipos/tipos.service.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common'\nimport { CreateTipoDto } from './dtos/create-tipos.dto'\nimport { UpdateTipoDto } from './dtos/update-tipos.dto'\nimport { Tipo } from './interfaces/tipos.interface'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\n\n@Injectable()\nexport class TiposService {\n\n    constructor(\n        @InjectModel('Tipo') private readonly tiposModel: Model\n    ) {}\n\n    private readonly logger = new Logger(TiposService.name);\n\n    async criarTipo(createTipoDto: CreateTipoDto): Promise {\n        const tipoCriado = new this.tiposModel(createTipoDto)\n        tipoCriado.save( (error, doc) => {\n            console.log(doc)\n        })\n    }\n\n    async atualizarTipo(_id: string, updateTipoDto: UpdateTipoDto): Promise {\n        const tipoCriado = await this.tiposModel.findOne({_id}).exec()\n        if(!tipoCriado){\n            throw new BadRequestException(`Tipo com o _id ${_id} não encontrado`)\n        }\n        return await this.tiposModel.findOneAndUpdate({_id: _id},{$set: updateTipoDto}).exec()\n    }\n\n    async consultarTodosTipo(): Promise {\n        return await this.tiposModel.find().exec()\n    }\n\n    async consultarTipoKey(_id: string): Promise {\n        const tipoCriado = await this.tiposModel.findOne({_id}).exec()\n        if(!tipoCriado){\n            throw new BadRequestException(`Tipo com o _id ${_id} não encontrado`)\n        }\n        return await this.tiposModel.findOne({_id}).exec()\n    }\n\n    async deletarTipo(_id: string): Promise {\n        const tipoCriado = await this.tiposModel.findOne({_id}).exec()\n        if(!tipoCriado){\n            throw new BadRequestException(`Tipo com o _id ${_id} não encontrado`)\n        }\n        await this.tiposModel.deleteOne({_id}).exec()\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoriaDto.html":{"url":"classes/UpdateCategoriaDto.html","title":"class - UpdateCategoriaDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoriaDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categorias/dtos/update-categorias.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nome\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categorias/dtos/update-categorias.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categorias/dtos/update-categorias.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/categorias/dtos/update-categorias.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateCategoriaDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    status: string\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCidadeDto.html":{"url":"classes/UpdateCidadeDto.html","title":"class - UpdateCidadeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCidadeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cidades/dtos/update-cidades.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                estado\n                            \n                            \n                                nome\n                            \n                            \n                                uf\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            estado\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/dtos/update-cidades.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/dtos/update-cidades.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/dtos/update-cidades.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/cidades/dtos/update-cidades.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateCidadeDto {\n    @ApiProperty()\n    uf: string\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    estado: string\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateClienteDto.html":{"url":"classes/UpdateClienteDto.html","title":"class - UpdateClienteDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateClienteDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/clientes/dtos/update-clientes.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cnpj\n                            \n                            \n                                cpf\n                            \n                            \n                                data_nascimento\n                            \n                            \n                                inscricao\n                            \n                            \n                                master_id\n                            \n                            \n                                nome\n                            \n                            \n                                profissao\n                            \n                            \n                                rg\n                            \n                            \n                                sexo\n                            \n                            \n                                tipo_cliente\n                            \n                            \n                                tipo_pessoa\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cnpj\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/update-clientes.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cpf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/update-clientes.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            data_nascimento\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/update-clientes.dto.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inscricao\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/update-clientes.dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            master_id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/update-clientes.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/update-clientes.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            profissao\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/update-clientes.dto.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/update-clientes.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sexo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/update-clientes.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tipo_cliente\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/update-clientes.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tipo_pessoa\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/update-clientes.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/clientes/dtos/update-clientes.dto.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateClienteDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    sexo: string\n    @ApiProperty()\n    tipo_pessoa: number //fisica ou juridica\n    @ApiProperty()\n    tipo_cliente: string //master ou dependente\n    @ApiProperty()\n    master_id: string\n    @ApiProperty()\n    rg: number\n    @ApiProperty()\n    cpf: number\n    @ApiProperty()\n    cnpj: number\n    @ApiProperty()\n    inscricao: number\n    @ApiProperty()\n    data_nascimento: Date\n    @ApiProperty()\n    profissao: string\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEstadoDto.html":{"url":"classes/UpdateEstadoDto.html","title":"class - UpdateEstadoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEstadoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/estados/dtos/update-estados.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nome\n                            \n                            \n                                uf\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/estados/dtos/update-estados.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uf\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/estados/dtos/update-estados.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/estados/dtos/update-estados.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateEstadoDto {\n    @ApiProperty()\n    uf: string\n    @ApiProperty()\n    nome: string\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFornecedorDto.html":{"url":"classes/UpdateFornecedorDto.html","title":"class - UpdateFornecedorDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFornecedorDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/fornecedores/dtos/update-fornecedores.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nome\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/fornecedores/dtos/update-fornecedores.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/fornecedores/dtos/update-fornecedores.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/fornecedores/dtos/update-fornecedores.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateFornecedorDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    status: string\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateOrigemDto.html":{"url":"classes/UpdateOrigemDto.html","title":"class - UpdateOrigemDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateOrigemDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/origens/dtos/update-origens.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nome\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/origens/dtos/update-origens.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/origens/dtos/update-origens.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/origens/dtos/update-origens.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateOrigemDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    status: Number\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProdutoDto.html":{"url":"classes/UpdateProdutoDto.html","title":"class - UpdateProdutoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProdutoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/produtos/dtos/update-produtos.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoria\n                            \n                            \n                                fornecedor\n                            \n                            \n                                nome\n                            \n                            \n                                status\n                            \n                            \n                                tipo\n                            \n                            \n                                updatedAt\n                            \n                            \n                                valor\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoria\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/produtos/dtos/update-produtos.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fornecedor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/produtos/dtos/update-produtos.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/produtos/dtos/update-produtos.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/produtos/dtos/update-produtos.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tipo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/produtos/dtos/update-produtos.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/produtos/dtos/update-produtos.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            valor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/produtos/dtos/update-produtos.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateProdutoDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    valor: Number\n    @ApiProperty()\n    tipo: string\n    @ApiProperty()\n    categoria: string\n    @ApiProperty()\n    status: string\n    @ApiProperty()\n    fornecedor: string\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProfissaoDto.html":{"url":"classes/UpdateProfissaoDto.html","title":"class - UpdateProfissaoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProfissaoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/profissoes/dtos/update-profissoes.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nome\n                            \n                            \n                                status\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profissoes/dtos/update-profissoes.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/profissoes/dtos/update-profissoes.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/profissoes/dtos/update-profissoes.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateProfissaoDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    status: string\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateStatusDto.html":{"url":"classes/UpdateStatusDto.html","title":"class - UpdateStatusDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateStatusDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/status/dtos/update-status.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nome\n                            \n                            \n                                tipo\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/status/dtos/update-status.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tipo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/status/dtos/update-status.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/status/dtos/update-status.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateStatusDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    tipo: string\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTipoDto.html":{"url":"classes/UpdateTipoDto.html","title":"class - UpdateTipoDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTipoDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tipos/dtos/update-tipos.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                nome\n                            \n                            \n                                tipo\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tipos/dtos/update-tipos.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tipo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/tipos/dtos/update-tipos.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/tipos/dtos/update-tipos.dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateTipoDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    tipo: string\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/update-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                nome\n                            \n                            \n                                password\n                            \n                            \n                                status\n                            \n                            \n                                tipo\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/update-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nome\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/update-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/update-user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/update-user.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tipo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/update-user.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dtos/update-user.dto.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateUserDto {\n    @ApiProperty()\n    nome: string\n    @ApiProperty()\n    email: string\n    @ApiProperty()\n    password: string\n    @ApiProperty()\n    tipo: string\n    @ApiProperty()\n    status: string\n    updatedAt: Date\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/interfaces/user.interface.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createdAt\n                                \n                                \n                                        email\n                                \n                                \n                                        nome\n                                \n                                \n                                        password\n                                \n                                \n                                        status\n                                \n                                \n                                        tipo\n                                \n                                \n                                        updatedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nome\n                                    \n                                \n                                \n                                    \n                                        nome:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tipo\n                                    \n                                \n                                \n                                    \n                                        tipo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport interface User extends Document {\n    nome: string,\n    email: string,\n    password: string,\n    tipo: string,\n    status: string\n    createdAt: Date,\n    updatedAt: Date,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                v1/users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarUser\n                            \n                            \n                                    Async\n                                consultarUsers\n                            \n                            \n                                    Async\n                                consultarUsersKey\n                            \n                            \n                                    Async\n                                criarUser\n                            \n                            \n                                    Async\n                                deletarUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarUser(updateUserDto: UpdateUserDto, _id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarUsersKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarUsersKey(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarUser(_id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:_id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, UseGuards, Logger, Param, Delete, Put } from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { UpdateUserDto } from './dtos/update-user.dto'\nimport { UsersService } from './users.service';\nimport { User } from './interfaces/user.interface';\nimport { JwtAuthGuard } from 'src/auth/jwt-auth.guard';\n\n@Controller('v1/users')\nexport class UsersController {\n\n    private readonly logger = new Logger(UsersController.name);\n\n    constructor(private readonly usuariosService: UsersService) {}\n\n    //@UseGuards(JwtAuthGuard)\n    @Post()\n    async criarUser(\n        @Body() createUserDto: CreateUserDto\n    ): Promise{\n        return await this.usuariosService.criarUser(createUserDto)\n    }\n\n    @UseGuards(JwtAuthGuard)\n    @Get()\n    async consultarUsers(): Promise {\n        return await this.usuariosService.consultarTodosUsers();\n    }\n\n    @Get('/:_id')\n    async consultarUsersKey(@Param('_id') _id: string): Promise {\n        return await this.usuariosService.consultarUsersKey(_id);\n    }\n\n    @Put('/:_id')\n    async atualizarUser(\n        @Body() updateUserDto: UpdateUserDto,\n        @Param('_id') _id: string\n    ): Promise { \n        this.logger.log(`updateUserDto: ${JSON.stringify(updateUserDto)}`);\n        await this.usuariosService.atualizarUser(_id,updateUserDto)\n    }\n\n    @Delete('/:_id')\n    async deletarUser(\n        @Param('_id') _id: string): Promise{\n        this.usuariosService.deletarUser(_id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PassportModule } from '@nestjs/passport';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { UserSchema } from './interfaces/user.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{name: 'User', schema: UserSchema}]),\n    PassportModule.register({ defaultStrategy: 'jwt', session: false })\n  ],\n  exports: [UsersService],\n  controllers: [UsersController],\n  providers: [UsersService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                atualizarUser\n                            \n                            \n                                    Async\n                                bcrypt\n                            \n                            \n                                    Async\n                                consultarTodosUsers\n                            \n                            \n                                    Async\n                                consultarUsersKey\n                            \n                            \n                                    Async\n                                consutarUserEmail\n                            \n                            \n                                    Async\n                                criarUser\n                            \n                            \n                                    Async\n                                deletarUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            atualizarUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    atualizarUser(_id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            bcrypt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    bcrypt(password)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarTodosUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarTodosUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consultarUsersKey\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consultarUsersKey(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            consutarUserEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    consutarUserEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            criarUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    criarUser(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletarUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletarUser(_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Logger(UsersService.name)\n                        \n                    \n                        \n                            \n                                    Defined in src/users/users.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, Logger } from '@nestjs/common'\nimport { CreateUserDto } from './dtos/create-user.dto'\nimport { UpdateUserDto } from './dtos/update-user.dto'\nimport { User } from './interfaces/user.interface'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\nimport * as bcrypt from 'bcrypt'\nimport { environment } from '../common/environment'\n\n@Injectable()\nexport class UsersService {\n\n    constructor(\n        @InjectModel('User') private readonly userModel: Model\n    ) {}\n\n    private readonly logger = new Logger(UsersService.name);\n\n    async criarUser(createUserDto: CreateUserDto): Promise {\n        const hash = await bcrypt.hash(createUserDto.password, environment.security.saltRounds)\n        createUserDto.password = hash\n        const userCriado = new this.userModel(createUserDto)\n        userCriado.save( (error, doc) => {\n            console.log(doc)\n        })\n    }\n\n    async atualizarUser(_id: string, updateUserDto: UpdateUserDto): Promise {\n        const userEncontrado = await this.userModel.findOne({_id}).exec()\n        if(!userEncontrado){\n            throw new BadRequestException(`Usuario com o _id ${_id} não encontrado`)\n        }\n\n        const isMatch = await bcrypt.compare(updateUserDto.password, userEncontrado.password)\n\n        if(isMatch === false){\n            const hash = await bcrypt.hash(updateUserDto.password, environment.security.saltRounds)\n            updateUserDto.password = hash\n        }\n\n        return await this.userModel.findOneAndUpdate({_id: _id},{$set: updateUserDto}).exec()\n    }\n\n    async consultarTodosUsers(): Promise {\n        return await this.userModel.find().exec()\n    }\n\n    async consultarUsersKey(_id: string): Promise {\n        const vinculoEncontrado = await this.userModel.findOne({_id}).exec()\n        if(!vinculoEncontrado){\n            throw new BadRequestException(`Usuario com o _id ${_id} não encontrado`)\n        }\n        return await this.userModel.findOne({_id}).exec()\n    }\n\n    async consutarUserEmail(email: string){\n        return await this.userModel.findOne({ email }).exec()\n    }\n\n    async deletarUser(_id: string): Promise {\n        const vinculoEncontrado = await this.userModel.findOne({_id}).exec()\n        if(!vinculoEncontrado){\n            throw new BadRequestException(`Usuario com o _id ${_id} não encontrado`)\n        }\n        await this.userModel.deleteOne({_id}).exec()\n    }\n\n    async bcrypt(password){\n        const saltOrRounds = 10;\n        const hash = await bcrypt.hash(password, saltOrRounds);\n        return hash\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/categorias/categorias.controller.ts\n            \n            controller\n            CategoriasController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/categorias/categorias.service.ts\n            \n            injectable\n            CategoriasService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/categorias/dtos/create-categorias.dto.ts\n            \n            class\n            CreateCategoriaDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/categorias/dtos/update-categorias.dto.ts\n            \n            class\n            UpdateCategoriaDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/categorias/interfaces/categorias.interface.ts\n            \n            interface\n            Categoria\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/categorias/interfaces/categorias.schema.ts\n            \n            variable\n            CategoriaSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cidades/cidades.controller.ts\n            \n            controller\n            CidadesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cidades/cidades.service.ts\n            \n            injectable\n            CidadesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/cidades/dtos/create-cidades.dto.ts\n            \n            class\n            CreateCidadeDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cidades/dtos/update-cidades.dto.ts\n            \n            class\n            UpdateCidadeDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/cidades/interfaces/cidades.interface.ts\n            \n            interface\n            Cidade\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cidades/interfaces/cidades.schema.ts\n            \n            variable\n            CidadeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/clientes/clientes.controller.ts\n            \n            controller\n            ClientesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/clientes/clientes.service.ts\n            \n            injectable\n            ClientesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/clientes/dtos/create-clientes.dto.ts\n            \n            class\n            CreateClienteDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/clientes/dtos/update-clientes.dto.ts\n            \n            class\n            UpdateClienteDto\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/clientes/interfaces/clientes.interface.ts\n            \n            interface\n            Cliente\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/clientes/interfaces/clientes.schema.ts\n            \n            variable\n            ClienteSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/estados/dtos/create-estados.dto.ts\n            \n            class\n            CreateEstadoDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/estados/dtos/update-estados.dto.ts\n            \n            class\n            UpdateEstadoDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/estados/estados.controller.ts\n            \n            controller\n            EstadosController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/estados/estados.service.ts\n            \n            injectable\n            EstadosService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/estados/interfaces/estados.interface.ts\n            \n            interface\n            Estado\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/estados/interfaces/estados.schema.ts\n            \n            variable\n            EstadoSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/fornecedores/dtos/create-fornecedores.dto.ts\n            \n            class\n            CreateFornecedorDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/fornecedores/dtos/update-fornecedores.dto.ts\n            \n            class\n            UpdateFornecedorDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/fornecedores/fornecedores.controller.ts\n            \n            controller\n            FornecedoresController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/fornecedores/fornecedores.service.ts\n            \n            injectable\n            FornecedoresService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/fornecedores/interfaces/fornecedores.interface.ts\n            \n            interface\n            Fornecedor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/fornecedores/interfaces/fornecedores.schema.ts\n            \n            variable\n            FornecedorSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/origens/dtos/create-origens.dto.ts\n            \n            class\n            CreateOrigemDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/origens/dtos/update-origens.dto.ts\n            \n            class\n            UpdateOrigemDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/origens/interfaces/origens.interface.ts\n            \n            interface\n            Origem\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/origens/interfaces/origens.schema.ts\n            \n            variable\n            OrigemSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/origens/origens.controller.ts\n            \n            controller\n            OrigensController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/origens/origens.service.ts\n            \n            injectable\n            OrigensService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/produtos/dtos/create-produtos.dto.ts\n            \n            class\n            CreateProdutoDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/produtos/dtos/update-produtos.dto.ts\n            \n            class\n            UpdateProdutoDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/produtos/interfaces/produtos.interface.ts\n            \n            interface\n            Produto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/produtos/interfaces/produtos.schema.ts\n            \n            variable\n            ProdutoSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/produtos/produtos.controller.ts\n            \n            controller\n            ProdutosController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/produtos/produtos.service.ts\n            \n            injectable\n            ProdutosService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/profissoes/dtos/create-profissoes.dto.ts\n            \n            class\n            CreateProfissaoDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/profissoes/dtos/update-profissoes.dto.ts\n            \n            class\n            UpdateProfissaoDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/profissoes/interfaces/profissoes.interface.ts\n            \n            interface\n            Profissao\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/profissoes/interfaces/profissoes.schema.ts\n            \n            variable\n            ProfissaoSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/profissoes/profissoes.controller.ts\n            \n            controller\n            ProfissoesController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/profissoes/profissoes.service.ts\n            \n            injectable\n            ProfissoesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/status/dtos/create-status.dto.ts\n            \n            class\n            CreateStatusDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/status/dtos/update-status.dto.ts\n            \n            class\n            UpdateStatusDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/status/interfaces/status.interface.ts\n            \n            interface\n            Status\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/status/interfaces/status.schema.ts\n            \n            variable\n            StatusSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/status/status.controller.ts\n            \n            controller\n            StatusController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/status/status.service.ts\n            \n            injectable\n            StatusService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/tipos/dtos/create-tipos.dto.ts\n            \n            class\n            CreateTipoDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/tipos/dtos/update-tipos.dto.ts\n            \n            class\n            UpdateTipoDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/tipos/interfaces/tipos.interface.ts\n            \n            interface\n            Tipo\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/tipos/interfaces/tipos.schema.ts\n            \n            variable\n            TipoSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/tipos/tipos.controller.ts\n            \n            controller\n            TiposController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/tipos/tipos.service.ts\n            \n            injectable\n            TiposService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dtos/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/interfaces/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.4\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/mongoose : ^7.0.4\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @types/bcrypt : ^3.0.0\n        \n            @types/cookiejar : ^2.1.2\n        \n            @types/mongoose : ^5.10.3\n        \n            @types/uuid : ^8.3.0\n        \n            axios : ^0.21.1\n        \n            bcrypt : ^3.0.8\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            flatted : ^3.1.1\n        \n            fs : 0.0.1-security\n        \n            https : ^1.0.0\n        \n            mongoose : ^5.10.19\n        \n            node-localstorage : ^2.1.6\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            qs : ^6.9.4\n        \n            querystring : ^0.2.0\n        \n            reflect-metadata : ^0.1.13\n        \n            request : ^2.88.2\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.6\n        \n            uuid : ^8.3.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriasModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CidadesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ClientesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EstadosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FornecedoresModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrigensModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProdutosModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfissoesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TiposModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoriasModule\n\n\n\ncluster_CategoriasModule_exports\n\n\n\ncluster_CategoriasModule_providers\n\n\n\ncluster_CidadesModule\n\n\n\ncluster_CidadesModule_exports\n\n\n\ncluster_CidadesModule_providers\n\n\n\ncluster_ClientesModule\n\n\n\ncluster_ClientesModule_exports\n\n\n\ncluster_ClientesModule_providers\n\n\n\ncluster_EstadosModule\n\n\n\ncluster_EstadosModule_exports\n\n\n\ncluster_EstadosModule_providers\n\n\n\ncluster_FornecedoresModule\n\n\n\ncluster_FornecedoresModule_exports\n\n\n\ncluster_FornecedoresModule_providers\n\n\n\ncluster_OrigensModule\n\n\n\ncluster_OrigensModule_exports\n\n\n\ncluster_OrigensModule_providers\n\n\n\ncluster_ProdutosModule\n\n\n\ncluster_ProdutosModule_exports\n\n\n\ncluster_ProdutosModule_providers\n\n\n\ncluster_ProfissoesModule\n\n\n\ncluster_ProfissoesModule_exports\n\n\n\ncluster_ProfissoesModule_providers\n\n\n\ncluster_StatusModule\n\n\n\ncluster_StatusModule_exports\n\n\n\ncluster_StatusModule_providers\n\n\n\ncluster_TiposModule\n\n\n\ncluster_TiposModule_exports\n\n\n\ncluster_TiposModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriasModule\n\nCategoriasModule\n\nAppModule -->\n\nCategoriasModule->AppModule\n\n\n\n\n\nCategoriasService \n\nCategoriasService \n\nCategoriasService  -->\n\nCategoriasModule->CategoriasService \n\n\n\n\n\nCidadesModule\n\nCidadesModule\n\nAppModule -->\n\nCidadesModule->AppModule\n\n\n\n\n\nCidadesService \n\nCidadesService \n\nCidadesService  -->\n\nCidadesModule->CidadesService \n\n\n\n\n\nClientesModule\n\nClientesModule\n\nAppModule -->\n\nClientesModule->AppModule\n\n\n\n\n\nClientesService \n\nClientesService \n\nClientesService  -->\n\nClientesModule->ClientesService \n\n\n\n\n\nEstadosModule\n\nEstadosModule\n\nAppModule -->\n\nEstadosModule->AppModule\n\n\n\n\n\nEstadosService \n\nEstadosService \n\nEstadosService  -->\n\nEstadosModule->EstadosService \n\n\n\n\n\nFornecedoresModule\n\nFornecedoresModule\n\nAppModule -->\n\nFornecedoresModule->AppModule\n\n\n\n\n\nFornecedoresService \n\nFornecedoresService \n\nFornecedoresService  -->\n\nFornecedoresModule->FornecedoresService \n\n\n\n\n\nOrigensModule\n\nOrigensModule\n\nAppModule -->\n\nOrigensModule->AppModule\n\n\n\n\n\nOrigensService \n\nOrigensService \n\nOrigensService  -->\n\nOrigensModule->OrigensService \n\n\n\n\n\nProdutosModule\n\nProdutosModule\n\nAppModule -->\n\nProdutosModule->AppModule\n\n\n\n\n\nProdutosService \n\nProdutosService \n\nProdutosService  -->\n\nProdutosModule->ProdutosService \n\n\n\n\n\nProfissoesModule\n\nProfissoesModule\n\nAppModule -->\n\nProfissoesModule->AppModule\n\n\n\n\n\nProfissoesService \n\nProfissoesService \n\nProfissoesService  -->\n\nProfissoesModule->ProfissoesService \n\n\n\n\n\nStatusModule\n\nStatusModule\n\nAppModule -->\n\nStatusModule->AppModule\n\n\n\n\n\nStatusService \n\nStatusService \n\nStatusService  -->\n\nStatusModule->StatusService \n\n\n\n\n\nTiposModule\n\nTiposModule\n\nAppModule -->\n\nTiposModule->AppModule\n\n\n\n\n\nTiposService \n\nTiposService \n\nTiposService  -->\n\nTiposModule->TiposService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCategoriasService\n\nCategoriasService\n\nCategoriasModule -->\n\nCategoriasService->CategoriasModule\n\n\n\n\n\nCidadesService\n\nCidadesService\n\nCidadesModule -->\n\nCidadesService->CidadesModule\n\n\n\n\n\nClientesService\n\nClientesService\n\nClientesModule -->\n\nClientesService->ClientesModule\n\n\n\n\n\nEstadosService\n\nEstadosService\n\nEstadosModule -->\n\nEstadosService->EstadosModule\n\n\n\n\n\nFornecedoresService\n\nFornecedoresService\n\nFornecedoresModule -->\n\nFornecedoresService->FornecedoresModule\n\n\n\n\n\nOrigensService\n\nOrigensService\n\nOrigensModule -->\n\nOrigensService->OrigensModule\n\n\n\n\n\nProdutosService\n\nProdutosService\n\nProdutosModule -->\n\nProdutosService->ProdutosModule\n\n\n\n\n\nProfissoesService\n\nProfissoesService\n\nProfissoesModule -->\n\nProfissoesService->ProfissoesModule\n\n\n\n\n\nStatusService\n\nStatusService\n\nStatusModule -->\n\nStatusService->StatusModule\n\n\n\n\n\nTiposService\n\nTiposService\n\nTiposModule -->\n\nTiposService->TiposModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    16 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    22 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CategoriaSchema   (src/.../categorias.schema.ts)\n                        \n                        \n                            CidadeSchema   (src/.../cidades.schema.ts)\n                        \n                        \n                            ClienteSchema   (src/.../clientes.schema.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            EstadoSchema   (src/.../estados.schema.ts)\n                        \n                        \n                            FornecedorSchema   (src/.../fornecedores.schema.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            OrigemSchema   (src/.../origens.schema.ts)\n                        \n                        \n                            ProdutoSchema   (src/.../produtos.schema.ts)\n                        \n                        \n                            ProfissaoSchema   (src/.../profissoes.schema.ts)\n                        \n                        \n                            StatusSchema   (src/.../status.schema.ts)\n                        \n                        \n                            TipoSchema   (src/.../tipos.schema.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/categorias/interfaces/categorias.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CategoriaSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    nome: {\n        type: String,\n        required: true\n    },\n    status: {\n        type: String,\n        required: true\n    },\n    createdAt: {\n        type: Date, \n        default: Date.now\n    },\n    updatedAt: {\n        type: Date, \n        default: Date.now\n    }\n}, { timestamps: true, collection: 'categorias' })\n                        \n                    \n\n\n            \n        \n\n    src/cidades/interfaces/cidades.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CidadeSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    uf: {\n        type: String,\n        required: true\n    },\n    nome: {\n        type: String,\n        required: true\n    },\n    estado_id: {\n        type: String,\n        required: true\n    },\n    createdAt: {\n        type: Date, \n        default: Date.now\n    },\n    updatedAt: {\n        type: Date, \n        default: Date.now\n    }\n}, { timestamps: true, collection: 'cidades' })\n                        \n                    \n\n\n            \n        \n\n    src/clientes/interfaces/clientes.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ClienteSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    nome: {\n        type: String,\n        required: true\n    },\n    tipo: {\n        type: String,\n        required: true\n    },\n    createdAt: {\n        type: Date, \n        default: Date.now\n    },\n    updatedAt: {\n        type: Date, \n        default: Date.now\n    }\n}, { timestamps: true, collection: 'clientes' })\n                        \n                    \n\n\n            \n        \n\n    src/common/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    db: {\n        url: process.env.DB_URL || 'mongodb://localhost:27017'\n        //url: process.env.DB_URL || 'mongodb://potencialUserHomolog:rewq987aa@200.219.222.90:27017'\n    },\n    security: {\n        saltRounds: process.env.SALT_ROUNDS || 10\n    }\n}\n                        \n                    \n\n\n            \n        \n\n    src/estados/interfaces/estados.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EstadoSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    uf: {\n        type: String,\n        required: true\n    },\n    nome: {\n        type: String,\n        required: true\n    },\n    createdAt: {\n        type: Date, \n        default: Date.now\n    },\n    updatedAt: {\n        type: Date, \n        default: Date.now\n    }\n}, { timestamps: true, collection: 'estados' })\n                        \n                    \n\n\n            \n        \n\n    src/fornecedores/interfaces/fornecedores.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FornecedorSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    nome: {\n        type: String,\n        required: true\n    },\n    status: {\n        type: String,\n        required: true\n    },\n    createdAt: {\n        type: Date, \n        default: Date.now\n    },\n    updatedAt: {\n        type: Date, \n        default: Date.now\n    }\n}, { timestamps: true, collection: 'fornecedores' })\n                        \n                    \n\n\n            \n        \n\n    src/auth/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    secret: '5347y5467ytryert43523432ew'\n}\n                        \n                    \n\n\n            \n        \n\n    src/origens/interfaces/origens.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            OrigemSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    nome: {\n        type: String,\n        required: true\n    },\n    status: {\n        type: Number,\n        required: true\n    },\n    createdAt: {\n        type: Date, \n        default: Date.now\n    },\n    updatedAt: {\n        type: Date, \n        default: Date.now\n    }\n}, { timestamps: true, collection: 'origens' })\n                        \n                    \n\n\n            \n        \n\n    src/produtos/interfaces/produtos.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ProdutoSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    nome: {\n        type: String,\n        required: true\n    },\n    valor: {\n        type: Number,\n        required: true\n    },\n    tipo: {\n        type: String,\n        required: true\n    },\n    categoria: {\n        type: String,\n        required: true\n    },\n    status: {\n        type: String,\n        required: true\n    },\n    fornecedor: {\n        type: String,\n        required: true\n    },\n    createdAt: {\n        type: Date, \n        default: Date.now\n    },\n    updatedAt: {\n        type: Date, \n        default: Date.now\n    }\n}, { timestamps: true, collection: 'produtos' })\n                        \n                    \n\n\n            \n        \n\n    src/profissoes/interfaces/profissoes.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ProfissaoSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    nome: {\n        type: String,\n        required: true\n    },\n    status: {\n        type: String,\n        required: true\n    },\n    createdAt: {\n        type: Date, \n        default: Date.now\n    },\n    updatedAt: {\n        type: Date, \n        default: Date.now\n    }\n}, { timestamps: true, collection: 'profissoes' })\n                        \n                    \n\n\n            \n        \n\n    src/status/interfaces/status.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            StatusSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    nome: {\n        type: String,\n        required: true\n    },\n    tipo: {\n        type: String,\n        required: true\n    },\n    createdAt: {\n        type: Date, \n        default: Date.now\n    },\n    updatedAt: {\n        type: Date, \n        default: Date.now\n    }\n}, { timestamps: true, collection: 'status' })\n                        \n                    \n\n\n            \n        \n\n    src/tipos/interfaces/tipos.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TipoSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    nome: {\n        type: String,\n        required: true\n    },\n    tipo: {\n        type: String,\n        required: true\n    },\n    createdAt: {\n        type: Date, \n        default: Date.now\n    },\n    updatedAt: {\n        type: Date, \n        default: Date.now\n    }\n}, { timestamps: true, collection: 'tipos' })\n                        \n                    \n\n\n            \n        \n\n    src/users/interfaces/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    nome: {\n        type: String,\n        required: true\n    },\n    email: {\n        type: String,\n        unique: true,\n        required: true\n    },\n    password: {\n        type: String,\n        required: true\n    },\n    tipo: {\n        type: String,\n        required: true\n    },\n    status: {\n        type: String,\n        required: true\n    },\n    createdAt: {\n        type: Date, \n        default: Date.now\n    },\n    updatedAt: {\n        type: Date, \n        default: Date.now\n    }\n}, { timestamps: true, collection: 'users' })\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
